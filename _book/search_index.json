[["index.html", "An Introduction to Statistical Learning with the tidyverse Who, what, and why?", " An Introduction to Statistical Learning with the tidyverse Taylor Dunn 2022-02-02 Who, what, and why? I am a data scientist and statistician who is (mostly) self-taught from textbooks and generous people sharing their work online. Inspired by projects like Solomon Kurzs recoding of Statistical Rethinking, I decided to publicly document my notes and code as I work through An Introduction to Statistical Learning, 2nd edition by Gareth James, Daniela Witten, Trevor Hastie, and Robert Tibshirani. I prefer to work with the tidyverse collection of R packages, and so will be using those to wrangle and visualize the data. Along the way, Ill be teaching myself the tidymodels framework for machine learning. In general, my plan for each chapter/concept is to start with the original modeling package, then move towards the tidymodels approach in the labs and exercises. For example, Ill first perform logistic regression with glm(), then use parsnip::logistic_reg() by the end of the chapter. I think this will help me better appreciate the unified interface provided with tidymodels, and maybe help me better understand what is going on under the hood. I wont be doing every exercise or section. My main goal for this project is to improve my statistical programming, so I will focus on the applied exercises rather than the conceptual. "],["introduction.html", "1 Introduction An Overview of Statistical Learning A Brief History of Statistical Learning This Book", " 1 Introduction An Overview of Statistical Learning Broadly speaking, supervised statistical learning involves building a statistical model for predicting, or estimating, an output based on one or more inputs. With unsupervised statistical learning, there are inputs but no supervising output; nevertheless we can learn relationships and structure from such data. Wage Data Load the Wage data set via the ISLR2 package: library(ISLR2) wage &lt;- ISLR2::Wage head(wage) ## year age maritl race education region ## 231655 2006 18 1. Never Married 1. White 1. &lt; HS Grad 2. Middle Atlantic ## 86582 2004 24 1. Never Married 1. White 4. College Grad 2. Middle Atlantic ## 161300 2003 45 2. Married 1. White 3. Some College 2. Middle Atlantic ## 155159 2003 43 2. Married 3. Asian 4. College Grad 2. Middle Atlantic ## 11443 2005 50 4. Divorced 1. White 2. HS Grad 2. Middle Atlantic ## 376662 2008 54 2. Married 1. White 4. College Grad 2. Middle Atlantic ## jobclass health health_ins logwage wage ## 231655 1. Industrial 1. &lt;=Good 2. No 4.318063 75.04315 ## 86582 2. Information 2. &gt;=Very Good 2. No 4.255273 70.47602 ## 161300 1. Industrial 1. &lt;=Good 1. Yes 4.875061 130.98218 ## 155159 2. Information 2. &gt;=Very Good 1. Yes 5.041393 154.68529 ## 11443 2. Information 1. &lt;=Good 1. Yes 4.318063 75.04315 ## 376662 2. Information 2. &gt;=Very Good 1. Yes 4.845098 127.11574 Load the tidyverse, and set my ggplot2 theme: library(tidyverse) library(dunnr) # My personal R package library(patchwork) # For composing plots extrafont::loadfonts(device = &quot;win&quot;, quiet = TRUE) theme_set(theme_td()) set_geom_fonts() set_palette() Now attempt to re-create Figure 1.1: p1 &lt;- wage %&gt;% ggplot(aes(x = age, y = wage)) + geom_point(color = &quot;lightgrey&quot;) + geom_smooth(color = &quot;blue&quot;) p2 &lt;- wage %&gt;% ggplot(aes(x = year, y = wage)) + geom_point(color = &quot;lightgrey&quot;) + geom_smooth(method = &quot;lm&quot;, color = &quot;blue&quot;) p3 &lt;- wage %&gt;% # Need to re-label the factor levels mutate(education = fct_relabel(education, ~str_extract(., &quot;\\\\d&quot;))) %&gt;% ggplot(aes(x = education, y = wage)) + geom_boxplot(aes(fill = education)) + theme(legend.position = &quot;none&quot;) p1 + p2 + p3 A Brief History of Statistical Learning This Book The Elements of Statistical Learning (ESL) by Hastie, Tibshirani, and Friedman was first published in 2001. Since that time, it has become an important reference on the fundamentals of statistical machine learning. Its success derives from its comprehensive and detailed treatment of many important topics in statistical learning, as well as the fact that (relative to many upper-level statistics textbooks) it is accessible to a wide audience. The purpose of An Introduction to Statistical Learning (ISL) is to facilitate the transition of statistical learning from an academic to a mainstream field. ISL is not intended to replace ESL, which is a far more comprehensive text both in terms of the number of approaches considered and the depth to which they are explored. I may also pull from ESL (Hastie, Tibshirani, and Friedman 2009) at times for more detailed treatments of complex topics. ISL is based on the following four premises 1. Many statistical learning methods are relevant and useful in a wide range of academic and non-academic disciplines, beyond just the statistical sciences. 2. Statistical learning should not be viewed as a series of black boxes. 3. While it is important to know what job is performed by each cog, it is not necessary to have the skills to construct the machine inside the box! 4. We presume that the reader is interested in applying statistical learning methods to real-world problems. References "],["statistical-learning.html", "2 Statistical Learning 2.1 What Is Statistical Learning? 2.2 Assessing Model Accuracy 2.3 Lab: Introduction to R", " 2 Statistical Learning 2.1 What Is Statistical Learning? For a quantitative response \\(Y\\) and \\(p\\) different predictors \\(X_1, X_2, \\dots, X_p\\), we assume there is some relationship between \\(Y\\) and the predictors \\(X\\). This can be written in the very general form: \\[ Y = f(X) + \\epsilon \\] where \\(f\\) is some fixed but unkown function of \\(X_1, \\dots, X_p\\), and \\(\\epsilon\\) is a random error term, which is independent of \\(X\\) and has mean zero. In essence, statistical learning refers to a set of approaches for estimating f. In this chapter we outline some of the key theoretical concepts that arise in estimating f, as well as tools for evaluating the estimates obtained 2.1.1 Why Estimate \\(f\\)? For prediction and inference. Prediction In cases where inputs \\(X\\) are available, but output \\(Y\\) is not easily obtained, we can predict \\(Y\\) using \\[ \\hat{Y} = \\hat{f}(X) \\] where \\(\\hat{f}\\) represents our estimate for \\(f\\), and \\(\\hat{Y}\\) represents our prediction for \\(Y\\). We dont necessarily care about the form of \\(\\hat{f}\\)  it can be treated as a block box as long as it gives good predictions. Inference When we are interested in understanding the association between \\(Y\\) and \\(X\\), we wish to estimate \\(\\hat{f}\\) and know its exact form (i.e. we dont treat it as a block box). Depending on whether our ultimate goal is prediction, inference, or a combination of the two, different methods for estimating f may be appropriate. For example, linear models allow for relatively simple and inter- linear model pretable inference, but may not yield as accurate predictions as some other approaches. In contrast, some of the highly non-linear approaches that we discuss in the later chapters of this book can potentially provide quite accurate predictions for Y , but this comes at the expense of a less interpretable model for which inference is more challenging. 2.1.2 How Do We Estimate f? Our goal is to apply a statistical learning method to the training data in order to estimate the unknown function \\(f\\). In other words, we want to find a function \\(\\hat{f}\\) such that \\(Y \\approx \\hat{f}(X)\\) for any observation \\((X, Y)\\). Broadly speaking, most statistical learning methods for this task can be characterized as either parametric or non-parametric. We now briefly discuss these two types of approaches. Parametric Methods The parametric method involves estimating a set of parameters. It is a two-step model-based approach: Make an assumption about the function form or shape of \\(f\\). Fit or train the model. A simple assumption is that \\(f\\) is linear in \\(X\\): \\[ f(X) = \\beta_0 + \\beta_1 X_1 + \\dots + \\beta_p X_p \\] In the case of this linear model, we need to estimate the \\(\\beta\\) parameters such that \\(Y \\approx \\beta_0 + \\dots + \\beta_p X_p\\). The most common approach to fitting a model like this is (ordinary) least squares. Non-Parametric Methods Non-parametric methods do not make explicit assumptions about the functional form of \\(f\\). Instead they seek an estimate of \\(f\\) that gets as close to the data points as possible without being too rough or wiggly. Such approaches can have a major advantage over parametric approaches: by avoiding the assumption of a particular functional form for \\(f\\), they have the potential to accurately fit a wider range of possible shapes for \\(f\\). 2.1.3 The Trade-Off Between Prediction Accuracy and Model Interpretability One might reasonably ask the following question: why would we ever choose to use a more restrictive method instead of a very flexible approach? There are several reasons that we might prefer a more restrictive model. If we are mainly interested in inference, then restrictive models are much more interpretable. We have established that when inference is the goal, there are clear advantages to using simple and relatively inflexible statistical learning methods. In some settings, however, we are only interested in prediction, and the interpretability of the predictive model is simply not of interest. For instance, if we seek to develop an algorithm to predict the price of a stock, our sole requirement for the algorithm is that it predict accurately interpretability is not a concern. In this setting, we might expect that it will be best to use the most flexible model available. Surprisingly, this is not always the case! We will often obtain more accurate predictions using a less flexible method. 2.1.4 Supervised Versus Unsupervised Learning Supervised for each observation, there is an associated response we wish to fit a model that relates the response to predictors, with the aim of accurately predicting the response, or for better understanding the relationships the focus of the book Unsupervised no associated response we can seek to understand relationships between variables or between observations one example: cluster analysis 2.2 Assessing Model Accuracy There is no free lunch in statistics: no one method dominates all others over all possible data sets. On a particular data set, one specific method may work best, but some other method may work better on a similar but different data set. Hence it is an important task to decide for any given set of data which method produces the best results. Selecting the best approach can be one of the most challenging parts of performing statistical learning in practice. 2.2.1 Measuring the Quality of Fit In the regression setting, the most commonly-used measure is the mean squared error (MSE): \\[ \\text{MSE} = \\frac{1}{n} \\sum_{i=1}^n (y_i - \\hat{f}(x_i))^2 \\] We compute MSE with both training and testing data sets, but care much more about the latter. The goal is to minimize the testing MSE, but what if we only have training data? It is not always the case that we want to take the model that minimizes the training MSE due to overfitting. In practice, one can usually compute the training MSE with relative ease, but estimating test MSE is considerably more difficult because usually no test data are available. As the previous three examples illustrate, the flexibility level corresponding to the model with the minimal test MSE can vary considerably among data sets. 2.2.2 The Bias-Variance Trade-Off The expected test MSE for a given value of \\(x_0\\) can be decomposed into the sum of three quantities: \\[ E(y - \\hat{f}(x_0))^2 = \\text{Var}(\\hat{f}(x_0)) + [\\text{Bias}(\\hat{f}(x_0))]^2 + \\text{Var}(\\epsilon) \\] This tells us that, to minimize MSE, we need to select a statistical learning method that achieves low variance and low bias (because the variance of the error term is irreducible). The variance here refers to the amount by which \\(\\hat{f}\\) would change if estimated using different training data. This is minimized by more rigid models; flexible models tend to have high variance. The bias is, conceptually, the error introduced by approximating a complex real-life scenario with a much simpler model. A linear regression model tends to introduce much bias due to the very simplified assumption of linear relationships. Flexible methods tend to result in less bias. 2.2.3 The Classification Setting When estimating \\(f\\) with qualitative \\(y\\), the most common approach for quantifying accuracy is the training error rate. This is the proportion of mistakes made by \\(\\hat{f}\\) to the training data: \\[ \\frac{1}{n} \\sum_{i=1}^n I(y_i \\neq \\hat{y}_i) \\] As with the regression setting, we seek a classifier for which the test error rate is smallest. The Bayes Classifier It is possible to show (though the proof is outside of the scope of this book) that the test error rate given in (2.9) is minimized, on average, by a very simple classifier that assigns each observation to the most likely class, given its predictor values. In other words, we should simply assign a test observation with predictor vector \\(x_0\\) to the class \\(j\\) for which \\[ \\text{Pr}(Y = j | X = x_0) \\] is largest This very simple classifier is called the Bayes classifer. The Bayes error rate is analogous to the irreducible error, in that classes may overlap and cannot be correctly classified. \\(K\\)-Nearest Neighbors The Bayes classifier is the gold standard, but unattainable for real data because we do not know the conditional distribution \\(\\text{Pr}(Y|X)\\). One method to which to compared is the \\(K\\)-nearest neighbors (KNN) classifier. For a test observation \\(x_0\\), KNN involves identifying the \\(K\\) nearest points in the training data that are closest to \\(x_0\\), represented by \\(\\mathcal{N}_0\\). It then estimates the conditional probability of the classes using the fraction of the points: \\[ \\text{Pr}(Y = j|X = x_0) = \\frac{1}{K} \\sum_{i \\in \\mathcal{N}_0} I (y_i = j). \\] KNN classifies\\(x_0\\) into the class \\(k\\) with the highest probability. The choices of \\(k\\) has a drastic effect on the performance of the classifer. \\(K = 1\\) is the most flexible, i.e. low bias but high variance. A large value of \\(K\\) (which is relative to the density of points) is the least flexible, i.e. high bias but low variance. 2.3 Lab: Introduction to R Ill be skipping this, as it is just a basic introduction of base R. "],["linear-regression.html", "3 Linear Regression 3.1 Simple Linear Regression 3.2 Multiple Linear Regression 3.3 Other Considerations in the Regression Model 3.4 The Marketing Plan 3.5 Comparison of Linear Regression with \\(K\\)-Nearest Neighbors 3.6 Lab: Linear Regression 3.7 Exercises Reproducibility", " 3 Linear Regression 3.1 Simple Linear Regression A straightforward approach of predicting a quantitative \\(Y\\) from a single predictor \\(X\\), assuming an approximately linear relationship: \\[ Y \\approx \\beta_0 + \\beta_1 X \\] 3.1.1 Estimating the Coefficients Our goal is to obtain estimates of the coefficients \\(\\hat{\\beta}_0\\) and \\(\\hat{\\beta}_1\\) such that the linear model fits the data well. There are a number of ways of evaluating fit to data, but by far the most common approach is the least squares criterion. We define the residual sum of squares (RSS) as \\[ \\text{RSS} = e_1^2 + e_2^2 + \\dots + e_n^2 \\] where \\(e_i = y_i - \\hat{y}\\) is the \\(i\\)th (out of \\(n\\)) residual. The least squares approach chooses \\(\\hat{\\beta}_0\\) and \\(\\hat{\\beta}_1\\) to minimize the RSS. Using some calculus, one can show that \\[ \\begin{align} \\hat{\\beta}_1 &amp;= \\frac{\\sum (x_i - \\bar{x})(y_i - \\bar{y})}{\\sum (x_i - \\bar{x})^2}\\\\ \\hat{\\beta}_0 &amp;= \\bar{y} - \\hat{\\beta}_1 \\bar{x} \\end{align} \\] To re-create Figure 3.1, import the Advertising data set: library(tidyverse) library(here) # Load my R package and set the ggplot theme library(dunnr) extrafont::loadfonts(device = &quot;win&quot;, quiet = TRUE) theme_set(theme_td()) set_geom_fonts() set_palette() advertising &lt;- read_csv(here(&quot;data&quot;, &quot;Advertising.csv&quot;)) glimpse(advertising) ## Rows: 200 ## Columns: 5 ## $ ...1 &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 1~ ## $ TV &lt;dbl&gt; 230.1, 44.5, 17.2, 151.5, 180.8, 8.7, 57.5, 120.2, 8.6, 199.~ ## $ radio &lt;dbl&gt; 37.8, 39.3, 45.9, 41.3, 10.8, 48.9, 32.8, 19.6, 2.1, 2.6, 5.~ ## $ newspaper &lt;dbl&gt; 69.2, 45.1, 69.3, 58.5, 58.4, 75.0, 23.5, 11.6, 1.0, 21.2, 2~ ## $ sales &lt;dbl&gt; 22.1, 10.4, 9.3, 18.5, 12.9, 7.2, 11.8, 13.2, 4.8, 10.6, 8.6~ Fit the simple linear model and draw the residuals to the line of best fit: lm_sales_tv &lt;- lm(sales ~ TV, data = advertising) advertising %&gt;% bind_cols( pred_sales = predict(lm_sales_tv, data = advertising) ) %&gt;% ggplot(aes(x = TV)) + geom_linerange(aes(ymin = sales, ymax = pred_sales)) + geom_point(aes(y = sales), color = &quot;red&quot;) + geom_abline(intercept = coef(lm_sales_tv)[1], slope = coef(lm_sales_tv)[2], color = &quot;blue&quot;, size = 1) We recover the same regression coefficients: \\(\\beta_0\\) = 7.03 and \\(\\beta_1\\) = 0.048. 3.1.2 Assessing the Accuracy of the Coefficient Estimates The analogy between linear regression and estimation of the mean of a random variable is an apt one based on the concept of bias. If we use the bias sample mean \\(\\hat{\\mu}\\) to estimate \\(\\mu\\), this estimate is unbiased, in the sense that unbiased on average, we expect \\(\\hat{\\mu}\\) to equal \\(\\mu\\). What exactly does this mean? It means that on the basis of one particular set of observations \\(y_1,\\dots, y_n\\), \\(\\hat{\\mu}\\) might overestimate \\(\\mu\\), and on the basis of another set of observations, \\(\\hat{\\mu}\\) might underestimate \\(\\mu\\). But if we could average a huge number of estimates of \\(\\mu\\) obtained from a huge number of sets of observations, then this average would exactly equal \\(\\mu\\). Hence, an unbiased estimator does not systematically over- or under-estimate the true parameter. A natural question is as follows: how accurate is the sample mean \\(\\hat{\\mu}\\) as an estimate of \\(\\mu\\)? We have established that the average of \\(\\hat{\\mu}\\)s over many data sets will be very close to \\(\\mu\\), but that a single estimate \\(\\hat{\\mu}\\) may be a substantial underestimate or overestimate of \\(\\mu\\). How far off will that single estimate of \\(\\hat{\\mu}\\) be? In general, we answer this question by computing the standard error of \\(\\hat{\\mu}\\), written as SE(\\(\\hat{\\mu}\\)). \\[ \\text{Var}(\\hat{\\mu}) = \\text{SE}(\\hat{\\mu})^2 = \\frac{\\sigma^2}{n} \\] where \\(\\sigma\\) is the standard deviation of each of the realizations \\(y_i\\) of \\(Y\\). Roughly speaking, the standard error tells us the average amount that this estimate \\(\\hat{\\mu}\\) differs from the actual value of \\(\\mu\\). To compute the standard errors associated with \\(\\hat{\\beta}_0\\) and \\(\\hat{\\beta}_1\\), we use the following formulas: \\[ \\begin{align} \\text{SE}(\\hat{\\beta}_0)^2 &amp;= \\sigma^2 \\left[ \\frac{1}{n} + \\frac{\\bar{x}^2}{\\sum (x_i - \\bar{x})^2}\\right] \\\\ \\text{SE}(\\hat{\\beta}_1)^2 &amp;= \\frac{\\sigma^2}{\\sum (x_i - \\bar{x})^2} \\end{align} \\] where \\(\\sigma^2 = \\text{Var}(\\epsilon)\\). In general, \\(\\sigma^2\\) is not known, but can be estimated from the data. This estimate of \\(\\sigma\\) is known as the residual standard error, and is given by the formula \\(\\text{RSE} = \\sqrt{\\text{RSS}/(n-2)}\\). For linear regression, we get approximate 95% confidence intervals for the coefficients as: \\[ \\begin{align} \\hat{\\beta}_1 \\pm 2 \\text{SE}(\\hat{\\beta}_1) \\\\ \\hat{\\beta}_0 \\pm 2 \\text{SE}(\\hat{\\beta}_0). \\end{align} \\] These approximations assume that the errors are Gaussian, and the factor of 2 will vary depending on the number of observations \\(n\\). The true value of this factor is the 2.5% and 97.5% quantile of a \\(t\\)-distribution with \\(n-2\\) degrees of freedom. We can show this with the stats::qt function: tibble( n = c(10, 50, 100, 500, 1000) ) %&gt;% mutate( qt_low = qt(p = 0.025, df = n - 2), qt_high = qt(p = 0.975, df = n - 2) ) %&gt;% gt::gt() html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #jkupzcszvb .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #jkupzcszvb .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #jkupzcszvb .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #jkupzcszvb .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #jkupzcszvb .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #jkupzcszvb .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #jkupzcszvb .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #jkupzcszvb .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #jkupzcszvb .gt_column_spanner_outer:first-child { padding-left: 0; } #jkupzcszvb .gt_column_spanner_outer:last-child { padding-right: 0; } #jkupzcszvb .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #jkupzcszvb .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #jkupzcszvb .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #jkupzcszvb .gt_from_md > :first-child { margin-top: 0; } #jkupzcszvb .gt_from_md > :last-child { margin-bottom: 0; } #jkupzcszvb .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #jkupzcszvb .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #jkupzcszvb .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #jkupzcszvb .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #jkupzcszvb .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #jkupzcszvb .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #jkupzcszvb .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #jkupzcszvb .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #jkupzcszvb .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #jkupzcszvb .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #jkupzcszvb .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #jkupzcszvb .gt_sourcenote { font-size: 90%; padding: 4px; } #jkupzcszvb .gt_left { text-align: left; } #jkupzcszvb .gt_center { text-align: center; } #jkupzcszvb .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #jkupzcszvb .gt_font_normal { font-weight: normal; } #jkupzcszvb .gt_font_bold { font-weight: bold; } #jkupzcszvb .gt_font_italic { font-style: italic; } #jkupzcszvb .gt_super { font-size: 65%; } #jkupzcszvb .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } n qt_low qt_high 10 -2.306004 2.306004 50 -2.010635 2.010635 100 -1.984467 1.984467 500 -1.964739 1.964739 1000 -1.962344 1.962344 The quickest way to get the 95% confidence intervals for the coefficients is with stats::confint(): confint(lm_sales_tv) ## 2.5 % 97.5 % ## (Intercept) 6.12971927 7.93546783 ## TV 0.04223072 0.05284256 Computing them manually requires the standard errors of the coefficients. For this, I prefer broom::tidy: library(broom) tidy(lm_sales_tv) ## # A tibble: 2 x 5 ## term estimate std.error statistic p.value ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 (Intercept) 7.03 0.458 15.4 1.41e-35 ## 2 TV 0.0475 0.00269 17.7 1.47e-42 Here is how you would calculate the SEs manually: n_obs &lt;- nrow(advertising) bar_x &lt;- mean(advertising$TV) # Residual sum of squares lm_sales_tv_rss &lt;- sum(resid(lm_sales_tv)^2) # Residual standard error (our estimate of sigma, the variance of errors) lm_sales_tv_rse &lt;- sqrt(lm_sales_tv_rss / (n_obs - 2)) # Intercept SE beta0_se &lt;- sqrt( lm_sales_tv_rse^2 * ((1 / n_obs) + bar_x^2 / (sum((advertising$TV - bar_x)^2))) ) # Slope SE beta1_se &lt;- sqrt( lm_sales_tv_rse^2 / (sum((advertising$TV - bar_x)^2)) ) c(beta0_se, beta1_se) ## [1] 0.457842940 0.002690607 Then get the 95% confidence intervals: tidy(lm_sales_tv) %&gt;% transmute( term, estimate, mult_fact = 2.0, ci_lower = estimate - mult_fact * std.error, ci_upper = estimate + mult_fact * std.error ) ## # A tibble: 2 x 5 ## term estimate mult_fact ci_lower ci_upper ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 (Intercept) 7.03 2 6.12 7.95 ## 2 TV 0.0475 2 0.0422 0.0529 Note that the intervals dont exactly match those in the text. The true multiplication factor of the SEs for this data with 200 observations is 1.9720175: tidy(lm_sales_tv) %&gt;% transmute( term, estimate, mult_fact = qt(0.975, n_obs-2), ci_lower = estimate - mult_fact * std.error, ci_upper = estimate + mult_fact * std.error ) ## # A tibble: 2 x 5 ## term estimate mult_fact ci_lower ci_upper ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 (Intercept) 7.03 1.97 6.13 7.94 ## 2 TV 0.0475 1.97 0.0422 0.0528 To test the null hypothesis that there is no relationship between \\(X\\) and \\(Y\\), we copmute a \\(t\\)-statistic as: \\[ t = \\frac{\\hat{\\beta}_1 - 0}{\\text{SE}(\\hat{\\beta}_1)} \\] where we have written out the \\(- 0\\) to explicitly indicate the alternative hypothesis that \\(\\beta_1\\) is different from 0. If the null is true, then we expect that the above formula will have a \\(t\\)-distribution with \\(n-2\\) degrees of freedom. Then taking the \\(t\\) value returned by our model, we compute the probability of observing a value equal to or greater than that value assuming \\(\\beta_1 = 0\\). This probability is the \\(p\\)-value. The \\(t\\)-statistics are returned by broom::tidy as the statistic variable. It also returns the \\(p\\)-values, which we can manually compute as well with stats::pt: tidy(lm_sales_tv) %&gt;% mutate( p.value_manual = 2 * pt(-statistic, df = n_obs - 2) ) ## # A tibble: 2 x 6 ## term estimate std.error statistic p.value p.value_manual ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 (Intercept) 7.03 0.458 15.4 1.41e-35 1.41e-35 ## 2 TV 0.0475 0.00269 17.7 1.47e-42 1.47e-42 3.1.3 Assessing the Accuracy of the Model The quality of a linear regression fit is typically assessed using two related quantities: the residual standard error (RSE) and the \\(R^2\\) statistic. The broom::glance function gives summary statistics of a model: glance(lm_sales_tv) ## # A tibble: 1 x 12 ## r.squared adj.r.squared sigma statistic p.value df logLik AIC BIC ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 0.612 0.610 3.26 312. 1.47e-42 1 -519. 1044. 1054. ## # ... with 3 more variables: deviance &lt;dbl&gt;, df.residual &lt;int&gt;, nobs &lt;int&gt; Residual Standard Error The residual standard error (RSE) is sigma, variance explained \\(R^2\\) is r.squared, and the \\(F\\)-statistic is statistic. With this, we can re-create Table 3.2: library(gt) glance(lm_sales_tv) %&gt;% transmute(`Residual standard error` = round(sigma, 2), `R2` = round(r.squared, 3), `F-statistic` = round(statistic, 1)) %&gt;% mutate(across(everything(), as.character)) %&gt;% pivot_longer(everything(), names_to = &quot;Quantity&quot;, values_to = &quot;Value&quot;) %&gt;% gt() html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #prijoaohyr .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #prijoaohyr .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #prijoaohyr .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #prijoaohyr .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #prijoaohyr .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #prijoaohyr .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #prijoaohyr .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #prijoaohyr .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #prijoaohyr .gt_column_spanner_outer:first-child { padding-left: 0; } #prijoaohyr .gt_column_spanner_outer:last-child { padding-right: 0; } #prijoaohyr .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #prijoaohyr .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #prijoaohyr .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #prijoaohyr .gt_from_md > :first-child { margin-top: 0; } #prijoaohyr .gt_from_md > :last-child { margin-bottom: 0; } #prijoaohyr .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #prijoaohyr .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #prijoaohyr .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #prijoaohyr .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #prijoaohyr .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #prijoaohyr .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #prijoaohyr .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #prijoaohyr .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #prijoaohyr .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #prijoaohyr .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #prijoaohyr .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #prijoaohyr .gt_sourcenote { font-size: 90%; padding: 4px; } #prijoaohyr .gt_left { text-align: left; } #prijoaohyr .gt_center { text-align: center; } #prijoaohyr .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #prijoaohyr .gt_font_normal { font-weight: normal; } #prijoaohyr .gt_font_bold { font-weight: bold; } #prijoaohyr .gt_font_italic { font-style: italic; } #prijoaohyr .gt_super { font-size: 65%; } #prijoaohyr .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } Quantity Value Residual standard error 3.26 R2 0.612 F-statistic 312.1 \\(R^2\\) Statistic The RSE provides an absolute measure of lack of fit of the model (3.5) to the data. But since it is measured in the units of \\(Y\\), it is not always clear what constitutes a good RSE. The \\(R^2\\) statistic provides an alternative measure of fit. It takes the form of a proportionthe proportion of variance explained - and so it always takes on a value between 0 and 1, and is independent of the scale of \\(Y\\). \\[ R^2 = \\frac{\\text{TSS} - \\text{RSS}}{\\text{TSS}} = 1 - \\frac{\\text{RSS}}{\\text{TSS}} \\] where \\(\\text{TSS} = \\sum (y_i - \\bar{y})^2\\) is the total sum of squares. The easiest way to think of it in linear regression terms, is as a measure of improvement by the sloped line over a horizontal line (the mean of \\(Y\\)) through the data. The correlation between variables: \\[ \\text{Cor}(X, Y) = \\frac{\\sum (x_i - \\bar{x})(y_i - \\bar{y})}{\\sqrt{\\sum (x_i - \\bar{x})^2} \\sqrt{\\sum (y_i - \\bar{y})^2}} \\] is exactly the same in the linear regression setting, \\(R^2 = r^2\\). In multivariable regression (the next section), this is (usually) not the case, in which case we use \\(R^2\\). 3.2 Multiple Linear Regression Simple linear regression is a useful approach for predicting a response on the basis of a single predictor variable. However, in practice we often have more than one predictor. One option is to run three separate simple linear regressions,  However, the approach of fitting a separate simple linear regression model for each predictor is not entirely satisfactory Instead of fitting a separate simple linear regression model for each predictor, a better approach is to extend the simple linear regression model (3.5) so that it can directly accommodate multiple predictors. The model with \\(p\\) predictors takes the form: \\[ Y = \\beta_0 + \\beta_1 X_1 + \\beta_2 X_2 + \\dots + \\beta_p X_p + \\epsilon. \\] We interpret the slope \\(\\beta_j\\) as the average effect on \\(Y\\) by a one unit increase in \\(X_j\\) while holding all other predictors fixed. 3.2.1 Estimating the Regression Coefficients The parameters are estimated using the same least squares approach as simple linear regression: choose \\(\\beta_0 \\dots \\beta_p\\) to minimize RSS. However, the formula to estimate these parameters have more complicated forms that are harder to interpret than in simple regression. Re-create Table 3.4 by regressing sales on TV, radio, and newspaper: lm_sales_mult &lt;- lm(sales ~ TV + radio + newspaper, data = advertising) # Since I will be reproducing this table often, write a function tidy_custom &lt;- function(mod, coef_round = 3, se_round = 4, t_round = 2) { tidy(mod) %&gt;% transmute( term, coefficient = round(estimate, coef_round), std.error = round(std.error, se_round), `t-statistic` = round(statistic, t_round), `p-value` = scales::pvalue(p.value) ) } tidy_custom(lm_sales_mult) %&gt;% gt() html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #czhejezwlo .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #czhejezwlo .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #czhejezwlo .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #czhejezwlo .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #czhejezwlo .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #czhejezwlo .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #czhejezwlo .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #czhejezwlo .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #czhejezwlo .gt_column_spanner_outer:first-child { padding-left: 0; } #czhejezwlo .gt_column_spanner_outer:last-child { padding-right: 0; } #czhejezwlo .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #czhejezwlo .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #czhejezwlo .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #czhejezwlo .gt_from_md > :first-child { margin-top: 0; } #czhejezwlo .gt_from_md > :last-child { margin-bottom: 0; } #czhejezwlo .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #czhejezwlo .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #czhejezwlo .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #czhejezwlo .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #czhejezwlo .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #czhejezwlo .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #czhejezwlo .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #czhejezwlo .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #czhejezwlo .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #czhejezwlo .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #czhejezwlo .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #czhejezwlo .gt_sourcenote { font-size: 90%; padding: 4px; } #czhejezwlo .gt_left { text-align: left; } #czhejezwlo .gt_center { text-align: center; } #czhejezwlo .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #czhejezwlo .gt_font_normal { font-weight: normal; } #czhejezwlo .gt_font_bold { font-weight: bold; } #czhejezwlo .gt_font_italic { font-style: italic; } #czhejezwlo .gt_super { font-size: 65%; } #czhejezwlo .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } term coefficient std.error t-statistic p-value (Intercept) 2.939 0.3119 9.42 &lt;0.001 TV 0.046 0.0014 32.81 &lt;0.001 radio 0.189 0.0086 21.89 &lt;0.001 newspaper -0.001 0.0059 -0.18 0.860 To understand why there is no relationship between sales and newspaper, consider the correlation between the variables: library(corrr) advertising %&gt;% select(TV, radio, newspaper, sales) %&gt;% cor() %&gt;% as_tibble(rownames = &quot;var&quot;) %&gt;% mutate(across(-var, round, 4)) %&gt;% gt(rowname_col = &quot;var&quot;) html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #ctkflgdkuv .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #ctkflgdkuv .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #ctkflgdkuv .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #ctkflgdkuv .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #ctkflgdkuv .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #ctkflgdkuv .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #ctkflgdkuv .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #ctkflgdkuv .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #ctkflgdkuv .gt_column_spanner_outer:first-child { padding-left: 0; } #ctkflgdkuv .gt_column_spanner_outer:last-child { padding-right: 0; } #ctkflgdkuv .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #ctkflgdkuv .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #ctkflgdkuv .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #ctkflgdkuv .gt_from_md > :first-child { margin-top: 0; } #ctkflgdkuv .gt_from_md > :last-child { margin-bottom: 0; } #ctkflgdkuv .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #ctkflgdkuv .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #ctkflgdkuv .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #ctkflgdkuv .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #ctkflgdkuv .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #ctkflgdkuv .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #ctkflgdkuv .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #ctkflgdkuv .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #ctkflgdkuv .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #ctkflgdkuv .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #ctkflgdkuv .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #ctkflgdkuv .gt_sourcenote { font-size: 90%; padding: 4px; } #ctkflgdkuv .gt_left { text-align: left; } #ctkflgdkuv .gt_center { text-align: center; } #ctkflgdkuv .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #ctkflgdkuv .gt_font_normal { font-weight: normal; } #ctkflgdkuv .gt_font_bold { font-weight: bold; } #ctkflgdkuv .gt_font_italic { font-style: italic; } #ctkflgdkuv .gt_super { font-size: 65%; } #ctkflgdkuv .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } TV radio newspaper sales TV 1.0000 0.0548 0.0566 0.7822 radio 0.0548 1.0000 0.3541 0.5762 newspaper 0.0566 0.3541 1.0000 0.2283 sales 0.7822 0.5762 0.2283 1.0000 High correlation between radio and newspaper suggest that the former is driving the relationship with sales. 3.2.2 Some Important Questions One: Is There a Relationship Between the Response and Predictors? Consider the hypothesis test: \\[ \\begin{align} H_0:&amp; \\beta_1 = \\beta_2 = \\dots = \\beta_p = 0 \\\\ H_a:&amp; \\text{at least one of } \\beta_j \\text{ is non-zero.} \\end{align} \\] This is performed by computing the \\(F\\)-statistic: \\[ F = \\frac{(\\text{TSS} - \\text{RSS})/p}{\\text{RSS}/(n - p - 1)} \\] The denominator should be familiar from simple linear regression: it is the RSS divided by the degrees of freedom, so our estimate of \\(\\sigma^2\\). Likewise, the expected value of the numerator is also \\(\\sigma^2\\) provided that \\(H_0\\) is true. Hence, when there is no relationship between response and predictors, we expect \\(F \\approx 1\\), and \\(F &gt; 1\\) when \\(H_a\\) is true. Instead of computing manually, use broom::glance to re-create Table 3.6: glance(lm_sales_mult) %&gt;% transmute(`Residual standard error` = round(sigma, 2), `R2` = round(r.squared, 3), `F-statistic` = round(statistic, 1)) %&gt;% mutate(across(everything(), as.character)) %&gt;% pivot_longer(everything(), names_to = &quot;Quantity&quot;, values_to = &quot;Value&quot;) %&gt;% gt() html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #mxmtljfuay .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #mxmtljfuay .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #mxmtljfuay .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #mxmtljfuay .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #mxmtljfuay .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #mxmtljfuay .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #mxmtljfuay .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #mxmtljfuay .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #mxmtljfuay .gt_column_spanner_outer:first-child { padding-left: 0; } #mxmtljfuay .gt_column_spanner_outer:last-child { padding-right: 0; } #mxmtljfuay .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #mxmtljfuay .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #mxmtljfuay .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #mxmtljfuay .gt_from_md > :first-child { margin-top: 0; } #mxmtljfuay .gt_from_md > :last-child { margin-bottom: 0; } #mxmtljfuay .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #mxmtljfuay .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #mxmtljfuay .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #mxmtljfuay .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #mxmtljfuay .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #mxmtljfuay .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #mxmtljfuay .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #mxmtljfuay .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #mxmtljfuay .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #mxmtljfuay .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #mxmtljfuay .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #mxmtljfuay .gt_sourcenote { font-size: 90%; padding: 4px; } #mxmtljfuay .gt_left { text-align: left; } #mxmtljfuay .gt_center { text-align: center; } #mxmtljfuay .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #mxmtljfuay .gt_font_normal { font-weight: normal; } #mxmtljfuay .gt_font_bold { font-weight: bold; } #mxmtljfuay .gt_font_italic { font-style: italic; } #mxmtljfuay .gt_super { font-size: 65%; } #mxmtljfuay .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } Quantity Value Residual standard error 1.69 R2 0.897 F-statistic 570.3 The value of 570 is far larger than 1, which is compelling evidence against the null \\(H_0\\). The \\(F\\)-statistic follows the \\(F\\)-distribution (assuming \\(H_0\\) is true and the errors \\(\\epsilon_i\\) are normally distributed), so we can get a \\(p\\)-value using the values of \\(n\\) and \\(p\\). Or automatically with glance: glance(lm_sales_mult) %&gt;% select(statistic, p.value) ## # A tibble: 1 x 2 ## statistic p.value ## &lt;dbl&gt; &lt;dbl&gt; ## 1 570. 1.58e-96 Another way to do this is to explicitly fit the null model (no predictors, intercept only), and perform an analysis of variance with the two models using anova: lm_sales_null &lt;- lm(sales ~ 1, data = advertising) anova(lm_sales_null, lm_sales_mult) ## Analysis of Variance Table ## ## Model 1: sales ~ 1 ## Model 2: sales ~ TV + radio + newspaper ## Res.Df RSS Df Sum of Sq F Pr(&gt;F) ## 1 199 5417.1 ## 2 196 556.8 3 4860.3 570.27 &lt; 2.2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 This approach can also be used to test that a particular subset of \\(q\\) coefficients are zero: \\[ H_0: \\beta_{p-q+1} = \\beta_{p-q+2} = \\dots = \\beta_p = 0 \\\\ \\] In this case, we fit a second model that uses all the variables except those \\(q\\), with a residual sum of squares we call \\(\\text{RSS}_0\\). Then the appropriate \\(F\\)_statistic is: \\[ F = \\frac{(\\text{RSS}_0 - \\text{RSS})/q}{\\text{RSS}/(n-p-1)} \\] It turns out the multivariable model already does this for \\(q = 1\\). The square of each \\(t\\)-statistic is the exact same as the \\(F\\)-statistic we would get by removing that variable: tidy(lm_sales_mult) ## # A tibble: 4 x 5 ## term estimate std.error statistic p.value ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 (Intercept) 2.94 0.312 9.42 1.27e-17 ## 2 TV 0.0458 0.00139 32.8 1.51e-81 ## 3 radio 0.189 0.00861 21.9 1.51e-54 ## 4 newspaper -0.00104 0.00587 -0.177 8.60e- 1 For example, the \\(t\\)-statistic for TV is 32.81. Use anova to compare models with and without `TV: anova( lm(sales ~ radio + newspaper, data = advertising), lm_sales_mult ) ## Analysis of Variance Table ## ## Model 1: sales ~ radio + newspaper ## Model 2: sales ~ TV + radio + newspaper ## Res.Df RSS Df Sum of Sq F Pr(&gt;F) ## 1 197 3614.8 ## 2 196 556.8 1 3058 1076.4 &lt; 2.2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 The \\(F\\)-statistic here is the square of the \\(t\\)-statistic: 1076.4. Two: Deciding on Important Variables The task of determining which predictors are associated with the response, in order to fit a single model involving only those predictors, is referred to as variable selection. Ideally, we would like to perform variable selection by trying out a lot of different models, each containing a different subset of the predictors. For instance, if \\(p = 2\\), then we can consider four models: (1) a model containing no variables, (2) a model containing \\(X_1\\) only, (3) a model containing \\(X_2\\) only, and (4) a model containing both \\(X_1\\) and \\(X_2\\). We can then select the best model out of all of the models that we have considered. How do we determine which model is best? Various statistics can be used to judge the quality of a model. These include Mallows \\(C_p\\), Akaike information criterion (AIC), Bayesian information criterion (BIC), and adjusted \\(R^2\\). These are discussed in more detail in Chapter 6. We can also determine which model is best by plotting various model outputs, such as the residuals, in order to search for patterns. There are a lot of reasons to avoid the stepwise variable selection methods detailed here (forward, backward and mixed). See this article and Smith (2018), for example. Three: Model Fit Most commonly, we use RSE and \\(R^2\\) to quantify model fit. In simple regression, \\(R^2\\) is the square of the correlation between response and predictor. In multiple linear regression, it equals the square of the correlation between response and the fitted linear model: \\(R^2 = \\text{Cor}(Y, \\hat{Y})^2\\). It turns out that \\(R^2\\) will always increase when more variables are added to the model, even if those variables are only weakly associated with the response. This is due to the fact that adding another variable always results in a decrease in the residual sum of squares on the training data (though not necessarily the testing data). Four: Predictions With a fit regression model, it is straightforward to make predictions of the response \\(Y\\). There are three sources of uncertainty in these predictions: The coefficient estimates \\(\\hat{\\beta}_i\\) are estimates of the true \\(\\beta_i\\). This inaccuracy is part of the reducible error. Assuming a linear model of \\(f(X)\\) is almost always an approximation of reality, so it is an additional form of reducible error we call model bias. The random error term \\(\\epsilon\\), which is irreducible. To quantify how much \\(Y\\) will vary from \\(\\hat{Y}\\), we use prediction intervals, which are always wider than confidence intervals because they incorporate both reducible error (in our estimate for \\(f(X)\\)) and irreducible error. 3.3 Other Considerations in the Regression Model 3.3.1 Qualitative Predictors Predictors with Only Two Levels With only two levels in the predictor, we use models that look like this: \\[ y_i = \\beta_0 + \\beta_1 x_i + \\epsilon_i = \\begin{cases} \\beta_0 + \\beta_1 + \\epsilon_i, &amp; \\text{if } i\\text{th person owns a house} \\\\ \\beta_0 + \\epsilon_i, &amp; \\text{if } i\\text{th person does not}. \\end{cases} \\] Load the credit data set and regress credit card balance on home ownership: credit &lt;- ISLR2::Credit lm_balance_own &lt;- lm(Balance ~ Own, data = credit) tidy_custom(lm_balance_own, coef_round = 2, se_round = 2, t_round = 3) %&gt;% gt() html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #wfrspyewsw .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #wfrspyewsw .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #wfrspyewsw .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #wfrspyewsw .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #wfrspyewsw .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #wfrspyewsw .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #wfrspyewsw .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #wfrspyewsw .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #wfrspyewsw .gt_column_spanner_outer:first-child { padding-left: 0; } #wfrspyewsw .gt_column_spanner_outer:last-child { padding-right: 0; } #wfrspyewsw .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #wfrspyewsw .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #wfrspyewsw .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #wfrspyewsw .gt_from_md > :first-child { margin-top: 0; } #wfrspyewsw .gt_from_md > :last-child { margin-bottom: 0; } #wfrspyewsw .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #wfrspyewsw .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #wfrspyewsw .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #wfrspyewsw .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #wfrspyewsw .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #wfrspyewsw .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #wfrspyewsw .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #wfrspyewsw .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #wfrspyewsw .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #wfrspyewsw .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #wfrspyewsw .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #wfrspyewsw .gt_sourcenote { font-size: 90%; padding: 4px; } #wfrspyewsw .gt_left { text-align: left; } #wfrspyewsw .gt_center { text-align: center; } #wfrspyewsw .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #wfrspyewsw .gt_font_normal { font-weight: normal; } #wfrspyewsw .gt_font_bold { font-weight: bold; } #wfrspyewsw .gt_font_italic { font-style: italic; } #wfrspyewsw .gt_super { font-size: 65%; } #wfrspyewsw .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } term coefficient std.error t-statistic p-value (Intercept) 509.80 33.13 15.389 &lt;0.001 OwnYes 19.73 46.05 0.429 0.669 Qualitative Predictors with More than Two Levels And with region (three levels): \\[ y_i = \\beta_0 + \\beta_1 x_{i1} + \\beta_2 x_{i2} + \\epsilon_i = \\begin{cases} \\beta_0 + \\beta_1 + \\epsilon_i, &amp; \\text{if } i\\text{th person is from the South} \\\\ \\beta_0 + \\beta_2 + \\epsilon_i, &amp; \\text{if } i\\text{th person is from the West} \\\\ \\beta_0 + \\epsilon_i, &amp; \\text{if } i\\text{th person is from the East}. \\end{cases} \\] lm_balance_region &lt;- lm(Balance ~ Region, data = credit) tidy_custom(lm_balance_region, coef_round = 2, se_round = 2, t_round = 3) %&gt;% gt() html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #mkqqnrbfbn .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #mkqqnrbfbn .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #mkqqnrbfbn .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #mkqqnrbfbn .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #mkqqnrbfbn .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #mkqqnrbfbn .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #mkqqnrbfbn .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #mkqqnrbfbn .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #mkqqnrbfbn .gt_column_spanner_outer:first-child { padding-left: 0; } #mkqqnrbfbn .gt_column_spanner_outer:last-child { padding-right: 0; } #mkqqnrbfbn .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #mkqqnrbfbn .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #mkqqnrbfbn .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #mkqqnrbfbn .gt_from_md > :first-child { margin-top: 0; } #mkqqnrbfbn .gt_from_md > :last-child { margin-bottom: 0; } #mkqqnrbfbn .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #mkqqnrbfbn .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #mkqqnrbfbn .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #mkqqnrbfbn .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #mkqqnrbfbn .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #mkqqnrbfbn .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #mkqqnrbfbn .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #mkqqnrbfbn .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #mkqqnrbfbn .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #mkqqnrbfbn .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #mkqqnrbfbn .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #mkqqnrbfbn .gt_sourcenote { font-size: 90%; padding: 4px; } #mkqqnrbfbn .gt_left { text-align: left; } #mkqqnrbfbn .gt_center { text-align: center; } #mkqqnrbfbn .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #mkqqnrbfbn .gt_font_normal { font-weight: normal; } #mkqqnrbfbn .gt_font_bold { font-weight: bold; } #mkqqnrbfbn .gt_font_italic { font-style: italic; } #mkqqnrbfbn .gt_super { font-size: 65%; } #mkqqnrbfbn .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } term coefficient std.error t-statistic p-value (Intercept) 531.00 46.32 11.464 &lt;0.001 RegionSouth -12.50 56.68 -0.221 0.826 RegionWest -18.69 65.02 -0.287 0.774 To run the \\(F\\)-test, use anova(): anova(lm_balance_region) ## Analysis of Variance Table ## ## Response: Balance ## Df Sum Sq Mean Sq F value Pr(&gt;F) ## Region 2 18454 9227 0.0434 0.9575 ## Residuals 397 84321458 212397 which tells us that we cannot reject the null that there is no relationship between balance and region. 3.3.2 Extensions of the Linear Model The standard linear regression model (3.19) provides interpretable results and works quite well on many real-world problems. However, it makes several highly restrictive assumptions that are often violated in practice. Two of the most important assumptions state that the relationship between the predictors and response are additive and linear. Removing the Additive Assumption This assumption is that the association between a predictor \\(X_j\\) and the response \\(Y\\) does not depend on the values of other predictors. In our advertising example, suppose that spending money on radio actually increases the effectiveness of TV advertising, i.e. the the slope term for TV actually increases as radio increases. In marketing, this is synergy. In statistics, this is an interaction effect. The models with and without an interaction effect are: \\[ \\begin{align} Y &amp;= \\beta_0 + \\beta_1 X_1 + \\beta_2 X_2 + \\epsilon \\\\ Y &amp;= \\beta_0 + \\beta_1 X_1 + \\beta_2 X_2 + \\beta_3 X_1 X_2 + \\epsilon \\end{align} \\] The effect on sales, with an interaction term between TV and radio: lm_sales_inter &lt;- lm(sales ~ radio * TV, data = advertising) tidy_custom(lm_sales_inter, coef_round = 4, se_round = 3) %&gt;% gt() html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #zsofvdnego .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #zsofvdnego .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #zsofvdnego .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #zsofvdnego .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #zsofvdnego .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #zsofvdnego .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #zsofvdnego .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #zsofvdnego .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #zsofvdnego .gt_column_spanner_outer:first-child { padding-left: 0; } #zsofvdnego .gt_column_spanner_outer:last-child { padding-right: 0; } #zsofvdnego .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #zsofvdnego .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #zsofvdnego .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #zsofvdnego .gt_from_md > :first-child { margin-top: 0; } #zsofvdnego .gt_from_md > :last-child { margin-bottom: 0; } #zsofvdnego .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #zsofvdnego .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #zsofvdnego .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #zsofvdnego .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #zsofvdnego .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #zsofvdnego .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #zsofvdnego .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #zsofvdnego .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #zsofvdnego .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #zsofvdnego .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #zsofvdnego .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #zsofvdnego .gt_sourcenote { font-size: 90%; padding: 4px; } #zsofvdnego .gt_left { text-align: left; } #zsofvdnego .gt_center { text-align: center; } #zsofvdnego .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #zsofvdnego .gt_font_normal { font-weight: normal; } #zsofvdnego .gt_font_bold { font-weight: bold; } #zsofvdnego .gt_font_italic { font-style: italic; } #zsofvdnego .gt_super { font-size: 65%; } #zsofvdnego .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } term coefficient std.error t-statistic p-value (Intercept) 6.7502 0.248 27.23 &lt;0.001 radio 0.0289 0.009 3.24 0.001 TV 0.0191 0.002 12.70 &lt;0.001 radio:TV 0.0011 0.000 20.73 &lt;0.001 Compare the model with and without the interaction term: lm_sales_radio_tv &lt;- lm(sales ~ radio + TV, data = advertising) glance(lm_sales_radio_tv) %&gt;% mutate(model = &quot;additive&quot;) %&gt;% bind_rows( glance(lm_sales_inter) %&gt;% mutate(model = &quot;interaction&quot;) ) %&gt;% select(model, r.squared, AIC, BIC) %&gt;% gt() html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #jeyzbiyvze .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #jeyzbiyvze .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #jeyzbiyvze .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #jeyzbiyvze .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #jeyzbiyvze .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #jeyzbiyvze .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #jeyzbiyvze .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #jeyzbiyvze .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #jeyzbiyvze .gt_column_spanner_outer:first-child { padding-left: 0; } #jeyzbiyvze .gt_column_spanner_outer:last-child { padding-right: 0; } #jeyzbiyvze .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #jeyzbiyvze .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #jeyzbiyvze .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #jeyzbiyvze .gt_from_md > :first-child { margin-top: 0; } #jeyzbiyvze .gt_from_md > :last-child { margin-bottom: 0; } #jeyzbiyvze .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #jeyzbiyvze .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #jeyzbiyvze .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #jeyzbiyvze .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #jeyzbiyvze .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #jeyzbiyvze .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #jeyzbiyvze .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #jeyzbiyvze .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #jeyzbiyvze .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #jeyzbiyvze .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #jeyzbiyvze .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #jeyzbiyvze .gt_sourcenote { font-size: 90%; padding: 4px; } #jeyzbiyvze .gt_left { text-align: left; } #jeyzbiyvze .gt_center { text-align: center; } #jeyzbiyvze .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #jeyzbiyvze .gt_font_normal { font-weight: normal; } #jeyzbiyvze .gt_font_bold { font-weight: bold; } #jeyzbiyvze .gt_font_italic { font-style: italic; } #jeyzbiyvze .gt_super { font-size: 65%; } #jeyzbiyvze .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } model r.squared AIC BIC additive 0.8971943 780.3941 793.5874 interaction 0.9677905 550.2778 566.7694 What if the interaction term was highly insignificant, but the associated main effects were not? The hierarchical principle states that if we include an interaction in a model, we should also include the main effects, even if the \\(p\\)-values of their coefficients are not significant. The concept of interactions applies just as well to qualitative variables. Re-create Figure 3.7, comparing the balance model with and without an interaction term of Income and Student: lm_balance_income_student &lt;- lm(Balance ~ Income + Student, data = credit) lm_balance_income_student_inter &lt;- lm(Balance ~ Income * Student, data = credit) d &lt;- tibble(Income = seq(0, 150, 0.1)) %&gt;% crossing(Student = factor(c(&quot;No&quot;, &quot;Yes&quot;))) augment(lm_balance_income_student, newdata = d) %&gt;% mutate(model = &quot;additive&quot;) %&gt;% bind_rows( augment(lm_balance_income_student_inter, newdata = d) %&gt;% mutate(model = &quot;interaction&quot;) ) %&gt;% ggplot(aes(x = Income, y = .fitted, color = Student)) + geom_line(size = 1.5) + facet_wrap(~model, nrow = 1) + add_facet_borders() + labs(y = &quot;Balance&quot;) This suggests that the positive relationship between Income and Balance is smaller for students. Non-linear Relationships This assumption is that there is a linear relationship between response and predictors, but in some cases, the true relationship may be non-linear. A simple way to account for non-linearity is to use polynomial regression. Fit mpg to horsepower as a linear term, quadratic term, and up to the fifth degree: auto &lt;- ISLR2::Auto lm_mpg_hp &lt;- lm(mpg ~ horsepower, data = auto) lm_mpg_hp2 &lt;- lm(mpg ~ horsepower + I(horsepower^2), data = auto) lm_mpg_hp5 &lt;- lm( mpg ~ horsepower + I(horsepower^2) + I(horsepower^3) + I(horsepower^4) + I(horsepower^5), data = auto ) d &lt;- tibble(horsepower = seq(1, 250, 0.1)) bind_rows( augment(lm_mpg_hp, newdata = d) %&gt;% mutate(model = &quot;Linear&quot;), augment(lm_mpg_hp2, newdata = d) %&gt;% mutate(model = &quot;Degree 2&quot;), augment(lm_mpg_hp5, newdata = d) %&gt;% mutate(model = &quot;Degree 5&quot;) ) %&gt;% ggplot(aes(x = horsepower, y = .fitted, color = model)) + geom_point( aes(y = mpg), data = auto, color = &quot;darkgrey&quot;, shape = 21, size = 3 ) + geom_line(size = 1.5) + coord_cartesian(xlim = c(40, 230), ylim = c(8, 52)) + add_facet_borders() + theme(legend.position = c(0.7, 0.8)) + labs(y = &quot;mpg&quot;, color = NULL) And compare model assessment statistics: glance(lm_mpg_hp) %&gt;% mutate(model = &quot;Linear&quot;) %&gt;% bind_rows( glance(lm_mpg_hp2) %&gt;% mutate(model = &quot;Degree 2&quot;) ) %&gt;% bind_rows( glance(lm_mpg_hp5) %&gt;% mutate(model = &quot;Degree 5&quot;) ) %&gt;% select(model, r.squared, AIC, BIC) %&gt;% mutate(across(-model, round, 3)) %&gt;% gt() html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #quyilxdrok .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #quyilxdrok .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #quyilxdrok .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #quyilxdrok .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #quyilxdrok .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #quyilxdrok .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #quyilxdrok .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #quyilxdrok .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #quyilxdrok .gt_column_spanner_outer:first-child { padding-left: 0; } #quyilxdrok .gt_column_spanner_outer:last-child { padding-right: 0; } #quyilxdrok .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #quyilxdrok .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #quyilxdrok .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #quyilxdrok .gt_from_md > :first-child { margin-top: 0; } #quyilxdrok .gt_from_md > :last-child { margin-bottom: 0; } #quyilxdrok .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #quyilxdrok .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #quyilxdrok .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #quyilxdrok .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #quyilxdrok .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #quyilxdrok .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #quyilxdrok .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #quyilxdrok .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #quyilxdrok .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #quyilxdrok .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #quyilxdrok .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #quyilxdrok .gt_sourcenote { font-size: 90%; padding: 4px; } #quyilxdrok .gt_left { text-align: left; } #quyilxdrok .gt_center { text-align: center; } #quyilxdrok .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #quyilxdrok .gt_font_normal { font-weight: normal; } #quyilxdrok .gt_font_bold { font-weight: bold; } #quyilxdrok .gt_font_italic { font-style: italic; } #quyilxdrok .gt_super { font-size: 65%; } #quyilxdrok .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } model r.squared AIC BIC Linear 0.606 2363.324 2375.237 Degree 2 0.688 2274.354 2290.239 Degree 5 0.697 2268.663 2296.462 3.3.3 Potential Problems 1. Non-linearity of the Data If the true relationship between response and predictors is far from linear, then we can should be able to see this in residual plots. In R, we can call the generic plot() function on the model objects to quickly get these plots: plot(lm_mpg_hp, 1) plot(lm_mpg_hp2, 1) Ideally these residual plots will show no discernible pattern. Above, there is a clear U-shape in the linear model indicating non-linearity in the data. This appears to be improved by the quadratic term. 2. Correlation of Error Terms An important assumption of the linear regression model is that the error terms, \\(\\epsilon\\), are uncorrelated. What does this mean? For instance, if the errors are uncorrelated, then the fact that \\(\\epsilon_i\\) is positive provides little or no information about the sign of \\(\\epsilon_{i+1}\\). The standard errors that are computed for the estimated regression coefficients or the fitted values are based on the assumption of uncorrelated error terms. If in fact there is correlation among the error terms, then the estimated standard errors will tend to underestimate the true standard errors. As a result, confidence and prediction intervals will be narrower than they should be. For example, a 95% confidence interval may in reality have a much lower probability than 0.95 of containing the true value of the parameter. In addition, p-values associated with the model will be lower than they should be; this could cause us to erroneously conclude that a parameter is statistically significant. In short, if the error terms are correlated, we may have an unwarranted sense of confidence in our model. The extreme example in the text is an accidental doubling of the data, which we can try out with the advertising multiple regression model: lm_sales_mult_double &lt;- lm(sales ~ TV + radio + newspaper, data = bind_rows(advertising, advertising)) bind_rows( bind_cols(data = &quot;original&quot;, tidy_custom(lm_sales_mult)), bind_cols(data = &quot;double&quot;, tidy_custom(lm_sales_mult_double)) ) %&gt;% group_by(data) %&gt;% gt() html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #tsobbiuswy .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #tsobbiuswy .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #tsobbiuswy .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #tsobbiuswy .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #tsobbiuswy .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #tsobbiuswy .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #tsobbiuswy .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #tsobbiuswy .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #tsobbiuswy .gt_column_spanner_outer:first-child { padding-left: 0; } #tsobbiuswy .gt_column_spanner_outer:last-child { padding-right: 0; } #tsobbiuswy .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #tsobbiuswy .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #tsobbiuswy .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #tsobbiuswy .gt_from_md > :first-child { margin-top: 0; } #tsobbiuswy .gt_from_md > :last-child { margin-bottom: 0; } #tsobbiuswy .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #tsobbiuswy .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #tsobbiuswy .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #tsobbiuswy .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #tsobbiuswy .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #tsobbiuswy .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #tsobbiuswy .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #tsobbiuswy .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #tsobbiuswy .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #tsobbiuswy .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #tsobbiuswy .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #tsobbiuswy .gt_sourcenote { font-size: 90%; padding: 4px; } #tsobbiuswy .gt_left { text-align: left; } #tsobbiuswy .gt_center { text-align: center; } #tsobbiuswy .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #tsobbiuswy .gt_font_normal { font-weight: normal; } #tsobbiuswy .gt_font_bold { font-weight: bold; } #tsobbiuswy .gt_font_italic { font-style: italic; } #tsobbiuswy .gt_super { font-size: 65%; } #tsobbiuswy .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } term coefficient std.error t-statistic p-value original (Intercept) 2.939 0.3119 9.42 &lt;0.001 TV 0.046 0.0014 32.81 &lt;0.001 radio 0.189 0.0086 21.89 &lt;0.001 newspaper -0.001 0.0059 -0.18 0.860 double (Intercept) 2.939 0.2194 13.39 &lt;0.001 TV 0.046 0.0010 46.63 &lt;0.001 radio 0.189 0.0061 31.12 &lt;0.001 newspaper -0.001 0.0041 -0.25 0.802 3. Non-constant Variance of Error Terms Another important assumption is that the error terms have constant variance, \\(\\text{Var}(\\epsilon_i) = \\sigma^2\\). If they do not, we say there is heteroscedasticity, which we can see in the residual plot as a funnel shape. For example: d &lt;- tibble( x = rnorm(300, mean = 20, sd = 5) ) %&gt;% rowwise() %&gt;% mutate( y = x * rnorm(1, mean = 1, sd = x / 20) ) plot(lm(y ~ x, data = d), 1) 4. Outliers An outlier is a point for which \\(y_i\\) is far from the value predicted by the model. Outliers can arise for a variety of reasons, such as incorrect recording of an observation during data collection. We can typically see outliers in the residuals plots: plot(lm_mpg_hp, 1) In this case, point numbers 334, 323, and 330 were identified as outliers. It is hard to say when a residual is a problem that should be addressed. We can also plot the studentized (or standardized) residuals, which are computed by dividing each residual by its estimated standard error: plot(lm_mpg_hp, 5) Here we see a few outliers with standardized residuals above 2. 5. High Leverage Points Outliers are unusual response values \\(y_i\\), while observations with high leverage have unusual values for \\(x_i\\). In the above plot, the points 117 and 94 were identified as high leverage, as well as having fairly high residuals. These data would be worth investigating further. 6. Collinearity Collinearity refers to the situation in which two or more predictor variables are closely related to one another. In the credit data, we see collinearity between the limit and rating variables: credit %&gt;% select(Limit, Age, Rating) %&gt;% pivot_longer(cols = c(Age, Rating)) %&gt;% ggplot(aes(x = Limit, y = value)) + geom_point() + facet_wrap(~name, nrow = 1, scales = &quot;free_y&quot;) The presence of collinearity can pose problems in the regression context, since it can be difficult to separate out the individual effects of collinear variables on the response. In other words, since limit and rating tend to increase or decrease together, it can be difficult to determine how each one separately is associated with the response, balance. Since collinearity reduces the accuracy of the estimates of the regression coefficients, it causes the standard error for \\(\\hat{\\beta}_j\\) to grow. Recall that the \\(t\\)-statistic for each predictor is calculated by dividing \\(\\hat{\\beta}_j\\) by its standard error. Consequently, collinearity results in a decline in the \\(t\\)-statistic. As a result, in the presence of collinearity, we may fail to reject \\(H_0: \\beta_j = 0\\). This means that the power of the hypothesis test  the probability of correctly detecting a non-zero coefficient  is reduced by collinearity. Fit the two models and summarize in a table: lm_balance_age_limit &lt;- lm(Balance ~ Age + Limit, data = credit) lm_balance_rating_limit &lt;- lm(Balance ~ Rating + Limit, data = credit) bind_rows( bind_cols(mod = &quot;Model 1&quot;, tidy_custom(lm_balance_age_limit)), bind_cols(mod = &quot;Model 2&quot;, tidy_custom(lm_balance_rating_limit)) ) %&gt;% group_by(mod) %&gt;% gt(rowname_col = &quot;term&quot;) html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #cqtawrxgje .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #cqtawrxgje .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #cqtawrxgje .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #cqtawrxgje .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #cqtawrxgje .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #cqtawrxgje .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #cqtawrxgje .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #cqtawrxgje .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #cqtawrxgje .gt_column_spanner_outer:first-child { padding-left: 0; } #cqtawrxgje .gt_column_spanner_outer:last-child { padding-right: 0; } #cqtawrxgje .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #cqtawrxgje .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #cqtawrxgje .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #cqtawrxgje .gt_from_md > :first-child { margin-top: 0; } #cqtawrxgje .gt_from_md > :last-child { margin-bottom: 0; } #cqtawrxgje .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #cqtawrxgje .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #cqtawrxgje .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #cqtawrxgje .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #cqtawrxgje .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #cqtawrxgje .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #cqtawrxgje .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #cqtawrxgje .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #cqtawrxgje .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #cqtawrxgje .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #cqtawrxgje .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #cqtawrxgje .gt_sourcenote { font-size: 90%; padding: 4px; } #cqtawrxgje .gt_left { text-align: left; } #cqtawrxgje .gt_center { text-align: center; } #cqtawrxgje .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #cqtawrxgje .gt_font_normal { font-weight: normal; } #cqtawrxgje .gt_font_bold { font-weight: bold; } #cqtawrxgje .gt_font_italic { font-style: italic; } #cqtawrxgje .gt_super { font-size: 65%; } #cqtawrxgje .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } coefficient std.error t-statistic p-value Model 1 (Intercept) -173.411 43.8284 -3.96 &lt;0.001 Age -2.291 0.6725 -3.41 &lt;0.001 Limit 0.173 0.0050 34.50 &lt;0.001 Model 2 (Intercept) -377.537 45.2542 -8.34 &lt;0.001 Rating 2.202 0.9523 2.31 0.021 Limit 0.025 0.0638 0.38 0.701 A simple way to detect collinearity is to look at the correlation matrix of predictors. However, when there is multicollinearity (more than 2 variables correlated), we wont see anything wrong in the pairwise correlation matrix. A better way is to compute the variance inflation factor (VIF). The VIF of a parameter if the ratio of \\(\\text{Var}(\\hat{\\beta}_j)\\) when fitting the full model divided by the variance when fit on its own. VIF values which exceed 5 or 10 indicate a problematic amount of collinearity. It can be computed using the formula: \\[ \\text{VIF}(\\hat{\\beta}_j) = \\frac{1}{1 - R^2_{X_j | X_-j}} \\] where \\(R^2_{X_j | X_-j}\\) is the \\(R^2\\) from a regression of \\(X_j\\) onto all other predictors. Compute it manually with the predictor rating regressed on age and limit: rating_r2 &lt;- summary( lm(Rating ~ Age + Limit, data = credit) )$r.squared round(1 / (1 - rating_r2), 2) ## [1] 160.67 To calculate VIFs, there are R functions such as car::vif which can be used, but it is fairly simple to calculate by hand: lm_rating_age_limit &lt;- lm(Rating ~ Age + Limit, data = credit) lm_age_rating_limit &lt;- lm(Age ~ Rating + Limit, data = credit) lm_limit_age_rating &lt;- lm(Limit ~ Age + Rating, data = credit) tribble( ~Predictor, ~`R^2`, &quot;Age&quot;, 1 / (1 - summary(lm_age_rating_limit)$r.squared), &quot;Rating&quot;, 1 / (1 - summary(lm_rating_age_limit)$r.squared), &quot;Limit&quot;, 1 / (1 - summary(lm_limit_age_rating)$r.squared) ) %&gt;% mutate(`R^2` = round(`R^2`, 2)) %&gt;% gt() html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #ksxjffycyj .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #ksxjffycyj .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #ksxjffycyj .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #ksxjffycyj .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #ksxjffycyj .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #ksxjffycyj .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #ksxjffycyj .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #ksxjffycyj .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #ksxjffycyj .gt_column_spanner_outer:first-child { padding-left: 0; } #ksxjffycyj .gt_column_spanner_outer:last-child { padding-right: 0; } #ksxjffycyj .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #ksxjffycyj .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #ksxjffycyj .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #ksxjffycyj .gt_from_md > :first-child { margin-top: 0; } #ksxjffycyj .gt_from_md > :last-child { margin-bottom: 0; } #ksxjffycyj .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #ksxjffycyj .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #ksxjffycyj .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #ksxjffycyj .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #ksxjffycyj .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #ksxjffycyj .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #ksxjffycyj .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #ksxjffycyj .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #ksxjffycyj .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #ksxjffycyj .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #ksxjffycyj .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #ksxjffycyj .gt_sourcenote { font-size: 90%; padding: 4px; } #ksxjffycyj .gt_left { text-align: left; } #ksxjffycyj .gt_center { text-align: center; } #ksxjffycyj .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #ksxjffycyj .gt_font_normal { font-weight: normal; } #ksxjffycyj .gt_font_bold { font-weight: bold; } #ksxjffycyj .gt_font_italic { font-style: italic; } #ksxjffycyj .gt_super { font-size: 65%; } #ksxjffycyj .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } Predictor R^2 Age 1.01 Rating 160.67 Limit 160.59 When dealing with high collinearity, such as with rating and limit here, the first solution is to drop one of the variables from the regression. This should be okay because the dropped variable is likely redundant. Another solution would be to combine the collinear variables together into a single predictor, e.g. taking the average of standardized limit and rating. 3.4 The Marketing Plan Is there a relationship between sales and advertising budget: From the multiple regression \\(F\\)-test (Table 3.6), \\(F =\\) 570.27 (\\(p\\) &lt;0.001). There is clear evidence of a relationship. How strong is the relationship? Calculate the RSE from the model: # Manually calculated RSE sqrt( sum(resid(lm_sales_mult)^2) / # Degrees of freedom: n - p - 1 (nrow(advertising) - 3 - 1) ) ## [1] 1.68551 # The helper functon RSE is easier sigma(lm_sales_mult) ## [1] 1.68551 On the scale of the response, with a mean (SD) of 14 (5.2), the RSE indicates a percentage error of about: (sigma(lm_sales_mult) / mean(advertising$sales)) %&gt;% scales::percent() ## [1] &quot;12%&quot; The \\(R^2\\) value is 0.8972106, indicating approximately 90% of the variance in sales is explained by the three predictors. Which media are associated with sales? Though a simplified view of association, we say that TV and radio are significantly associated with sales due to their low \\(p\\)-values, and that newspaper is not. How large is the association between each medium and sales? Compute 95% confidence intervals from SEs for each predictor: tidy(lm_sales_mult, conf.int = 0.95) %&gt;% transmute( term, across(c(estimate, conf.low, conf.high), round, 3) ) %&gt;% gt() html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #fizjpqizdl .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #fizjpqizdl .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #fizjpqizdl .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #fizjpqizdl .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #fizjpqizdl .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #fizjpqizdl .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #fizjpqizdl .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #fizjpqizdl .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #fizjpqizdl .gt_column_spanner_outer:first-child { padding-left: 0; } #fizjpqizdl .gt_column_spanner_outer:last-child { padding-right: 0; } #fizjpqizdl .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #fizjpqizdl .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #fizjpqizdl .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #fizjpqizdl .gt_from_md > :first-child { margin-top: 0; } #fizjpqizdl .gt_from_md > :last-child { margin-bottom: 0; } #fizjpqizdl .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #fizjpqizdl .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #fizjpqizdl .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #fizjpqizdl .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #fizjpqizdl .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #fizjpqizdl .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #fizjpqizdl .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #fizjpqizdl .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #fizjpqizdl .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #fizjpqizdl .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #fizjpqizdl .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #fizjpqizdl .gt_sourcenote { font-size: 90%; padding: 4px; } #fizjpqizdl .gt_left { text-align: left; } #fizjpqizdl .gt_center { text-align: center; } #fizjpqizdl .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #fizjpqizdl .gt_font_normal { font-weight: normal; } #fizjpqizdl .gt_font_bold { font-weight: bold; } #fizjpqizdl .gt_font_italic { font-style: italic; } #fizjpqizdl .gt_super { font-size: 65%; } #fizjpqizdl .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } term estimate conf.low conf.high (Intercept) 2.939 2.324 3.554 TV 0.046 0.043 0.049 radio 0.189 0.172 0.206 newspaper -0.001 -0.013 0.011 TV and radio CIs are both narrow and dont include zero. The interval for newspaper does include zero. Look for collinearity: car::vif(lm_sales_mult) ## TV radio newspaper ## 1.004611 1.144952 1.145187 No evidence from VIF scores. How accurately can we predict future sales? We can either predict an individual response, \\(Y = f(X) + \\epsilon\\) with a prediction interval, or the average response \\(f(X)\\) with a confidence interval. This is done with the predict.lm() function and by setting the argument interval: # Make up some new data to predict sales d &lt;- tibble(TV = 160.0, radio = 15.0, newspaper = 72.0) predict( lm_sales_mult, newdata = d, interval = &quot;prediction&quot;, level = 0.95 ) ## fit lwr upr ## 1 13.01448 9.637749 16.39122 predict( lm_sales_mult, newdata = d, interval = &quot;confidence&quot;, level = 0.95 ) ## fit lwr upr ## 1 13.01448 12.4204 13.60857 As expected, the former is wider than the latter due to incorporating the irreducible error. Is the relationship linear? The residual plot: plot(lm_sales_mult, 1) The shape of these residuals suggests a non-linear relationship. Is there synergy among the advertising media? To account for the non-linearity, we included an interaction term between TV and radio. The \\(p\\)-value of the interaction term: tidy_custom(lm_sales_inter) %&gt;% gt() html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #lqzbcomzxi .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #lqzbcomzxi .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #lqzbcomzxi .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #lqzbcomzxi .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #lqzbcomzxi .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #lqzbcomzxi .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #lqzbcomzxi .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #lqzbcomzxi .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #lqzbcomzxi .gt_column_spanner_outer:first-child { padding-left: 0; } #lqzbcomzxi .gt_column_spanner_outer:last-child { padding-right: 0; } #lqzbcomzxi .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #lqzbcomzxi .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #lqzbcomzxi .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #lqzbcomzxi .gt_from_md > :first-child { margin-top: 0; } #lqzbcomzxi .gt_from_md > :last-child { margin-bottom: 0; } #lqzbcomzxi .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #lqzbcomzxi .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #lqzbcomzxi .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #lqzbcomzxi .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #lqzbcomzxi .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #lqzbcomzxi .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #lqzbcomzxi .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #lqzbcomzxi .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #lqzbcomzxi .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #lqzbcomzxi .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #lqzbcomzxi .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #lqzbcomzxi .gt_sourcenote { font-size: 90%; padding: 4px; } #lqzbcomzxi .gt_left { text-align: left; } #lqzbcomzxi .gt_center { text-align: center; } #lqzbcomzxi .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #lqzbcomzxi .gt_font_normal { font-weight: normal; } #lqzbcomzxi .gt_font_bold { font-weight: bold; } #lqzbcomzxi .gt_font_italic { font-style: italic; } #lqzbcomzxi .gt_super { font-size: 65%; } #lqzbcomzxi .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } term coefficient std.error t-statistic p-value (Intercept) 6.750 0.2479 27.23 &lt;0.001 radio 0.029 0.0089 3.24 0.001 TV 0.019 0.0015 12.70 &lt;0.001 radio:TV 0.001 0.0001 20.73 &lt;0.001 and the increase in \\(R^2\\): summary(lm_sales_radio_tv)$r.squared ## [1] 0.8971943 summary(lm_sales_inter)$r.squared ## [1] 0.9677905 suggests a substantial improvement over the additive model. 3.5 Comparison of Linear Regression with \\(K\\)-Nearest Neighbors Parametric methods are often easy to fit, and easy to interpret, but the disadvantage is the strong assumption about the form of \\(f(X)\\). Non-parametric methods do not explicitly assume a form for \\(f(X)\\) and therefore provide an alternative and more flexible approach to regression. One of the simplest and best-known methods is \\(K\\)-nearest neighbors regression (closely related to the KNN classifier from Chapter 2). From the \\(K\\) nearest neighbors (represented by the set \\(\\mathcal{N}_0\\)) to a prediction point \\(x_0\\), it estimates \\(f(x_0)\\) using the average: \\[ \\hat{f}(x_0) = \\frac{1}{K} \\sum_{x_i \\in \\mathcal{N}_0} y_i. \\] On the choice of \\(K\\): In general, the optimal value for \\(K\\) will depend on the bias-variance tradeoff, which we introduced in Chapter 2. A small value for \\(K\\) provides the most flexible fit, which will have low bias but high variance. This variance is due to the fact that the prediction in a given region is entirely dependent on just one observation. In contrast, larger values of \\(K\\) provide a smoother and less variable fit; the prediction in a region is an average of several points, and so changing one observation has a smaller effect. However, the smoothing may cause bias by masking some of the structure in \\(f(X)\\). In Chapter 5, we introduce several approaches for estimating test error rates. These methods can be used to identify the optimal value of \\(K\\) in KNN regression. In what setting will a parametric approach such as least squares linear regression outperform a non-parametric approach such as KNN regression? The answer is simple: the parametric approach will outperform the non-parametric approach if the parametric form that has been selected is close to the true form of \\(f\\). There is another consideration when performing KNN with many predictors \\(p\\): However, spreading 50 observations over \\(p\\) = 20 dimensions results in a phenomenon in which a given observation has no nearby neighbors - this is the so-called curse of dimensionality. That is, the \\(K\\) observations that are nearest to a given test observation \\(x_0\\) may be very far away from \\(x_0\\) in \\(p\\)-dimensional space when \\(p\\) is large, leading to a very poor prediction of \\(f(x_0)\\) and hence a poor KNN fit. As a general rule, parametric methods will tend to outperform non-parametric approaches when there is a small number of observations per predictor. However: Even when the dimension is small, we might prefer linear regression to KNN from an interpretability standpoint. If the test MSE of KNN is only slightly lower than that of linear regression, we might be willing to forego a little bit of prediction accuracy for the sake of a simple model that can be described in terms of just a few coefficients, and for which \\(p\\)-values are available. 3.6 Lab: Linear Regression 3.6.1 Libraries Load the boston data rather than the full ISLR2 package: boston &lt;- ISLR2::Boston 3.6.2 Simple Linear Regression Regress median value of owner-occupied homes medv on percentage of houses with lower socioeconomic status lstat: lm_medv_lstat &lt;- lm(medv ~ lstat, data = boston) summary(lm_medv_lstat) ## ## Call: ## lm(formula = medv ~ lstat, data = boston) ## ## Residuals: ## Min 1Q Median 3Q Max ## -15.168 -3.990 -1.318 2.034 24.500 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 34.55384 0.56263 61.41 &lt;2e-16 *** ## lstat -0.95005 0.03873 -24.53 &lt;2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 6.216 on 504 degrees of freedom ## Multiple R-squared: 0.5441, Adjusted R-squared: 0.5432 ## F-statistic: 601.6 on 1 and 504 DF, p-value: &lt; 2.2e-16 Compute confidence and prediction intervals at different values of lstat: nd &lt;- tibble(lstat = c(5, 10, 15)) bind_cols( nd, as_tibble(predict(lm_medv_lstat, nd, interval = &quot;confidence&quot;)) ) ## # A tibble: 3 x 4 ## lstat fit lwr upr ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 5 29.8 29.0 30.6 ## 2 10 25.1 24.5 25.6 ## 3 15 20.3 19.7 20.9 bind_cols( nd, as_tibble(predict(lm_medv_lstat, nd, interval = &quot;prediction&quot;)) ) ## # A tibble: 3 x 4 ## lstat fit lwr upr ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 5 29.8 17.6 42.0 ## 2 10 25.1 12.8 37.3 ## 3 15 20.3 8.08 32.5 The broom::augment function is a more convenient method: broom::augment( lm_medv_lstat, newdata = nd, interval = &quot;confidence&quot; ) ## # A tibble: 3 x 4 ## lstat .fitted .lower .upper ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 5 29.8 29.0 30.6 ## 2 10 25.1 24.5 25.6 ## 3 15 20.3 19.7 20.9 Plot the relationship between medv and lstat: boston %&gt;% ggplot(aes(x = lstat, y = medv)) + geom_point(alpha = 0.3) + geom_abline(slope = coef(lm_medv_lstat)[&quot;lstat&quot;], intercept = coef(lm_medv_lstat)[&quot;(Intercept)&quot;], size = 1.0, color = td_colors$nice$day9_yellow) To display model diagnostics, we can call plot() on the model object as we have before, but I like the performance package because it uses ggplot2: performance::check_model(lm_medv_lstat) The stats::hatvalues() function is a new one to me, for computing leverage: hatvalues(lm_medv_lstat)[which.max(hatvalues(lm_medv_lstat))] ## 375 ## 0.02686517 Unsurprisingly, this point is the one with the largest value of lstat: boston %&gt;% transmute(row = 1:n(), lstat, medv) %&gt;% filter(lstat == max(lstat)) ## row lstat medv ## 1 375 37.97 13.8 3.6.3 Multiple Linear Regression Fit to all predictors and check VIF with the performance package: lm_medv_all &lt;- lm(medv ~ ., data = boston) performance::check_collinearity(lm_medv_all) ## # Check for Multicollinearity ## ## Low Correlation ## ## Term VIF Increased SE Tolerance ## crim 1.77 1.33 0.57 ## zn 2.30 1.52 0.44 ## indus 3.99 2.00 0.25 ## chas 1.07 1.03 0.93 ## nox 4.37 2.09 0.23 ## rm 1.91 1.38 0.52 ## age 3.09 1.76 0.32 ## dis 3.95 1.99 0.25 ## ptratio 1.80 1.34 0.56 ## lstat 2.87 1.69 0.35 ## ## Moderate Correlation ## ## Term VIF Increased SE Tolerance ## rad 7.45 2.73 0.13 ## tax 9.00 3.00 0.11 The rad (accessibility to radial highways) and tax (property tax rate) variables have moderate VIF. 3.6.4 Interaction Terms Interaction between lstat and age: lm_medv_lstat_age &lt;- lm(medv ~ lstat * age, data = boston) tidy_custom(lm_medv_lstat_age) %&gt;% gt() html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #auxonyeepc .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #auxonyeepc .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #auxonyeepc .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #auxonyeepc .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #auxonyeepc .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #auxonyeepc .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #auxonyeepc .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #auxonyeepc .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #auxonyeepc .gt_column_spanner_outer:first-child { padding-left: 0; } #auxonyeepc .gt_column_spanner_outer:last-child { padding-right: 0; } #auxonyeepc .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #auxonyeepc .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #auxonyeepc .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #auxonyeepc .gt_from_md > :first-child { margin-top: 0; } #auxonyeepc .gt_from_md > :last-child { margin-bottom: 0; } #auxonyeepc .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #auxonyeepc .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #auxonyeepc .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #auxonyeepc .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #auxonyeepc .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #auxonyeepc .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #auxonyeepc .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #auxonyeepc .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #auxonyeepc .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #auxonyeepc .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #auxonyeepc .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #auxonyeepc .gt_sourcenote { font-size: 90%; padding: 4px; } #auxonyeepc .gt_left { text-align: left; } #auxonyeepc .gt_center { text-align: center; } #auxonyeepc .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #auxonyeepc .gt_font_normal { font-weight: normal; } #auxonyeepc .gt_font_bold { font-weight: bold; } #auxonyeepc .gt_font_italic { font-style: italic; } #auxonyeepc .gt_super { font-size: 65%; } #auxonyeepc .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } term coefficient std.error t-statistic p-value (Intercept) 36.089 1.4698 24.55 &lt;0.001 lstat -1.392 0.1675 -8.31 &lt;0.001 age -0.001 0.0199 -0.04 0.971 lstat:age 0.004 0.0019 2.24 0.025 3.6.5 Non-linear Transformations of the Predictors Perform a regression of medv onto lstat and lstat^2, and compare fits with anova: lm_medv_lstat2 &lt;- lm(medv ~ lstat + I(lstat^2), data = boston) anova(lm_medv_lstat, lm_medv_lstat2) ## Analysis of Variance Table ## ## Model 1: medv ~ lstat ## Model 2: medv ~ lstat + I(lstat^2) ## Res.Df RSS Df Sum of Sq F Pr(&gt;F) ## 1 504 19472 ## 2 503 15347 1 4125.1 135.2 &lt; 2.2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 The quadratic model is superior by the \\(F\\)-test. Check the residuals: performance::check_model(lm_medv_lstat2, check = &quot;linearity&quot;) The quadratic term is an obvious improvement, but still some non-linearity at large values of medv. The poly() function is a quick way to include higher order terms: # Orthogonalized predictors by default lm_medv_lstat5 &lt;- lm(medv ~ poly(lstat, 5), data = boston) tidy_custom(lm_medv_lstat5) ## # A tibble: 6 x 5 ## term coefficient std.error `t-statistic` `p-value` ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; ## 1 (Intercept) 22.5 0.232 97.2 &lt;0.001 ## 2 poly(lstat, 5)1 -152. 5.21 -29.2 &lt;0.001 ## 3 poly(lstat, 5)2 64.2 5.21 12.3 &lt;0.001 ## 4 poly(lstat, 5)3 -27.1 5.21 -5.19 &lt;0.001 ## 5 poly(lstat, 5)4 25.5 5.21 4.88 &lt;0.001 ## 6 poly(lstat, 5)5 -19.3 5.21 -3.69 &lt;0.001 # Raw polynomials lm_medv_lstat5_raw &lt;- lm(medv ~ poly(lstat, 5, raw = TRUE), data = boston) tidy_custom(lm_medv_lstat5_raw) ## # A tibble: 6 x 5 ## term coefficient std.error `t-statistic` `p-value` ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; ## 1 (Intercept) 67.7 3.60 18.8 &lt;0.001 ## 2 poly(lstat, 5, raw = TRUE)1 -12.0 1.53 -7.86 &lt;0.001 ## 3 poly(lstat, 5, raw = TRUE)2 1.27 0.223 5.7 &lt;0.001 ## 4 poly(lstat, 5, raw = TRUE)3 -0.068 0.0144 -4.75 &lt;0.001 ## 5 poly(lstat, 5, raw = TRUE)4 0.002 0.0004 4.14 &lt;0.001 ## 6 poly(lstat, 5, raw = TRUE)5 0 0 -3.69 &lt;0.001 3.6.6 Qualitative Predictors Load carseats: carseats &lt;- ISLR2::Carseats The contrasts() function shows the dummy coding for the qualitative ShelveLoc variable: contrasts(carseats$ShelveLoc) ## Good Medium ## Bad 0 0 ## Good 1 0 ## Medium 0 1 Fit the model and print the coefficients related to ShelveLoc: lm_sales &lt;- lm(Sales ~ . + Income:Advertising + Price:Age, data = carseats) tidy_custom(lm_sales) %&gt;% filter(str_detect(term, &quot;ShelveLoc|Intercept&quot;)) ## # A tibble: 3 x 5 ## term coefficient std.error `t-statistic` `p-value` ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; ## 1 (Intercept) 6.58 1.01 6.52 &lt;0.001 ## 2 ShelveLocGood 4.85 0.153 31.7 &lt;0.001 ## 3 ShelveLocMedium 1.95 0.126 15.5 &lt;0.001 3.7 Exercises Applied Ill attempt to do these exercises in the tidymodels framework. library(tidymodels) 8. Simple linear regression with Auto This is way overkill for a simple linear regression, but here is a tidymodels workflow object for regressing mpg on horsepower: lm_mpg_hp_recipe &lt;- recipe(mpg ~ horsepower, data = auto) lm_mpg_hp_spec &lt;- linear_reg() %&gt;% set_mode(&quot;regression&quot;) %&gt;% set_engine(&quot;lm&quot;) lm_mpg_hp_workflow &lt;- workflow() %&gt;% add_recipe(lm_mpg_hp_recipe) %&gt;% add_model(lm_mpg_hp_spec) lm_mpg_hp_workflow ## == Workflow ==================================================================== ## Preprocessor: Recipe ## Model: linear_reg() ## ## -- Preprocessor ---------------------------------------------------------------- ## 0 Recipe Steps ## ## -- Model ----------------------------------------------------------------------- ## Linear Regression Model Specification (regression) ## ## Computational engine: lm Fit the model and print the estimates: lm_mpg_hp_fit &lt;- lm_mpg_hp_workflow %&gt;% fit(data = auto) tidy_custom(lm_mpg_hp_fit) %&gt;% gt() html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #euntudovoo .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #euntudovoo .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #euntudovoo .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #euntudovoo .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #euntudovoo .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #euntudovoo .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #euntudovoo .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #euntudovoo .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #euntudovoo .gt_column_spanner_outer:first-child { padding-left: 0; } #euntudovoo .gt_column_spanner_outer:last-child { padding-right: 0; } #euntudovoo .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #euntudovoo .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #euntudovoo .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #euntudovoo .gt_from_md > :first-child { margin-top: 0; } #euntudovoo .gt_from_md > :last-child { margin-bottom: 0; } #euntudovoo .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #euntudovoo .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #euntudovoo .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #euntudovoo .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #euntudovoo .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #euntudovoo .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #euntudovoo .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #euntudovoo .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #euntudovoo .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #euntudovoo .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #euntudovoo .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #euntudovoo .gt_sourcenote { font-size: 90%; padding: 4px; } #euntudovoo .gt_left { text-align: left; } #euntudovoo .gt_center { text-align: center; } #euntudovoo .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #euntudovoo .gt_font_normal { font-weight: normal; } #euntudovoo .gt_font_bold { font-weight: bold; } #euntudovoo .gt_font_italic { font-style: italic; } #euntudovoo .gt_super { font-size: 65%; } #euntudovoo .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } term coefficient std.error t-statistic p-value (Intercept) 39.936 0.7175 55.66 &lt;0.001 horsepower -0.158 0.0064 -24.49 &lt;0.001 The tidymodels framework uses the same functions as we have seen (the engine specifies the lm function), but in principled fashion with a standardized interface. We can extract the actual lm object from lm_mpg_hp_fit using extract_fit_engine() lm_mpg_hp_fit_engine &lt;- lm_mpg_hp_fit %&gt;% extract_fit_engine() summary(lm_mpg_hp_fit_engine) ## ## Call: ## stats::lm(formula = ..y ~ ., data = data) ## ## Residuals: ## Min 1Q Median 3Q Max ## -13.5710 -3.2592 -0.3435 2.7630 16.9240 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 39.935861 0.717499 55.66 &lt;2e-16 *** ## horsepower -0.157845 0.006446 -24.49 &lt;2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 4.906 on 390 degrees of freedom ## Multiple R-squared: 0.6059, Adjusted R-squared: 0.6049 ## F-statistic: 599.7 on 1 and 390 DF, p-value: &lt; 2.2e-16 Observations on the model: There is a relationship between mpg and horsepower. Is is highly significant (\\(p\\) &lt;0.001) with $R^2 = $ 0.61 The relationship is negative. Every unit of horsepower is associated with a -0.16 reduction in miles per gallon. The confidence and prediction intervals of predicted mpg given horsepower = 98: predict(lm_mpg_hp_fit, tibble(horsepower = 98), type = &quot;conf_int&quot;, # Don&#39;t have to call this, because it is the default value level = 0.95) ## # A tibble: 1 x 2 ## .pred_lower .pred_upper ## &lt;dbl&gt; &lt;dbl&gt; ## 1 24.0 25.0 predict(lm_mpg_hp_fit, tibble(horsepower = 98), type = &quot;pred_int&quot;) ## # A tibble: 1 x 2 ## .pred_lower .pred_upper ## &lt;dbl&gt; &lt;dbl&gt; ## 1 14.8 34.1 Note that the lm_mpg_hp_fit is a workflow object, and so the parsnip::predict.model_fit() function takes a different argument (type) to specify confidence/prediction intervals. Before, we were calling predict.lm() which uses the interval argument. Note that it also doesnt return the point estimate, just the lower and upper values. Plot with best fit line: auto %&gt;% ggplot(aes(x = horsepower)) + geom_point(aes(y = mpg), size = 2, alpha = 0.4) + geom_abline(slope = coef(lm_mpg_hp_fit_engine)[&quot;horsepower&quot;], intercept = coef(lm_mpg_hp_fit_engine)[&quot;(Intercept)&quot;], size = 2, color = td_colors$nice$emerald) Diagnostic plots: lm_mpg_hp_fit_engine %&gt;% performance::check_model() Two potential problems: non-linearity (top left plot) and homogeneity of variance (top right). 9. Multiple linear regression with Auto Scatterplot of all variables. For quickly producing these correlation matrices, I like the GGally::ggpairs() function: GGally::ggpairs(auto %&gt;% select(-name)) ## Registered S3 method overwritten by &#39;GGally&#39;: ## method from ## +.gg ggplot2 Compute the correlations. The above plot shows the correlation coefficients, but here is the cor() output: cor(auto %&gt;% select(-name)) ## mpg cylinders displacement horsepower weight ## mpg 1.0000000 -0.7776175 -0.8051269 -0.7784268 -0.8322442 ## cylinders -0.7776175 1.0000000 0.9508233 0.8429834 0.8975273 ## displacement -0.8051269 0.9508233 1.0000000 0.8972570 0.9329944 ## horsepower -0.7784268 0.8429834 0.8972570 1.0000000 0.8645377 ## weight -0.8322442 0.8975273 0.9329944 0.8645377 1.0000000 ## acceleration 0.4233285 -0.5046834 -0.5438005 -0.6891955 -0.4168392 ## year 0.5805410 -0.3456474 -0.3698552 -0.4163615 -0.3091199 ## origin 0.5652088 -0.5689316 -0.6145351 -0.4551715 -0.5850054 ## acceleration year origin ## mpg 0.4233285 0.5805410 0.5652088 ## cylinders -0.5046834 -0.3456474 -0.5689316 ## displacement -0.5438005 -0.3698552 -0.6145351 ## horsepower -0.6891955 -0.4163615 -0.4551715 ## weight -0.4168392 -0.3091199 -0.5850054 ## acceleration 1.0000000 0.2903161 0.2127458 ## year 0.2903161 1.0000000 0.1815277 ## origin 0.2127458 0.1815277 1.0000000 Fit the multiple linear regression. lm_mpg_recipe &lt;- recipe(mpg ~ ., data = auto) %&gt;% step_rm(name) # Skip the spec step, and just put it directly into the workflow lm_mpg_workflow &lt;- workflow() %&gt;% add_recipe(lm_mpg_recipe) %&gt;% # By default, linear_reg() will use lm as the engine and regression as mode add_model(linear_reg()) lm_mpg_workflow ## == Workflow ==================================================================== ## Preprocessor: Recipe ## Model: linear_reg() ## ## -- Preprocessor ---------------------------------------------------------------- ## 1 Recipe Step ## ## * step_rm() ## ## -- Model ----------------------------------------------------------------------- ## Linear Regression Model Specification (regression) ## ## Computational engine: lm lm_mpg_fit &lt;- lm_mpg_workflow %&gt;% fit(data = auto) lm_mpg_fit_engine &lt;- extract_fit_engine(lm_mpg_fit) summary(lm_mpg_fit_engine) ## ## Call: ## stats::lm(formula = ..y ~ ., data = data) ## ## Residuals: ## Min 1Q Median 3Q Max ## -9.5903 -2.1565 -0.1169 1.8690 13.0604 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) -17.218435 4.644294 -3.707 0.00024 *** ## cylinders -0.493376 0.323282 -1.526 0.12780 ## displacement 0.019896 0.007515 2.647 0.00844 ** ## horsepower -0.016951 0.013787 -1.230 0.21963 ## weight -0.006474 0.000652 -9.929 &lt; 2e-16 *** ## acceleration 0.080576 0.098845 0.815 0.41548 ## year 0.750773 0.050973 14.729 &lt; 2e-16 *** ## origin 1.426141 0.278136 5.127 4.67e-07 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 3.328 on 384 degrees of freedom ## Multiple R-squared: 0.8215, Adjusted R-squared: 0.8182 ## F-statistic: 252.4 on 7 and 384 DF, p-value: &lt; 2.2e-16 There is a relationship between the predictors and mpg: \\(F\\) = 252.4 The following terms are statistically significant: (Intercept), displacement, weight, year, origin The coefficient for year suggests that, for every increment in car model year, mpg increases by 0.75 Diagnostic plots. lm_mpg_fit %&gt;% extract_fit_engine() %&gt;% performance::check_model() Some non-linearity and moderate collinearity. There is a point with high leverage, but it has a fairly small standardized residual. 10. Multiple linear regression with Carseats Fit a model to predict Sales using Price, Urban, and US. For demonstration, here Ill use the minimal code possible while still using tidymodels (i.e. skip recipe and workflow steps): lm_sales_price_urban_us_fit &lt;- linear_reg() %&gt;% # default engine = &quot;lm&quot; fit(Sales ~ Price + Urban + US, data = carseats) fit_tidy &lt;- tidy(lm_sales_price_urban_us_fit) tidy_custom(lm_sales_price_urban_us_fit) %&gt;% gt() html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #eoyoctstbi .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #eoyoctstbi .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #eoyoctstbi .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #eoyoctstbi .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #eoyoctstbi .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #eoyoctstbi .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #eoyoctstbi .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #eoyoctstbi .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #eoyoctstbi .gt_column_spanner_outer:first-child { padding-left: 0; } #eoyoctstbi .gt_column_spanner_outer:last-child { padding-right: 0; } #eoyoctstbi .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #eoyoctstbi .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #eoyoctstbi .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #eoyoctstbi .gt_from_md > :first-child { margin-top: 0; } #eoyoctstbi .gt_from_md > :last-child { margin-bottom: 0; } #eoyoctstbi .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #eoyoctstbi .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #eoyoctstbi .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #eoyoctstbi .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #eoyoctstbi .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #eoyoctstbi .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #eoyoctstbi .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #eoyoctstbi .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #eoyoctstbi .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #eoyoctstbi .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #eoyoctstbi .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #eoyoctstbi .gt_sourcenote { font-size: 90%; padding: 4px; } #eoyoctstbi .gt_left { text-align: left; } #eoyoctstbi .gt_center { text-align: center; } #eoyoctstbi .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #eoyoctstbi .gt_font_normal { font-weight: normal; } #eoyoctstbi .gt_font_bold { font-weight: bold; } #eoyoctstbi .gt_font_italic { font-style: italic; } #eoyoctstbi .gt_super { font-size: 65%; } #eoyoctstbi .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } term coefficient std.error t-statistic p-value (Intercept) 13.043 0.6510 20.04 &lt;0.001 Price -0.054 0.0052 -10.39 &lt;0.001 UrbanYes -0.022 0.2717 -0.08 0.936 USYes 1.201 0.2590 4.63 &lt;0.001 Provide an interpretation of each coefficient. There is a significant negative relationship between Sales and Price: A difference of -0.054 thousand unit sales per dollar of price There is no significant association between Urban and Sales: Urban stores sell -0.022 thousand units compared to non-urban There is a significant difference between US and non-US stores. US stores sell 1.2 thousand more units on average compared to non-US Write out the model formula. There is a nice package called equatiomatic for writing out model formulae: lm_sales_price_urban_us_fit %&gt;% extract_fit_engine() %&gt;% equatiomatic::extract_eq() \\[ \\operatorname{Sales} = \\alpha + \\beta_{1}(\\operatorname{Price}) + \\beta_{2}(\\operatorname{Urban}_{\\operatorname{Yes}}) + \\beta_{3}(\\operatorname{US}_{\\operatorname{Yes}}) + \\epsilon \\] Note that it uses \\(\\alpha\\), rather than \\(\\beta_0\\), to represent intercepts by default. For which predictions can you reject the null hypothesis \\(H_0: \\beta_j = 0\\)? For \\(\\beta_1\\) (Price) and \\(\\beta_3\\) (US). Fit a smaller model with just the predictors in (d). lm_sales_price_us_fit &lt;- linear_reg() %&gt;% fit(Sales ~ Price + US, data = carseats) tidy_custom(lm_sales_price_us_fit) %&gt;% gt() html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #ajjglkiuok .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #ajjglkiuok .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #ajjglkiuok .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #ajjglkiuok .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #ajjglkiuok .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #ajjglkiuok .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #ajjglkiuok .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #ajjglkiuok .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #ajjglkiuok .gt_column_spanner_outer:first-child { padding-left: 0; } #ajjglkiuok .gt_column_spanner_outer:last-child { padding-right: 0; } #ajjglkiuok .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #ajjglkiuok .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #ajjglkiuok .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #ajjglkiuok .gt_from_md > :first-child { margin-top: 0; } #ajjglkiuok .gt_from_md > :last-child { margin-bottom: 0; } #ajjglkiuok .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #ajjglkiuok .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #ajjglkiuok .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #ajjglkiuok .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #ajjglkiuok .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #ajjglkiuok .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #ajjglkiuok .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #ajjglkiuok .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #ajjglkiuok .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #ajjglkiuok .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #ajjglkiuok .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #ajjglkiuok .gt_sourcenote { font-size: 90%; padding: 4px; } #ajjglkiuok .gt_left { text-align: left; } #ajjglkiuok .gt_center { text-align: center; } #ajjglkiuok .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #ajjglkiuok .gt_font_normal { font-weight: normal; } #ajjglkiuok .gt_font_bold { font-weight: bold; } #ajjglkiuok .gt_font_italic { font-style: italic; } #ajjglkiuok .gt_super { font-size: 65%; } #ajjglkiuok .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } term coefficient std.error t-statistic p-value (Intercept) 13.031 0.6310 20.65 &lt;0.001 Price -0.054 0.0052 -10.42 &lt;0.001 USYes 1.200 0.2585 4.64 &lt;0.001 How well do the model fits the data? bind_rows( bind_cols(model = &quot;small&quot;, glance(lm_sales_price_us_fit)), bind_cols(model = &quot;full&quot;, glance(lm_sales_price_urban_us_fit)) ) %&gt;% transmute( model, R2 = round(r.squared, 3), RSE = round(sigma, 3) ) %&gt;% gt() html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #ifygjreooi .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #ifygjreooi .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #ifygjreooi .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #ifygjreooi .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #ifygjreooi .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #ifygjreooi .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #ifygjreooi .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #ifygjreooi .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #ifygjreooi .gt_column_spanner_outer:first-child { padding-left: 0; } #ifygjreooi .gt_column_spanner_outer:last-child { padding-right: 0; } #ifygjreooi .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #ifygjreooi .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #ifygjreooi .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #ifygjreooi .gt_from_md > :first-child { margin-top: 0; } #ifygjreooi .gt_from_md > :last-child { margin-bottom: 0; } #ifygjreooi .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #ifygjreooi .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #ifygjreooi .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #ifygjreooi .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #ifygjreooi .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #ifygjreooi .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #ifygjreooi .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #ifygjreooi .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #ifygjreooi .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #ifygjreooi .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #ifygjreooi .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #ifygjreooi .gt_sourcenote { font-size: 90%; padding: 4px; } #ifygjreooi .gt_left { text-align: left; } #ifygjreooi .gt_center { text-align: center; } #ifygjreooi .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #ifygjreooi .gt_font_normal { font-weight: normal; } #ifygjreooi .gt_font_bold { font-weight: bold; } #ifygjreooi .gt_font_italic { font-style: italic; } #ifygjreooi .gt_super { font-size: 65%; } #ifygjreooi .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } model R2 RSE small 0.239 2.469 full 0.239 2.472 Excluding Urban makes no difference to \\(R^2\\). Run an \\(F\\)-test as well: anova( extract_fit_engine(lm_sales_price_urban_us_fit), extract_fit_engine(lm_sales_price_us_fit) ) ## Analysis of Variance Table ## ## Model 1: Sales ~ Price + Urban + US ## Model 2: Sales ~ Price + US ## Res.Df RSS Df Sum of Sq F Pr(&gt;F) ## 1 396 2420.8 ## 2 397 2420.9 -1 -0.03979 0.0065 0.9357 Obtain 95% confidence intervals for the coefficients from (e). tidy(lm_sales_price_us_fit, conf.int = 0.95) %&gt;% transmute( term, across(c(estimate, conf.low, conf.high), round, 3) ) %&gt;% gt() html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #pmqpemujbi .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #pmqpemujbi .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #pmqpemujbi .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #pmqpemujbi .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #pmqpemujbi .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #pmqpemujbi .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #pmqpemujbi .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #pmqpemujbi .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #pmqpemujbi .gt_column_spanner_outer:first-child { padding-left: 0; } #pmqpemujbi .gt_column_spanner_outer:last-child { padding-right: 0; } #pmqpemujbi .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #pmqpemujbi .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #pmqpemujbi .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #pmqpemujbi .gt_from_md > :first-child { margin-top: 0; } #pmqpemujbi .gt_from_md > :last-child { margin-bottom: 0; } #pmqpemujbi .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #pmqpemujbi .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #pmqpemujbi .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #pmqpemujbi .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #pmqpemujbi .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #pmqpemujbi .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #pmqpemujbi .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #pmqpemujbi .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #pmqpemujbi .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #pmqpemujbi .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #pmqpemujbi .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #pmqpemujbi .gt_sourcenote { font-size: 90%; padding: 4px; } #pmqpemujbi .gt_left { text-align: left; } #pmqpemujbi .gt_center { text-align: center; } #pmqpemujbi .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #pmqpemujbi .gt_font_normal { font-weight: normal; } #pmqpemujbi .gt_font_bold { font-weight: bold; } #pmqpemujbi .gt_font_italic { font-style: italic; } #pmqpemujbi .gt_super { font-size: 65%; } #pmqpemujbi .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } term estimate conf.low conf.high (Intercept) 13.031 11.790 14.271 Price -0.054 -0.065 -0.044 USYes 1.200 0.692 1.708 Is there evidence of outliers or high leverage observations in the model from (e)? lm_sales_price_us_fit %&gt;% performance::check_model(check = &quot;outliers&quot;) No evidence of outliers or high leverage points. 13. Simple linear regression to simulated data set.seed(1) Generate 100 observations from \\(N(0,1)\\). x &lt;- rnorm(100, 0, 1) Generate 100 observations from \\(N(0, 0.25)\\). eps &lt;- rnorm(100, 0, 0.25) Generate \\(Y = -1 + 0.5 X + \\epsilon\\) y &lt;- -1 + 0.5 * x + eps length(y) ## [1] 100 \\(\\beta_0\\) = -1, and \\(\\beta_1\\) = 0.5. Scatterplot between x and y. d &lt;- tibble(x, y) p &lt;- ggplot(d) + geom_point(aes(x, y)) p Fit the simple linear regression and compare estimates to simulation parameters. lm_y_x &lt;- lm(y ~ x, data = d) tidy_custom(lm_y_x) %&gt;% gt() html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #maszwdpqyg .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #maszwdpqyg .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #maszwdpqyg .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #maszwdpqyg .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #maszwdpqyg .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #maszwdpqyg .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #maszwdpqyg .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #maszwdpqyg .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #maszwdpqyg .gt_column_spanner_outer:first-child { padding-left: 0; } #maszwdpqyg .gt_column_spanner_outer:last-child { padding-right: 0; } #maszwdpqyg .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #maszwdpqyg .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #maszwdpqyg .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #maszwdpqyg .gt_from_md > :first-child { margin-top: 0; } #maszwdpqyg .gt_from_md > :last-child { margin-bottom: 0; } #maszwdpqyg .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #maszwdpqyg .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #maszwdpqyg .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #maszwdpqyg .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #maszwdpqyg .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #maszwdpqyg .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #maszwdpqyg .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #maszwdpqyg .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #maszwdpqyg .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #maszwdpqyg .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #maszwdpqyg .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #maszwdpqyg .gt_sourcenote { font-size: 90%; padding: 4px; } #maszwdpqyg .gt_left { text-align: left; } #maszwdpqyg .gt_center { text-align: center; } #maszwdpqyg .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #maszwdpqyg .gt_font_normal { font-weight: normal; } #maszwdpqyg .gt_font_bold { font-weight: bold; } #maszwdpqyg .gt_font_italic { font-style: italic; } #maszwdpqyg .gt_super { font-size: 65%; } #maszwdpqyg .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } term coefficient std.error t-statistic p-value (Intercept) -1.009 0.0242 -41.63 &lt;0.001 x 0.500 0.0269 18.56 &lt;0.001 \\(\\hat{\\beta_0}\\) and \\(\\hat{\\beta_1}\\) are very close (essentially equal) to the simulation values. Plot the least squares and population regression lines. d_lines &lt;- tribble( ~line, ~slope, ~intercept, &quot;Population&quot;, 0.5, -1, &quot;Least squares&quot;, coef(lm_y_x)[2], coef(lm_y_x)[1] ) p + geom_abline( data = d_lines, aes(slope = slope, intercept = intercept, color = line), size = 1.5, alpha = 0.5 ) + labs(color = NULL) + theme(legend.position = &quot;top&quot;) Exactly on top of each other. Fit a polynomial regression using \\(x^2\\). lm_y_x2 &lt;- lm(y ~ x + I(x^2), data = d) anova(lm_y_x, lm_y_x2) ## Analysis of Variance Table ## ## Model 1: y ~ x ## Model 2: y ~ x + I(x^2) ## Res.Df RSS Df Sum of Sq F Pr(&gt;F) ## 1 98 5.6772 ## 2 97 5.5643 1 0.11291 1.9682 0.1638 By an \\(F\\)-test, the \\(x^2\\) term did not improve the model fit. We can also look at \\(R^2\\): c(summary(lm_y_x)$r.squared, summary(lm_y_x2)$r.squared) ## [1] 0.7784361 0.7828424 Repeat with less noise. d_less &lt;- tibble( x, y = -1 + 0.5 * x + rnorm(100, 0, 0.1) ) lm_y_x_less &lt;- lm(y ~ x, data = d_less) p &lt;- ggplot(d_less) + geom_point(aes(x, y)) p d_lines &lt;- tribble( ~line, ~slope, ~intercept, &quot;Population&quot;, 0.5, -1, &quot;Least squares&quot;, coef(lm_y_x_less)[2], coef(lm_y_x_less)[1] ) p + geom_abline( data = d_lines, aes(slope = slope, intercept = intercept, color = line), size = 1.5, alpha = 0.5 ) + labs(color = NULL) + theme(legend.position = &quot;top&quot;) Repeat with more noise. d_more &lt;- tibble( x, y = -1 + 0.5*x + rnorm(100, 0, 0.5) ) lm_y_x_more &lt;- lm(y ~ x, data = d_more) p &lt;- ggplot(d_more) + geom_point(aes(x, y)) p d_lines &lt;- tribble( ~line, ~slope, ~intercept, &quot;Population&quot;, 0.5, -1, &quot;Least squares&quot;, coef(lm_y_x_more)[2], coef(lm_y_x_more)[1] ) p + geom_abline( data = d_lines, aes(slope = slope, intercept = intercept, color = line), size = 1.5, alpha = 0.5 ) + labs(color = NULL) + theme(legend.position = &quot;top&quot;) What are the confidence intervals of the coefficients for the different data? bind_rows( bind_cols(data = &quot;original&quot;, tidy(lm_y_x, conf.int = 0.95)), bind_cols(data = &quot;less&quot;, tidy(lm_y_x_less, conf.int = 0.95)), bind_cols(data = &quot;more&quot;, tidy(lm_y_x_more, conf.int = 0.95)) ) %&gt;% transmute( data, term, across(c(estimate, conf.low, conf.high), round, 3) ) %&gt;% group_by(data) %&gt;% gt(rowname_col = &quot;term&quot;) html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #aabxdtuftx .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #aabxdtuftx .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #aabxdtuftx .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #aabxdtuftx .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #aabxdtuftx .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #aabxdtuftx .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #aabxdtuftx .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #aabxdtuftx .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #aabxdtuftx .gt_column_spanner_outer:first-child { padding-left: 0; } #aabxdtuftx .gt_column_spanner_outer:last-child { padding-right: 0; } #aabxdtuftx .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #aabxdtuftx .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #aabxdtuftx .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #aabxdtuftx .gt_from_md > :first-child { margin-top: 0; } #aabxdtuftx .gt_from_md > :last-child { margin-bottom: 0; } #aabxdtuftx .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #aabxdtuftx .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #aabxdtuftx .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #aabxdtuftx .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #aabxdtuftx .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #aabxdtuftx .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #aabxdtuftx .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #aabxdtuftx .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #aabxdtuftx .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #aabxdtuftx .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #aabxdtuftx .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #aabxdtuftx .gt_sourcenote { font-size: 90%; padding: 4px; } #aabxdtuftx .gt_left { text-align: left; } #aabxdtuftx .gt_center { text-align: center; } #aabxdtuftx .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #aabxdtuftx .gt_font_normal { font-weight: normal; } #aabxdtuftx .gt_font_bold { font-weight: bold; } #aabxdtuftx .gt_font_italic { font-style: italic; } #aabxdtuftx .gt_super { font-size: 65%; } #aabxdtuftx .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } estimate conf.low conf.high original (Intercept) -1.009 -1.058 -0.961 x 0.500 0.446 0.553 less (Intercept) -0.991 -1.012 -0.970 x 0.483 0.459 0.506 more (Intercept) -1.023 -1.118 -0.927 x 0.549 0.443 0.656 14. Collineratiy simulation Simulate. set.seed(1) d &lt;- tibble( x1 = runif(100), x2 = 0.5 * x1 + rnorm(100) / 10, y = 2 + 2 * x1 + 0.3 * x2 + rnorm(100) ) \\[ Y = \\beta_0 + \\beta_1 X_1 + \\beta_2 X_2 + \\epsilon \\] \\(\\beta_0\\) = 2, \\(\\beta_1 = 2\\), and \\(\\beta_2 = 0.3\\). Correlation between \\(X_1\\) and \\(X_2\\). cor(d) ## x1 x2 y ## x1 1.0000000 0.8351212 0.4498446 ## x2 0.8351212 1.0000000 0.4199171 ## y 0.4498446 0.4199171 1.0000000 Unsurprisingly very high, \\(r\\) = 0.835. Fit the regression model. lm_y_x1_x2 &lt;- linear_reg() %&gt;% fit(y ~ x1 + x2, data = d) tidy_custom(lm_y_x1_x2) %&gt;% gt() html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #swqeswtyiu .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #swqeswtyiu .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #swqeswtyiu .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #swqeswtyiu .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #swqeswtyiu .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #swqeswtyiu .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #swqeswtyiu .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #swqeswtyiu .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #swqeswtyiu .gt_column_spanner_outer:first-child { padding-left: 0; } #swqeswtyiu .gt_column_spanner_outer:last-child { padding-right: 0; } #swqeswtyiu .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #swqeswtyiu .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #swqeswtyiu .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #swqeswtyiu .gt_from_md > :first-child { margin-top: 0; } #swqeswtyiu .gt_from_md > :last-child { margin-bottom: 0; } #swqeswtyiu .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #swqeswtyiu .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #swqeswtyiu .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #swqeswtyiu .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #swqeswtyiu .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #swqeswtyiu .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #swqeswtyiu .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #swqeswtyiu .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #swqeswtyiu .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #swqeswtyiu .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #swqeswtyiu .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #swqeswtyiu .gt_sourcenote { font-size: 90%; padding: 4px; } #swqeswtyiu .gt_left { text-align: left; } #swqeswtyiu .gt_center { text-align: center; } #swqeswtyiu .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #swqeswtyiu .gt_font_normal { font-weight: normal; } #swqeswtyiu .gt_font_bold { font-weight: bold; } #swqeswtyiu .gt_font_italic { font-style: italic; } #swqeswtyiu .gt_super { font-size: 65%; } #swqeswtyiu .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } term coefficient std.error t-statistic p-value (Intercept) 2.13 0.2319 9.19 &lt;0.001 x1 1.44 0.7212 2.00 0.049 x2 1.01 1.1337 0.89 0.375 We can reject the null that \\(\\beta_2 = 0\\), but not for \\(\\beta_1\\). The estimates are nowhere close to the true values. Fit the model of \\(Y\\) and \\(X_1\\). lm_y_x1 &lt;- linear_reg() %&gt;% fit(y ~ x1, data = d) tidy_custom(lm_y_x1) %&gt;% gt() html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #uosexngzmz .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #uosexngzmz .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #uosexngzmz .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #uosexngzmz .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #uosexngzmz .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #uosexngzmz .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #uosexngzmz .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #uosexngzmz .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #uosexngzmz .gt_column_spanner_outer:first-child { padding-left: 0; } #uosexngzmz .gt_column_spanner_outer:last-child { padding-right: 0; } #uosexngzmz .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #uosexngzmz .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #uosexngzmz .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #uosexngzmz .gt_from_md > :first-child { margin-top: 0; } #uosexngzmz .gt_from_md > :last-child { margin-bottom: 0; } #uosexngzmz .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #uosexngzmz .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #uosexngzmz .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #uosexngzmz .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #uosexngzmz .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #uosexngzmz .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #uosexngzmz .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #uosexngzmz .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #uosexngzmz .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #uosexngzmz .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #uosexngzmz .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #uosexngzmz .gt_sourcenote { font-size: 90%; padding: 4px; } #uosexngzmz .gt_left { text-align: left; } #uosexngzmz .gt_center { text-align: center; } #uosexngzmz .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #uosexngzmz .gt_font_normal { font-weight: normal; } #uosexngzmz .gt_font_bold { font-weight: bold; } #uosexngzmz .gt_font_italic { font-style: italic; } #uosexngzmz .gt_super { font-size: 65%; } #uosexngzmz .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } term coefficient std.error t-statistic p-value (Intercept) 2.112 0.2307 9.15 &lt;0.001 x1 1.976 0.3963 4.99 &lt;0.001 We recover the approximate true parameter, and reject the null. Fit the model of \\(Y\\) and \\(X_2\\). lm_y_x2 &lt;- linear_reg() %&gt;% fit(y ~ x2, data = d) tidy_custom(lm_y_x2) %&gt;% gt() html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #orfbuaqmum .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #orfbuaqmum .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #orfbuaqmum .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #orfbuaqmum .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #orfbuaqmum .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #orfbuaqmum .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #orfbuaqmum .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #orfbuaqmum .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #orfbuaqmum .gt_column_spanner_outer:first-child { padding-left: 0; } #orfbuaqmum .gt_column_spanner_outer:last-child { padding-right: 0; } #orfbuaqmum .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #orfbuaqmum .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #orfbuaqmum .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #orfbuaqmum .gt_from_md > :first-child { margin-top: 0; } #orfbuaqmum .gt_from_md > :last-child { margin-bottom: 0; } #orfbuaqmum .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #orfbuaqmum .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #orfbuaqmum .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #orfbuaqmum .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #orfbuaqmum .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #orfbuaqmum .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #orfbuaqmum .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #orfbuaqmum .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #orfbuaqmum .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #orfbuaqmum .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #orfbuaqmum .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #orfbuaqmum .gt_sourcenote { font-size: 90%; padding: 4px; } #orfbuaqmum .gt_left { text-align: left; } #orfbuaqmum .gt_center { text-align: center; } #orfbuaqmum .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #orfbuaqmum .gt_font_normal { font-weight: normal; } #orfbuaqmum .gt_font_bold { font-weight: bold; } #orfbuaqmum .gt_font_italic { font-style: italic; } #orfbuaqmum .gt_super { font-size: 65%; } #orfbuaqmum .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } term coefficient std.error t-statistic p-value (Intercept) 2.39 0.1949 12.26 &lt;0.001 x2 2.90 0.6330 4.58 &lt;0.001 We can reject the null, but dont recover \\(\\beta_2 = 0.3\\). Do the results contradict each other? Yes, the models give much different results. 15. Univariable and multivariable regression on Boston Fit univariable models. lm_crim_uni &lt;- tibble( # Get a list of predictors predictor = names(boston)[names(boston) != &quot;crim&quot;] ) %&gt;% mutate( mod = map( predictor, ~lm(as.formula(paste0(&quot;crim ~ &quot;, .x)), data = boston) ), mod_tidy = map(mod, broom::tidy) ) These associations were statistical significant at \\(\\alpha = 0.05\\): lm_crim_uni %&gt;% unnest(mod_tidy) %&gt;% filter(term != &quot;(Intercept)&quot;, p.value &lt; 0.05) %&gt;% transmute( predictor, estimate = signif(estimate, 4), p.value = scales::pvalue(p.value) ) %&gt;% gt() html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #zhbiyhxytn .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #zhbiyhxytn .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #zhbiyhxytn .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #zhbiyhxytn .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #zhbiyhxytn .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #zhbiyhxytn .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #zhbiyhxytn .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #zhbiyhxytn .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #zhbiyhxytn .gt_column_spanner_outer:first-child { padding-left: 0; } #zhbiyhxytn .gt_column_spanner_outer:last-child { padding-right: 0; } #zhbiyhxytn .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #zhbiyhxytn .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #zhbiyhxytn .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #zhbiyhxytn .gt_from_md > :first-child { margin-top: 0; } #zhbiyhxytn .gt_from_md > :last-child { margin-bottom: 0; } #zhbiyhxytn .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #zhbiyhxytn .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #zhbiyhxytn .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #zhbiyhxytn .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #zhbiyhxytn .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #zhbiyhxytn .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #zhbiyhxytn .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #zhbiyhxytn .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #zhbiyhxytn .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #zhbiyhxytn .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #zhbiyhxytn .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #zhbiyhxytn .gt_sourcenote { font-size: 90%; padding: 4px; } #zhbiyhxytn .gt_left { text-align: left; } #zhbiyhxytn .gt_center { text-align: center; } #zhbiyhxytn .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #zhbiyhxytn .gt_font_normal { font-weight: normal; } #zhbiyhxytn .gt_font_bold { font-weight: bold; } #zhbiyhxytn .gt_font_italic { font-style: italic; } #zhbiyhxytn .gt_super { font-size: 65%; } #zhbiyhxytn .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } predictor estimate p.value zn -0.07393 &lt;0.001 indus 0.50980 &lt;0.001 nox 31.25000 &lt;0.001 rm -2.68400 &lt;0.001 age 0.10780 &lt;0.001 dis -1.55100 &lt;0.001 rad 0.61790 &lt;0.001 tax 0.02974 &lt;0.001 ptratio 1.15200 &lt;0.001 lstat 0.54880 &lt;0.001 medv -0.36320 &lt;0.001 Fit the multiple regression. lm_crim_mult &lt;- lm(crim ~ ., data = boston) tidy_custom(lm_crim_mult) %&gt;% gt() html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #ztejltwxob .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #ztejltwxob .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #ztejltwxob .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #ztejltwxob .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #ztejltwxob .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #ztejltwxob .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #ztejltwxob .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #ztejltwxob .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #ztejltwxob .gt_column_spanner_outer:first-child { padding-left: 0; } #ztejltwxob .gt_column_spanner_outer:last-child { padding-right: 0; } #ztejltwxob .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #ztejltwxob .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #ztejltwxob .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #ztejltwxob .gt_from_md > :first-child { margin-top: 0; } #ztejltwxob .gt_from_md > :last-child { margin-bottom: 0; } #ztejltwxob .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #ztejltwxob .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #ztejltwxob .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #ztejltwxob .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #ztejltwxob .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #ztejltwxob .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #ztejltwxob .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #ztejltwxob .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #ztejltwxob .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #ztejltwxob .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #ztejltwxob .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #ztejltwxob .gt_sourcenote { font-size: 90%; padding: 4px; } #ztejltwxob .gt_left { text-align: left; } #ztejltwxob .gt_center { text-align: center; } #ztejltwxob .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #ztejltwxob .gt_font_normal { font-weight: normal; } #ztejltwxob .gt_font_bold { font-weight: bold; } #ztejltwxob .gt_font_italic { font-style: italic; } #ztejltwxob .gt_super { font-size: 65%; } #ztejltwxob .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } term coefficient std.error t-statistic p-value (Intercept) 13.778 7.0818 1.95 0.052 zn 0.046 0.0188 2.43 0.015 indus -0.058 0.0836 -0.70 0.486 chas -0.825 1.1834 -0.70 0.486 nox -9.958 5.2898 -1.88 0.060 rm 0.629 0.6071 1.04 0.301 age -0.001 0.0179 -0.05 0.962 dis -1.012 0.2825 -3.58 &lt;0.001 rad 0.612 0.0875 7.00 &lt;0.001 tax -0.004 0.0052 -0.73 0.466 ptratio -0.304 0.1864 -1.63 0.103 lstat 0.139 0.0757 1.83 0.067 medv -0.220 0.0598 -3.68 &lt;0.001 We reject the null for these predictors: zn, dis, rad, medv Compare regression estimates. lm_crim_estimates &lt;- lm_crim_uni %&gt;% unnest(mod_tidy) %&gt;% filter(term != &quot;(Intercept)&quot;) %&gt;% transmute( model = &quot;univariable&quot;, term, estimate ) %&gt;% bind_rows( tidy(lm_crim_mult) %&gt;% filter(term != &quot;(Intercept)&quot;) %&gt;% transmute( model = &quot;multivariable&quot;, term, estimate ) ) %&gt;% pivot_wider(names_from = model, values_from = estimate) lm_crim_estimates %&gt;% ggplot(aes(x = univariable, y = multivariable)) + geom_point(size = 2) + geom_abline(slope = 1, intercept = 0) One really bad outlier: lm_crim_estimates %&gt;% filter(univariable &gt; 20) ## # A tibble: 1 x 3 ## term univariable multivariable ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 nox 31.2 -9.96 Exclude that term and label the points: lm_crim_estimates %&gt;% filter(univariable &lt; 20) %&gt;% ggplot(aes(x = univariable, y = multivariable)) + geom_point(size = 2) + ggrepel::geom_text_repel(aes(label = term)) + geom_abline(slope = 1, intercept = 0) Is there evidence of non-linear association for any predictors? lm_crim_uni_poly &lt;- tibble( predictor = names(boston)[names(boston) != &quot;crim&quot;] ) %&gt;% mutate( mod = map( predictor, ~lm(as.formula(paste0(&quot;crim ~ poly(&quot;, .x, &quot;, 3)&quot;)), data = boston) ), mod_tidy = map(mod, broom::tidy) ) ## Error: Problem with `mutate()` column `mod`. ## i `mod = map(...)`. ## x &#39;degree&#39; must be less than number of unique points One of these models returned an error because the predictor does not have enough unique points to use polynomial regression. Look at the number of unique values for each variable in boston: boston %&gt;% pivot_longer(everything()) %&gt;% group_by(name) %&gt;% summarise(n_unique_vals = n_distinct(value), .groups = &quot;drop&quot;) %&gt;% arrange(n_unique_vals) ## # A tibble: 13 x 2 ## name n_unique_vals ## &lt;chr&gt; &lt;int&gt; ## 1 chas 2 ## 2 rad 9 ## 3 zn 26 ## 4 ptratio 46 ## 5 tax 66 ## 6 indus 76 ## 7 nox 81 ## 8 medv 229 ## 9 age 356 ## 10 dis 412 ## 11 rm 446 ## 12 lstat 455 ## 13 crim 504 The chas variable is a dummy variable to indicate the Charles River. Exclude it and fit again: lm_crim_uni_poly &lt;- tibble( predictor = names(boston)[names(boston) != &quot;crim&quot;] ) %&gt;% filter(predictor != &quot;chas&quot;) %&gt;% mutate( mod = map( predictor, ~lm(as.formula(paste0(&quot;crim ~ poly(&quot;, .x, &quot;, 3)&quot;)), data = boston) ), mod_tidy = map(mod, broom::tidy) ) These predictors have significant polynomial terms: lm_crim_uni_poly %&gt;% unnest(mod_tidy) %&gt;% filter(str_detect(term, &quot;poly&quot;)) %&gt;% group_by(predictor) %&gt;% filter(sum(p.value &lt; 0.05) &gt; 1) %&gt;% transmute( predictor, term, estimate = signif(estimate, 4), std.error = signif(std.error, 4), p.value = scales::pvalue(p.value) ) %&gt;% gt(rowname_col = &quot;term&quot;) html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #czrnmwoxbz .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #czrnmwoxbz .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #czrnmwoxbz .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #czrnmwoxbz .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #czrnmwoxbz .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #czrnmwoxbz .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #czrnmwoxbz .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #czrnmwoxbz .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #czrnmwoxbz .gt_column_spanner_outer:first-child { padding-left: 0; } #czrnmwoxbz .gt_column_spanner_outer:last-child { padding-right: 0; } #czrnmwoxbz .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #czrnmwoxbz .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #czrnmwoxbz .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #czrnmwoxbz .gt_from_md > :first-child { margin-top: 0; } #czrnmwoxbz .gt_from_md > :last-child { margin-bottom: 0; } #czrnmwoxbz .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #czrnmwoxbz .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #czrnmwoxbz .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #czrnmwoxbz .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #czrnmwoxbz .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #czrnmwoxbz .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #czrnmwoxbz .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #czrnmwoxbz .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #czrnmwoxbz .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #czrnmwoxbz .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #czrnmwoxbz .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #czrnmwoxbz .gt_sourcenote { font-size: 90%; padding: 4px; } #czrnmwoxbz .gt_left { text-align: left; } #czrnmwoxbz .gt_center { text-align: center; } #czrnmwoxbz .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #czrnmwoxbz .gt_font_normal { font-weight: normal; } #czrnmwoxbz .gt_font_bold { font-weight: bold; } #czrnmwoxbz .gt_font_italic { font-style: italic; } #czrnmwoxbz .gt_super { font-size: 65%; } #czrnmwoxbz .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } estimate std.error p.value zn poly(zn, 3)1 -38.750 8.372 &lt;0.001 poly(zn, 3)2 23.940 8.372 0.004 poly(zn, 3)3 -10.070 8.372 0.230 indus poly(indus, 3)1 78.590 7.423 &lt;0.001 poly(indus, 3)2 -24.390 7.423 0.001 poly(indus, 3)3 -54.130 7.423 &lt;0.001 nox poly(nox, 3)1 81.370 7.234 &lt;0.001 poly(nox, 3)2 -28.830 7.234 &lt;0.001 poly(nox, 3)3 -60.360 7.234 &lt;0.001 rm poly(rm, 3)1 -42.380 8.330 &lt;0.001 poly(rm, 3)2 26.580 8.330 0.002 poly(rm, 3)3 -5.510 8.330 0.509 age poly(age, 3)1 68.180 7.840 &lt;0.001 poly(age, 3)2 37.480 7.840 &lt;0.001 poly(age, 3)3 21.350 7.840 0.007 dis poly(dis, 3)1 -73.390 7.331 &lt;0.001 poly(dis, 3)2 56.370 7.331 &lt;0.001 poly(dis, 3)3 -42.620 7.331 &lt;0.001 rad poly(rad, 3)1 120.900 6.682 &lt;0.001 poly(rad, 3)2 17.490 6.682 0.009 poly(rad, 3)3 4.698 6.682 0.482 tax poly(tax, 3)1 112.600 6.854 &lt;0.001 poly(tax, 3)2 32.090 6.854 &lt;0.001 poly(tax, 3)3 -7.997 6.854 0.244 ptratio poly(ptratio, 3)1 56.050 8.122 &lt;0.001 poly(ptratio, 3)2 24.770 8.122 0.002 poly(ptratio, 3)3 -22.280 8.122 0.006 lstat poly(lstat, 3)1 88.070 7.629 &lt;0.001 poly(lstat, 3)2 15.890 7.629 0.038 poly(lstat, 3)3 -11.570 7.629 0.130 medv poly(medv, 3)1 -75.060 6.569 &lt;0.001 poly(medv, 3)2 88.090 6.569 &lt;0.001 poly(medv, 3)3 -48.030 6.569 &lt;0.001 Reproducibility Reproducibility receipt Sys.time() ## [1] &quot;2022-02-02 00:18:16 AST&quot; if (&quot;git2r&quot; %in% installed.packages()) { if (git2r::in_repository()) { git2r::repository() } } ## Local: main C:/Users/tdunn/Documents/learning/islr-tidy ## Remote: main @ origin (https://github.com/taylordunn/islr-tidy) ## Head: [9001002] 2022-02-02: Build up to exercises sessioninfo::session_info() ## - Session info --------------------------------------------------------------- ## setting value ## version R version 4.1.2 (2021-11-01) ## os Windows 10 x64 ## system x86_64, mingw32 ## ui RTerm ## language (EN) ## collate English_Canada.1252 ## ctype English_Canada.1252 ## tz America/Curacao ## date 2022-02-02 ## ## - Packages ------------------------------------------------------------------- ## package * version date lib source ## abind 1.4-5 2016-07-21 [1] CRAN (R 4.1.1) ## assertthat 0.2.1 2019-03-21 [1] CRAN (R 4.1.0) ## backports 1.2.1 2020-12-09 [1] CRAN (R 4.1.0) ## bayestestR 0.10.5 2021-07-26 [1] CRAN (R 4.1.0) ## bit 4.0.4 2020-08-04 [1] CRAN (R 4.1.2) ## bit64 4.0.5 2020-08-30 [1] CRAN (R 4.1.2) ## bookdown 0.24 2021-09-02 [1] CRAN (R 4.1.1) ## broom * 0.7.10 2021-10-31 [1] CRAN (R 4.1.2) ## bslib 0.2.5.1 2021-05-18 [1] CRAN (R 4.1.0) ## cachem 1.0.6 2021-08-19 [1] CRAN (R 4.1.1) ## car 3.0-12 2021-11-06 [1] CRAN (R 4.1.2) ## carData 3.0-4 2020-05-22 [1] CRAN (R 4.1.1) ## cellranger 1.1.0 2016-07-27 [1] CRAN (R 4.1.0) ## checkmate 2.0.0 2020-02-06 [1] CRAN (R 4.1.0) ## class 7.3-19 2021-05-03 [2] CRAN (R 4.1.2) ## cli 3.1.1 2022-01-20 [1] CRAN (R 4.1.2) ## coda 0.19-4 2020-09-30 [1] CRAN (R 4.1.0) ## codetools 0.2-18 2020-11-04 [2] CRAN (R 4.1.2) ## colorspace 2.0-2 2021-06-24 [1] CRAN (R 4.1.0) ## corrr * 0.4.3 2020-11-24 [1] CRAN (R 4.1.0) ## crayon 1.4.2 2021-10-29 [1] CRAN (R 4.1.1) ## datawizard 0.1.0 2021-06-18 [1] CRAN (R 4.1.0) ## DBI 1.1.2 2021-12-20 [1] CRAN (R 4.1.2) ## dbplyr 2.1.1 2021-04-06 [1] CRAN (R 4.1.0) ## DEoptimR 1.0-9 2021-05-24 [1] CRAN (R 4.1.0) ## dials * 0.0.10 2021-09-10 [1] CRAN (R 4.1.1) ## DiceDesign 1.9 2021-02-13 [1] CRAN (R 4.1.0) ## digest 0.6.29 2021-12-01 [1] CRAN (R 4.1.2) ## distill 1.3 2021-10-13 [1] CRAN (R 4.1.2) ## downlit 0.4.0 2021-10-29 [1] CRAN (R 4.1.1) ## dplyr * 1.0.7 2021-06-18 [1] CRAN (R 4.1.0) ## dunnr * 0.2.5 2022-01-15 [1] Github (taylordunn/dunnr@c83b30e) ## effectsize 0.4.5 2021-05-25 [1] CRAN (R 4.1.0) ## ellipsis 0.3.2 2021-04-29 [1] CRAN (R 4.1.0) ## emmeans 1.7.0 2021-09-29 [1] CRAN (R 4.1.2) ## equatiomatic 0.2.0 2021-01-30 [1] CRAN (R 4.1.0) ## estimability 1.3 2018-02-11 [1] CRAN (R 4.1.1) ## evaluate 0.14 2019-05-28 [1] CRAN (R 4.1.0) ## extrafont 0.17 2014-12-08 [1] CRAN (R 4.1.0) ## extrafontdb 1.0 2012-06-11 [1] CRAN (R 4.1.0) ## fansi 1.0.2 2022-01-14 [1] CRAN (R 4.1.2) ## farver 2.1.0 2021-02-28 [1] CRAN (R 4.1.0) ## fastmap 1.1.0 2021-01-25 [1] CRAN (R 4.1.0) ## forcats * 0.5.1 2021-01-27 [1] CRAN (R 4.1.0) ## foreach 1.5.1 2020-10-15 [1] CRAN (R 4.1.0) ## fs 1.5.2 2021-12-08 [1] CRAN (R 4.1.2) ## furrr 0.2.3 2021-06-25 [1] CRAN (R 4.1.2) ## future 1.23.0 2021-10-31 [1] CRAN (R 4.1.2) ## generics 0.1.1 2021-10-25 [1] CRAN (R 4.1.1) ## GGally 2.1.2 2021-06-21 [1] CRAN (R 4.1.0) ## ggplot2 * 3.3.5 2021-06-25 [1] CRAN (R 4.1.0) ## ggrepel 0.9.1 2021-01-15 [1] CRAN (R 4.1.0) ## ggridges 0.5.3 2021-01-08 [1] CRAN (R 4.1.0) ## git2r 0.28.0 2021-01-10 [1] CRAN (R 4.1.0) ## globals 0.14.0 2020-11-22 [1] CRAN (R 4.1.0) ## glue 1.6.0 2021-12-17 [1] CRAN (R 4.1.2) ## gower 0.2.2 2020-06-23 [1] CRAN (R 4.1.0) ## GPfit 1.0-8 2019-02-08 [1] CRAN (R 4.1.0) ## gridExtra 2.3 2017-09-09 [1] CRAN (R 4.1.0) ## gt * 0.3.1 2021-08-07 [1] CRAN (R 4.1.2) ## gtable 0.3.0 2019-03-25 [1] CRAN (R 4.1.0) ## hardhat 0.1.6 2021-07-14 [1] CRAN (R 4.1.0) ## haven 2.4.1 2021-04-23 [1] CRAN (R 4.1.0) ## here * 1.0.1 2020-12-13 [1] CRAN (R 4.1.0) ## highr 0.9 2021-04-16 [1] CRAN (R 4.1.0) ## hms 1.1.1 2021-09-26 [1] CRAN (R 4.1.2) ## htmltools 0.5.2 2021-08-25 [1] CRAN (R 4.1.1) ## httr 1.4.2 2020-07-20 [1] CRAN (R 4.1.0) ## infer * 1.0.0 2021-08-13 [1] CRAN (R 4.1.1) ## insight 0.14.2 2021-06-22 [1] CRAN (R 4.1.0) ## ipred 0.9-12 2021-09-15 [1] CRAN (R 4.1.1) ## ISLR2 * 1.3-1 2022-01-10 [1] CRAN (R 4.1.2) ## iterators 1.0.13 2020-10-15 [1] CRAN (R 4.1.0) ## jquerylib 0.1.4 2021-04-26 [1] CRAN (R 4.1.0) ## jsonlite 1.7.3 2022-01-17 [1] CRAN (R 4.1.2) ## knitr 1.37 2021-12-16 [1] CRAN (R 4.1.2) ## labeling 0.4.2 2020-10-20 [1] CRAN (R 4.1.0) ## lattice 0.20-45 2021-09-22 [2] CRAN (R 4.1.2) ## lava 1.6.9 2021-03-11 [1] CRAN (R 4.1.0) ## lhs 1.1.1 2020-10-05 [1] CRAN (R 4.1.0) ## lifecycle 1.0.1 2021-09-24 [1] CRAN (R 4.1.1) ## listenv 0.8.0 2019-12-05 [1] CRAN (R 4.1.0) ## lubridate 1.8.0 2021-10-07 [1] CRAN (R 4.1.1) ## magrittr 2.0.1 2020-11-17 [1] CRAN (R 4.1.0) ## MASS 7.3-54 2021-05-03 [2] CRAN (R 4.1.2) ## Matrix 1.3-4 2021-06-01 [2] CRAN (R 4.1.2) ## memoise 2.0.1 2021-11-26 [1] CRAN (R 4.1.2) ## mgcv 1.8-38 2021-10-06 [2] CRAN (R 4.1.2) ## modeldata * 0.1.1 2021-07-14 [1] CRAN (R 4.1.0) ## modelr 0.1.8 2020-05-19 [1] CRAN (R 4.1.0) ## munsell 0.5.0 2018-06-12 [1] CRAN (R 4.1.0) ## mvtnorm 1.1-3 2021-10-08 [1] CRAN (R 4.1.1) ## nlme 3.1-153 2021-09-07 [2] CRAN (R 4.1.2) ## nnet 7.3-16 2021-05-03 [2] CRAN (R 4.1.2) ## parallelly 1.27.0 2021-07-19 [1] CRAN (R 4.1.0) ## parameters 0.14.0 2021-05-29 [1] CRAN (R 4.1.0) ## parsnip * 0.1.7 2021-07-21 [1] CRAN (R 4.1.0) ## patchwork * 1.1.1 2020-12-17 [1] CRAN (R 4.1.0) ## performance 0.7.3 2021-07-21 [1] CRAN (R 4.1.1) ## pillar 1.6.4 2021-10-18 [1] CRAN (R 4.1.1) ## pkgconfig 2.0.3 2019-09-22 [1] CRAN (R 4.1.0) ## plyr 1.8.6 2020-03-03 [1] CRAN (R 4.1.0) ## pROC 1.17.0.1 2021-01-13 [1] CRAN (R 4.1.0) ## prodlim 2019.11.13 2019-11-17 [1] CRAN (R 4.1.0) ## purrr * 0.3.4 2020-04-17 [1] CRAN (R 4.1.2) ## qqplotr 0.0.5 2021-04-23 [1] CRAN (R 4.1.0) ## R6 2.5.1 2021-08-19 [1] CRAN (R 4.1.1) ## RColorBrewer 1.1-2 2014-12-07 [1] CRAN (R 4.1.0) ## Rcpp 1.0.8 2022-01-13 [1] CRAN (R 4.1.2) ## readr * 2.1.1 2021-11-30 [1] CRAN (R 4.1.2) ## readxl 1.3.1 2019-03-13 [1] CRAN (R 4.1.0) ## recipes * 0.1.17 2021-09-27 [1] CRAN (R 4.1.1) ## reprex 2.0.0 2021-04-02 [1] CRAN (R 4.1.0) ## reshape 0.8.8 2018-10-23 [1] CRAN (R 4.1.0) ## rlang 0.4.12 2021-10-18 [1] CRAN (R 4.1.1) ## rmarkdown 2.11 2021-09-14 [1] CRAN (R 4.1.1) ## robustbase 0.93-8 2021-06-02 [1] CRAN (R 4.1.0) ## rpart 4.1-15 2019-04-12 [2] CRAN (R 4.1.2) ## rprojroot 2.0.2 2020-11-15 [1] CRAN (R 4.1.0) ## rsample * 0.1.0 2021-05-08 [1] CRAN (R 4.1.0) ## rstudioapi 0.13 2020-11-12 [1] CRAN (R 4.1.0) ## Rttf2pt1 1.3.8 2020-01-10 [1] CRAN (R 4.1.1) ## rvest 1.0.0 2021-03-09 [1] CRAN (R 4.1.0) ## sass 0.4.0 2021-05-12 [1] CRAN (R 4.1.0) ## scales * 1.1.1 2020-05-11 [1] CRAN (R 4.1.0) ## see 0.6.4 2021-05-29 [1] CRAN (R 4.1.0) ## sessioninfo 1.1.1 2018-11-05 [1] CRAN (R 4.1.0) ## stringi 1.7.6 2021-11-29 [1] CRAN (R 4.1.2) ## stringr * 1.4.0 2019-02-10 [1] CRAN (R 4.1.0) ## survival 3.2-13 2021-08-24 [2] CRAN (R 4.1.2) ## tibble * 3.1.6 2021-11-07 [1] CRAN (R 4.1.1) ## tidymodels * 0.1.4 2021-10-01 [1] CRAN (R 4.1.1) ## tidyr * 1.1.4 2021-09-27 [1] CRAN (R 4.1.1) ## tidyselect 1.1.1 2021-04-30 [1] CRAN (R 4.1.0) ## tidyverse * 1.3.1 2021-04-15 [1] CRAN (R 4.1.2) ## timeDate 3043.102 2018-02-21 [1] CRAN (R 4.1.0) ## tune * 0.1.6 2021-07-21 [1] CRAN (R 4.1.0) ## tzdb 0.2.0 2021-10-27 [1] CRAN (R 4.1.2) ## usethis 2.1.5 2021-12-09 [1] CRAN (R 4.1.2) ## utf8 1.2.2 2021-07-24 [1] CRAN (R 4.1.0) ## vctrs 0.3.8 2021-04-29 [1] CRAN (R 4.1.0) ## vroom 1.5.7 2021-11-30 [1] CRAN (R 4.1.2) ## withr 2.4.3 2021-11-30 [1] CRAN (R 4.1.2) ## workflows * 0.2.3 2021-07-16 [1] CRAN (R 4.1.0) ## workflowsets * 0.1.0 2021-07-22 [1] CRAN (R 4.1.0) ## xfun 0.29 2021-12-14 [1] CRAN (R 4.1.2) ## xml2 1.3.3 2021-11-30 [1] CRAN (R 4.1.2) ## xtable 1.8-4 2019-04-21 [1] CRAN (R 4.1.0) ## yaml 2.2.1 2020-02-01 [1] CRAN (R 4.1.0) ## yardstick * 0.0.8 2021-03-28 [1] CRAN (R 4.1.0) ## ## [1] C:/Users/tdunn/Documents/R/win-library/4.1 ## [2] C:/Program Files/R/R-4.1.2/library References "],["classification.html", "4 Classification 4.1 An Overview of Classification 4.2 Why Not Linear Regression? 4.3 Logistic Regression 4.4 Generative Models for Classification 4.5 A Comparison of Classification Methods 4.6 Generalized Linear Models 4.7 Lab: Classification Methods 4.8 Exercises Reproducibility", " 4 Classification But in many situations, the response variable is instead qualitative. For example, eye color is qualitative. Often qualitative variables are referred to as categorical; we will use these terms interchangeably. In this chapter, we study approaches for predicting qualitative responses, a process that is known as classification. The methods covered in this chapter include logistic regression (and Poisson regression), linear discriminant analysis, quadratic discriminant analysis, naive Bayes, and \\(K\\)-nearest neighbors. 4.1 An Overview of Classification In this chapter, we will illustrate the concept of classification using the simulated Default data set. We are interested in predicting whether an individual will default on his or her credit card payment, on the basis of annual income and monthly credit card balance. Load the go-to packages and the default data set: library(tidyverse) library(broom) library(gt) library(patchwork) # for composing plots # Load my R package and set the ggplot theme library(dunnr) extrafont::loadfonts(device = &quot;win&quot;, quiet = TRUE) theme_set(theme_td()) set_geom_fonts() set_palette() default &lt;- ISLR2::Default glimpse(default) ## Rows: 10,000 ## Columns: 4 ## $ default &lt;fct&gt; No, No, No, No, No, No, No, No, No, No, No, No, No, No, No, No~ ## $ student &lt;fct&gt; No, Yes, No, No, No, Yes, No, Yes, No, No, Yes, Yes, No, No, N~ ## $ balance &lt;dbl&gt; 729.5265, 817.1804, 1073.5492, 529.2506, 785.6559, 919.5885, 8~ ## $ income &lt;dbl&gt; 44361.625, 12106.135, 31767.139, 35704.494, 38463.496, 7491.55~ Randomly choose a subset of the 10000 observations and re-create Figure 4.1: d &lt;- default %&gt;% add_count(default, name = &quot;n_group&quot;) %&gt;% slice_sample( n = 1000, # Inversely weight by group size to get more even distribution weight_by = n() - n_group ) p1 &lt;- d %&gt;% ggplot(aes(x = balance, y = income)) + geom_point(aes(color = default, shape = default), alpha = 0.5, show.legend = FALSE) p2 &lt;- d %&gt;% ggplot(aes(x = default, y = balance)) + geom_boxplot(aes(fill = default), show.legend = FALSE) p3 &lt;- d %&gt;% ggplot(aes(x = default, y = income)) + geom_boxplot(aes(fill = default), show.legend = FALSE) p1 | (p2 | p3) 4.2 Why Not Linear Regression? Linear regression cannot predict un-ordered qualitative responses with more than two levels. Unfortunately, in general there is no natural way to convert a qualitative response variable with more than two levels into a quantitative response that is ready for linear regression. It is possible to use linear regression to predict a binary (two level) response. For example, if we code stroke and drug overdose as dummy variables: \\[ Y = \\begin{cases} 0 &amp; \\text{if stroke;} \\\\ 1 &amp; \\text{if drug overdose}. \\end{cases} \\] Then we predict stroke if \\(\\hat{Y} &lt;= 0.5\\) and overdose if \\(\\hat{Y} &gt; 0.5\\). It turns out that these probability estimates are not unreasonble, but there can be issues: However, if we use linear regression, some of our estimates might be outside the [0, 1] interval (see Figure 4.2), making them hard to interpret as probabilities! Nevertheless, the predictions provide an ordering and can be interpreted as crude probability estimates. 4.3 Logistic Regression In logistic regression, we model the probability of \\(Y\\) belonging to a class, rather than the response \\(Y\\) itself. The probability of default given balance can be written: \\[ \\text{Pr}(\\text{default = Yes}|\\text{balance}) = p(\\text{balance}). \\] One might predict a default for an individual with \\(p(\\text{balance}) &gt; 0.5\\). Or they may alter the threshold to be conservative, e.g. \\(p(\\text{balance}) &gt; 0.1\\) 4.3.1 The Logistic Model As previously discussed, we could model the probability as linear: \\[ p(X) = \\beta_0 + \\beta_1 X \\] but this could give probabilities outside of the range 0-1. We must instead model \\(p(X)\\) using a function that gives outputs 0-1. Many functions meet this description, but logistic regression uses the logistic function: \\[ p(X) = \\frac{e^{\\beta_0 + \\beta_1X}}{1 + e^{\\beta_0 + \\beta_1 X}}. \\] Fit the linear and logistic probability models and re-create Figure 4.2: lm_default_balance &lt;- lm( default ~ balance, # Turn the factor levels into 0 and 1 data = default %&gt;% mutate(default = as.numeric(default) - 1) ) glm_default_balance &lt;- glm(default ~ balance, data = default, family = binomial(link = &quot;logit&quot;)) # Plot the data p &lt;- default %&gt;% ggplot(aes(x = balance)) + geom_point(aes(y = as.numeric(default) - 1), color = td_colors$nice$soft_orange, alpha = 0.5) # Plot the linear model p1 &lt;- p + geom_abline(slope = coef(lm_default_balance)[&quot;balance&quot;], intercept = coef(lm_default_balance)[&quot;(Intercept)&quot;], size = 1.5, color = td_colors$nice$strong_blue) + labs(y = &quot;Probability of default&quot;) # Plot the logistic model p2 &lt;- p + geom_line( aes(y = pred_default), data = tibble(balance = seq(0, 2700, 1)) %&gt;% mutate( sum_beta = coef(glm_default_balance)[&quot;(Intercept)&quot;] + balance * coef(glm_default_balance)[&quot;balance&quot;], pred_default = plogis(sum_beta) ), size = 1.5, color = td_colors$nice$strong_blue ) + labs(y = NULL) p1 | p2 A very clear improvement. The mean of the fitted probabilities in both models return the overall proportion of defaulters in the data set: predict(lm_default_balance, newdata = default) %&gt;% mean() ## [1] 0.0333 predict(glm_default_balance, newdata = default) %&gt;% plogis() %&gt;% mean() ## [1] 0.0333 The odds is found by re-arranging the logistic function: \\[ \\frac{p(X)}{1 - p(X)} = e^{\\beta_0 + \\beta_1 X}. \\] This can take any value between 0 (\\(p(X) = 0\\)) and \\(\\infty\\) (\\(p(X) = 1\\)). Basic interpretation: A probability of 0.2 gives 1:4 odds. A probability of 0.9 gives 9:1 odds. Taking the logarithm of both sides gives us the log odds or logit which is linear in \\(X\\): \\[ \\log \\left(\\frac{p(X)}{1 - p(X)}\\right) = \\beta_0 + \\beta_1 X. \\] A one unit change in \\(X\\) increases the log odds by \\(\\beta_1\\). Equivalently, it multiplies the odds by \\(e^{\\beta_1}\\). 4.3.2 Estimating the Regression Coefficients We fit logistic regression models with maximum likelihood, which seeks estimates for \\(\\beta_0\\) and \\(\\beta_1\\) such that the predicted probabilities \\(\\hat{p}(x_i)\\) corresponds as closely as possible to the values \\(y_i\\). This idea is formalized using a likelihood function: \\[ \\ell (\\beta_0, \\beta_1) = \\prod_{i: y_i = 1} p(x_i) \\prod_{i&#39;: y_{i&#39;} = 0} (1 - p(x_{i&#39;})). \\] We find the estimates \\(\\hat{\\beta}_0\\) and \\(\\hat{\\beta}_1\\) by maximizing this likelihood function. Note that the least squares approach to linear regression is a special case of maximum likelihood. Re-produce Table 4.1 using the fitted model: # Since I will be reproducing this table often, write a function tidy_custom &lt;- function(mod, coef_round = 4, se_round = 4, z_round = 2) { tidy(mod) %&gt;% transmute( term, coefficient = round(estimate, coef_round), std.error = round(std.error, se_round), `z-statistic` = round(statistic, z_round), `p-value` = scales::pvalue(p.value) ) } tidy_custom(glm_default_balance) %&gt;% gt() html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #iitolowwom .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #iitolowwom .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #iitolowwom .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #iitolowwom .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #iitolowwom .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #iitolowwom .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #iitolowwom .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #iitolowwom .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #iitolowwom .gt_column_spanner_outer:first-child { padding-left: 0; } #iitolowwom .gt_column_spanner_outer:last-child { padding-right: 0; } #iitolowwom .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #iitolowwom .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #iitolowwom .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #iitolowwom .gt_from_md > :first-child { margin-top: 0; } #iitolowwom .gt_from_md > :last-child { margin-bottom: 0; } #iitolowwom .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #iitolowwom .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #iitolowwom .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #iitolowwom .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #iitolowwom .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #iitolowwom .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #iitolowwom .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #iitolowwom .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #iitolowwom .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #iitolowwom .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #iitolowwom .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #iitolowwom .gt_sourcenote { font-size: 90%; padding: 4px; } #iitolowwom .gt_left { text-align: left; } #iitolowwom .gt_center { text-align: center; } #iitolowwom .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #iitolowwom .gt_font_normal { font-weight: normal; } #iitolowwom .gt_font_bold { font-weight: bold; } #iitolowwom .gt_font_italic { font-style: italic; } #iitolowwom .gt_super { font-size: 65%; } #iitolowwom .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } term coefficient std.error z-statistic p-value (Intercept) -10.6513 0.3612 -29.49 &lt;0.001 balance 0.0055 0.0002 24.95 &lt;0.001 The \\(z\\)-statistic plays the same role at the \\(t\\)-statistic from linear regression. It equals \\(\\hat{\\beta}_1 / \\text{SE}(\\hat{\\beta}_1)\\) and large (absolute) values indiciate evidence against the null hypothesis \\(H_0: \\beta_1 = 0\\). The small \\(p\\)-value associated with balance in the above table is small, so we reject the null hypothesis. 4.3.3 Making Predictions With the estimates, we can compute default probabilities for an individual with a balance of $1,000 and $2,000. example_balance &lt;- c(1000, 2000) # For convenience, add together the linear terms to get the log-odds sum_beta &lt;- coef(glm_default_balance)[&quot;(Intercept)&quot;] + example_balance * coef(glm_default_balance)[&quot;balance&quot;] exp(sum_beta) / (1 + exp(sum_beta)) ## [1] 0.005752145 0.585769370 Instead of manually writing out the full equation, here are some alternatives: This logistic distribution function stats::plogis (sometimes called the inverse logit) returns probabilities from the given log-odds values: stats::plogis(sum_beta) ## [1] 0.005752145 0.585769370 Calling the generic predict on a glm uses predict.glm(): # By default, predict.glm() returns log-odds predict(glm_default_balance, newdata = tibble(balance = example_balance)) %&gt;% # So use the inverse logit plogis() ## 1 2 ## 0.005752145 0.585769370 There is an argument to predict.glm() called type that specifies the scale of the returned predictions. By default, type = link which refers to the link function which means log-odds are returned. Setting type = response returns probabilities: predict(glm_default_balance, newdata = tibble(balance = example_balance), type = &quot;response&quot;) ## 1 2 ## 0.005752145 0.585769370 Fit the model with student as the predictor and re-create Table 4.2: glm_default_student &lt;- glm(default ~ student, data = default, # Note: don&#39;t need to specify binomial(link = &quot;logit&quot;) because it is the # default link family = binomial) tidy_custom(glm_default_student) %&gt;% gt() html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #dzgapspvwl .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #dzgapspvwl .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #dzgapspvwl .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #dzgapspvwl .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #dzgapspvwl .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #dzgapspvwl .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #dzgapspvwl .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #dzgapspvwl .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #dzgapspvwl .gt_column_spanner_outer:first-child { padding-left: 0; } #dzgapspvwl .gt_column_spanner_outer:last-child { padding-right: 0; } #dzgapspvwl .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #dzgapspvwl .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #dzgapspvwl .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #dzgapspvwl .gt_from_md > :first-child { margin-top: 0; } #dzgapspvwl .gt_from_md > :last-child { margin-bottom: 0; } #dzgapspvwl .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #dzgapspvwl .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #dzgapspvwl .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #dzgapspvwl .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #dzgapspvwl .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #dzgapspvwl .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #dzgapspvwl .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #dzgapspvwl .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #dzgapspvwl .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #dzgapspvwl .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #dzgapspvwl .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #dzgapspvwl .gt_sourcenote { font-size: 90%; padding: 4px; } #dzgapspvwl .gt_left { text-align: left; } #dzgapspvwl .gt_center { text-align: center; } #dzgapspvwl .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #dzgapspvwl .gt_font_normal { font-weight: normal; } #dzgapspvwl .gt_font_bold { font-weight: bold; } #dzgapspvwl .gt_font_italic { font-style: italic; } #dzgapspvwl .gt_super { font-size: 65%; } #dzgapspvwl .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } term coefficient std.error z-statistic p-value (Intercept) -3.5041 0.0707 -49.55 &lt;0.001 studentYes 0.4049 0.1150 3.52 &lt;0.001 The probabilities for student and non-students: predict(glm_default_student, newdata = tibble(student = c(&quot;Yes&quot;, &quot;No&quot;)), type = &quot;response&quot;) ## 1 2 ## 0.04313859 0.02919501 4.3.4 Multiple Logistic Regression The extension to multiple predictors \\(p\\) is straightfoward: \\[ \\log \\left( \\frac{p(X)}{1 - p(X)} \\right) = \\beta_0 + \\beta_1 X_1 + \\dots + \\beta_p X_p. \\] Fit the model with all three predictors (income in thousands of dollars): glm_default_all &lt;- glm(default ~ ., data = default %&gt;% mutate(income = income / 1000), family = binomial) tidy_custom(glm_default_all) %&gt;% gt() html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #qbqjvrdpgf .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #qbqjvrdpgf .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #qbqjvrdpgf .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #qbqjvrdpgf .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #qbqjvrdpgf .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #qbqjvrdpgf .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #qbqjvrdpgf .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #qbqjvrdpgf .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #qbqjvrdpgf .gt_column_spanner_outer:first-child { padding-left: 0; } #qbqjvrdpgf .gt_column_spanner_outer:last-child { padding-right: 0; } #qbqjvrdpgf .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #qbqjvrdpgf .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #qbqjvrdpgf .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #qbqjvrdpgf .gt_from_md > :first-child { margin-top: 0; } #qbqjvrdpgf .gt_from_md > :last-child { margin-bottom: 0; } #qbqjvrdpgf .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #qbqjvrdpgf .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #qbqjvrdpgf .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #qbqjvrdpgf .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #qbqjvrdpgf .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #qbqjvrdpgf .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #qbqjvrdpgf .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #qbqjvrdpgf .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #qbqjvrdpgf .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #qbqjvrdpgf .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #qbqjvrdpgf .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #qbqjvrdpgf .gt_sourcenote { font-size: 90%; padding: 4px; } #qbqjvrdpgf .gt_left { text-align: left; } #qbqjvrdpgf .gt_center { text-align: center; } #qbqjvrdpgf .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #qbqjvrdpgf .gt_font_normal { font-weight: normal; } #qbqjvrdpgf .gt_font_bold { font-weight: bold; } #qbqjvrdpgf .gt_font_italic { font-style: italic; } #qbqjvrdpgf .gt_super { font-size: 65%; } #qbqjvrdpgf .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } term coefficient std.error z-statistic p-value (Intercept) -10.8690 0.4923 -22.08 &lt;0.001 studentYes -0.6468 0.2363 -2.74 0.006 balance 0.0057 0.0002 24.74 &lt;0.001 income 0.0030 0.0082 0.37 0.712 The coefficient for student is statistically significant and negative, whereas it was positive in the univariable model. To understand this apparent paradox, re-create Figure 4.3: balance_breaks &lt;- seq(0, 2700, by = 270) balance_midpoints &lt;- (balance_breaks[1:(length(balance_breaks) - 1)] + balance_breaks[2:length(balance_breaks)]) / 2 p1 &lt;- default %&gt;% mutate( balance_binned = cut(balance, breaks = balance_breaks, include.lowest = TRUE, labels = balance_midpoints), balance_binned = as.numeric(as.character(balance_binned)) ) %&gt;% group_by(student, balance_binned) %&gt;% summarise(p_default = mean(default == &quot;Yes&quot;), .groups = &quot;drop&quot;) %&gt;% ggplot(aes(x = balance_binned, y = p_default, color = student)) + geom_line(size = 1.5) + geom_hline( data = default %&gt;% group_by(student) %&gt;% summarise(p_mean_default = mean(default == &quot;Yes&quot;), .groups = &quot;drop&quot;), aes(yintercept = p_mean_default, color = student), lty = 2, size = 1 ) + scale_color_manual(values = c(td_colors$nice$strong_blue, td_colors$nice$strong_red)) + theme(legend.position = c(0.2, 0.7)) p2 &lt;- default %&gt;% ggplot(aes(x = student, y = balance)) + geom_boxplot(aes(fill = student)) + scale_fill_manual(values = c(td_colors$nice$strong_blue, td_colors$nice$strong_red)) + theme(legend.position = &quot;none&quot;) p1 | p2 In the left panel, we see that students have a higher overall default rate (4.3%) than non-students (2.9%) as shown by the dashed lines. This is why, in the univariable regression, student was associated with an increase in probability of default. But by the solid lines, we see that for most values of balance, students have lower default rates. And that is what the multiple logistic regression model tells us: for fixed values of balance and income, a student is less likely to default. This is explained by the right panel above: student and balance are correlated in that students tend to hold higher levels of debt, which is then associated with higher probability of default. Taken altogether, we can conclude that a student is less likely to default than a non-student with the same credit card balance. Without any information about their balance, however, a student is more likely to default because they are also more likely to carry a higher balance. This simple example illustrates the dangers and subtleties associated with performing regressions involving only a single predictor when other predictors may also be relevant. As in the linear regression setting, the results obtained using one predictor may be quite different from those obtained using multiple predictors, especially when there is correlation among the predictors. In general, the phenomenon seen in Figure 4.3 is known as confounding. Make predictions for a student and non-student: d &lt;- tibble( student = c(&quot;Yes&quot;, &quot;No&quot;), balance = 1500, # Income in thousands income = 40000 / 1000 ) predict(glm_default_all, newdata = d, type = &quot;response&quot;) ## 1 2 ## 0.05788194 0.10499192 4.3.5 Multinomial Logistic Regression For predicting \\(K &gt; 2\\) classes, we can extend logistic regression in a method called multinomial logistic regression. To do this, we choose a single class \\(K\\) to serve as the baseline. Then the probability of another class \\(k\\) is: \\[ \\text{Pr}(Y = k|X = x) = \\frac{e^{\\beta_{k0} + \\beta_{k1} x_1 + \\beta_{kp} x_p}}{1 + \\sum_{l=1}^{K-1} e^{\\beta_{l0} + \\beta_{l1} x_1 + \\beta_{lp} x_p}} \\] for \\(k = 1, \\dots, K - 1\\). Then for the baseline class \\(K\\): \\[ \\text{Pr}(Y = K|X = x) = \\frac{1}{1 + \\sum_{l=1}^{K-1} e^{\\beta_{l0} + \\beta_{l1} x_1 + \\beta_{lp} x_p}}. \\] The log-odds of a class \\(k\\) is then linear in the predictors: \\[ \\log \\left( \\frac{\\text{Pr} (Y = k| X = x)}{\\text{Pr} (Y = K| X = x)}\\right) = \\beta_{k0} + \\beta_{k1} x_1 + \\dots + \\beta_{kp} x_p. \\] Note that in the case of \\(K = 2\\), the numerator becomes \\(p(X)\\) and the denominator \\(1 - p(X)\\), which is exactly the same the two-class logistic regression formula (Equation 4.6). The choice of class \\(K\\) as baseline was arbitrary. The only thing that will change by choosing a different baseline will be the coefficient estimates, but the predictions (fitted values), and model metrics will be the same. When performing multinomial logistic regression, we will sometimes use an alternative to dummy coding called softmax coding. The softmax coding is equivalent to the coding just described in the sense that the fitted values, log odds between any pair of classes, and other key model outputs will remain the same, regardless of coding. But the softmax coding is used extensively in some areas of the machine learning literature (and will appear again in Chapter 10), so it is worth being aware of it. In the softmax coding, rather than selecting a baseline class, we treat all \\(K\\) classes symmetrically, and assume that for \\(k = 1,...,K\\), \\[ \\text{Pr}(Y = k|X = x) = \\frac{e^{\\beta_{k0} + \\beta_{k1} x_1 + \\beta_{kp} x_p}}{ \\sum_{l=1}^{K} e^{\\beta_{l0} + \\beta_{l1} x_1 + \\beta_{lp} x_p}}. \\] Thus, rather than estimating coefficients for \\(K  1\\) classes, we actually estimate coefficients for all \\(K\\) classes. It is not hard to see that as a result of (4.13), the log odds ratio between the \\(k\\)th and \\(k\\)th classes equals \\[ \\frac{\\log \\text{Pr} (Y = k| X = x)}{\\log \\text{Pr} (Y = k&#39;| X = x)} = (\\beta_{k0} - \\beta_{k&#39;0}) + (\\beta_{k1} - \\beta_{k&#39;1}) x_1 + \\dots + (\\beta_{kp} - \\beta_{k&#39;p}) x_p. \\] 4.4 Generative Models for Classification Logistic regression involves directly modeling \\(\\text{Pr} (Y = k|X = x)\\) using the logistic function, given by (4.7) for the case of two response classes. In statistical jargon, we model the conditional distribution of the response \\(Y\\), given the predictor(s) \\(X\\). We now consider an alternative and less direct approach to estimating these probabilities. In this new approach, we model the distribution of the predictors \\(X\\) separately in each of the response classes (i.e. for each value of \\(Y\\)). We then use Bayes theorem to flip these around into estimates for \\(\\text{Pr} (Y = k|X = x)\\). When the distribution of \\(X\\) within each class is assumed to be normal, it turns out that the model is very similar in form to logistic regression. There are several reasons to choose this method over logistic regression: When there is substantial separation between the two classes, the parameter estimates for the logistic regression model are surprisingly unstable. The methods that we consider in this section do not suffer from this problem. If the distribution of the predictors \\(X\\) is approximately normal in each of the classes and the sample size is small, then the approaches in this section may be more accurate than logistic regression. The methods in this section can be naturally extended to the case of more than two response classes. (In the case of more than two response classes, we can also use multinomial logistic regression from Section 4.3.5.) Consider a classification problem with \\(K \\geq 2\\) unordered classes. Let \\(\\pi_k\\) represent the prior probability that a random observation is class \\(k\\). Let \\(f_k(X) \\equiv \\text{Pr}(X | Y = k)\\) denote the density function of \\(X\\) for an observation in the \\(k\\)th class. Then Bayes theorem states that the posterior probability than observation \\(X = x\\) belongs to the \\(k\\)th class is \\[ \\text{Pr} (Y = k|X = x) = \\frac{\\pi_k f_k(x)}{\\sum_{l=1}^K \\pi_l f_l (x)} = p_k(x). \\] Aside: Bayes theorem in the most simplistic form is \\[ P(Y | X) = \\frac{P(X | Y) P (Y)}{P(X)}. \\] So the probability of \\(X\\) given class \\(Y\\) (= \\(k\\)) is \\(P(X|Y) = f_k (x)\\), the independent probability of a class \\(Y\\) is \\(P(Y) = \\pi_k\\), and the denominator is a normalizing factor which sums over all possible values \\(Y\\) to give the independent probability \\(P(X) = \\sum \\pi_l f_l (x)\\). Estimating \\(\\pi_k\\) is easy if we have a random sample from the population  just take the fraction of the training observations belonging to class \\(k\\). Estimating the density function \\(f_k (x)\\) is much more challenging. We know from Chapter 2 that the Bayes classifier, which classifies an observation \\(x\\) to the class for which \\(p_k(x)\\) is largest, has the lowest possible error rate out of all classifiers. (Of course, this is only true if all of the terms in (4.15) are correctly specified.) Therefore, if we can find a way to estimate \\(f_k(x)\\), then we can plug it into (4.15) in order to approximate the Bayes classifier. We now discuss three classifiers that use different estimates of \\(f_k (x)\\). 4.4.1 Linear Discriminant Analysis for \\(p = 1\\) For the case of one predictor, we start by assuming that \\(f_k (x)\\) is normal or Gaussian, which has the following density in one dimension: \\[ f_k (x) = \\frac{1}{\\sqrt{2 \\pi} \\sigma_k} \\exp \\left( - \\frac{1}{2\\sigma_k^2} (x - \\mu_k)^2\\right) \\] where \\(\\mu_k\\) and \\(\\sigma_k^2\\) are the mean and variance of the \\(k\\)th class. For now, assume all classes have the same variance \\(\\sigma^2\\). Plugging the above into Bayes theorem, we have: \\[ p_k (x) = \\frac{\\pi_k \\frac{1}{\\sqrt{2 \\pi} \\sigma} \\exp \\left( - \\frac{1}{2\\sigma^2} (x - \\mu_k)^2\\right)} {\\sum_{l=1}^K \\pi_l \\frac{1}{\\sqrt{2 \\pi} \\sigma} \\exp \\left( - \\frac{1}{2\\sigma^2} (x - \\mu_l)^2\\right)}. \\] The Bayes classifier assigns an observation \\(X = x\\) to the class for which the above is largest. Taking the log and rearranging, this is equivalent to choosing the class for which: \\[ \\delta_k (x) = x \\frac{\\mu_k}{\\sigma^2} - \\frac{\\mu_k^2}{2 \\sigma^2} + \\log(\\pi_k) \\] is largest. For instance, if \\(K = 2\\) and \\(\\pi_1 = \\pi_2\\), then the Bayes classifier assigns an observation to class 1 if \\(2x (\\mu_1  \\mu_2) &gt; \\mu_1^2 - \\mu_2^2\\), and to class 2 otherwise. The Bayes decision boundary is the point for which \\(\\delta_1 (x) = \\delta_2 (x)\\); one can show that this amounts to \\[ x = \\frac{\\mu_1^2 - \\mu_2^2}{2 (\\mu_1 - \\mu_2)} = \\frac{\\mu_1 + \\mu_2}{2}. \\] Note that in the real world, we do not know that \\(X\\) is drawn from a Gaussian distribution within each class, or all the parameters involved, so we are not able to calculate the decision boundary for the Bayes classifier. This is where the linear discriminant analysis (LDA) method comes in. If we are quite certain that \\(X\\) is Gaussian within each class, then we can use LDA to approximate the Bayes classifier with these estimates: \\[ \\begin{align} \\hat{\\mu}_k &amp;= \\frac{1}{n_k} \\sum_{i: y_i = k} x_i\\\\ \\hat{\\sigma}^2 &amp;= \\frac{1}{n - K} \\sum^K_{k=1} \\sum_{i: y_i = k} (x_i - \\hat{u}_k)^2 \\end{align} \\] where \\(n\\) is the total number of training observations, and \\(n_k\\) is the number in the \\(k\\)th class. The estimate for \\(\\hat{\\mu}_k\\) is simply the average of the \\(k\\)th class, and \\(\\hat{\\sigma}^2\\) is the weighted average of the sample variances for each of the \\(K\\) classes. Sometimes we know the true fractions of class membership \\(\\pi_k\\) which can be used directly. Otherwise, LDA simply uses the proportion from the training observations: \\[ \\hat{\\pi}_k = n_k / n. \\] Observation \\(X = x\\) is then assigned to the class for which \\[ \\hat{\\delta}_k (x) = x \\frac{\\hat{\\mu}_k}{\\hat{\\sigma}^2} - \\frac{\\hat{\\mu}_k^2}{2 \\hat{\\sigma}^2} + \\log(\\hat{\\pi}_k) \\] The word linear in the classifiers name stems from the fact that the discriminant functions \\(\\hat{\\delta}_k (x)\\) in (4.22) are linear functions of x (as opposed to a more complex function of \\(x\\)) Re-create the example in Figure 4.4: mu1 &lt;- -1.25 mu2 &lt;- 1.25 sigma1 &lt;- 1 sigma2 &lt;- 1 bayes_boundary &lt;- (mu1 + mu2) / 2 p1 &lt;- ggplot(data = tibble(x = seq(-4, 4, 0.1)), aes(x)) + stat_function(fun = dnorm, args = list(mean = mu1, sd = sigma1), geom = &quot;line&quot;, size = 1.5, color = td_colors$nice$emerald) + stat_function(fun = dnorm, args = list(mean = mu2, sd = sigma2), geom = &quot;line&quot;, size = 1.5, color = td_colors$nice$opera_mauve) + geom_vline(xintercept = bayes_boundary, lty = 2, size = 1.5) + remove_axis(&quot;y&quot;) set.seed(42) d &lt;- tribble( ~class, ~x, 1, rnorm(20, mean = mu1, sd = sigma1), 2, rnorm(20, mean = mu2, sd = sigma2) ) %&gt;% unnest(x) lda_boundary &lt;- (mean(filter(d, class == 1)$x) + mean(filter(d, class == 2)$x)) / 2 p2 &lt;- d %&gt;% ggplot(aes(x, fill = factor(class), color = factor(class))) + geom_histogram(bins = 13, alpha = 0.5, position = &quot;identity&quot;) + geom_vline(xintercept = bayes_boundary, lty = 2, size = 1.5) + geom_vline(xintercept = lda_boundary, lty = 1, size = 1.5) + scale_fill_manual(values = c(td_colors$nice$emerald, td_colors$nice$opera_mauve)) + scale_color_manual(values = c(td_colors$nice$emerald, td_colors$nice$opera_mauve)) + theme(legend.position = &quot;none&quot;) p1 | p2 Simulate a large number of test observations and compute the Bayes and LDA test error rates: set.seed(2021) d &lt;- tribble( ~class, ~x, 1, rnorm(1e3, mean = mu1, sd = sigma1), 2, rnorm(1e3, mean = mu2, sd = sigma2) ) %&gt;% unnest(x) # The LDA boundary must be recomputed with the new data lda_boundary &lt;- (mean(filter(d, class == 1)$x) + mean(filter(d, class == 2)$x)) / 2 d %&gt;% mutate( bayes_class = ifelse(x &gt; bayes_boundary, 1, 2), lda_class = ifelse(x &gt; lda_boundary, 1, 2) ) %&gt;% summarise( `Bayes error rate` = mean(class == bayes_class), `LDA error rate` = mean(class == lda_class) ) ## # A tibble: 1 x 2 ## `Bayes error rate` `LDA error rate` ## &lt;dbl&gt; &lt;dbl&gt; ## 1 0.104 0.107 Pretty close but, as expected, the Bayes classifier has the lower error rate. To reiterate, the LDA classifier results from assuming that the observations within each class come from a normal distribution with a class-specific mean and a common variance \\(\\sigma^2\\), and plugging estimates for these parameters into the Bayes classifier. In Section 4.4.3, we will consider a less stringent set of assumptions, by allowing the observations in the \\(k\\)th class to have a class-specific variance, \\(\\sigma_k^2\\). 4.4.2 Linear Discriminant Analysis for \\(p &gt; 1\\) Extending the LDA classifier for multiple predictors involves a multi-variate Gaussian distribution with class-specific mean vector and a common covariance matrix. The multivariate Gaussian distribution assumes that each individual predictor follows a one-dimensional normal distribution, as in (4.16), with some correlation between each pair of predictors. Ill simulate some data with the mvtnorm package and plot probabilities with a 2D density plot (instead of the 3D in Figure 4.5): d &lt;- crossing(x1 = seq(-2, 2, 0.1), x2 = seq(-2, 2, 0.1)) d1 &lt;- d %&gt;% bind_cols( prob = mvtnorm::dmvnorm( x = as.matrix(d), mean = c(0, 0), sigma = matrix(c(1, 0, 0, 1), nrow = 2) ) ) d2 &lt;- d %&gt;% bind_cols( prob = mvtnorm::dmvnorm( x = as.matrix(d), mean = c(0, 0), sigma = matrix(c(1, 0.7, 0.7, 1), nrow = 2) ) ) p1 &lt;- d1 %&gt;% ggplot(aes(x = x1, y = x2)) + geom_tile(aes(fill = prob)) + scale_x_continuous(expand = c(0, 0)) + scale_y_continuous(expand = c(0, 0)) + theme(legend.position = &quot;none&quot;) p2 &lt;- d2 %&gt;% ggplot(aes(x = x1, y = x2)) + geom_tile(aes(fill = prob)) + scale_x_continuous(expand = c(0, 0)) + scale_y_continuous(expand = c(0, 0)) + theme(legend.position = &quot;none&quot;) p1 | p2 To indicate that a \\(p\\)-dimensional random variable \\(X\\) has a multivariate Gaussian distribution, we write \\(X \\sim N(\\mu, \\Sigma)\\). Here \\(E(X) = \\mu\\) is the mean of \\(X\\) (a vector with \\(p\\) components), and \\(\\text{Cov}(X) = \\Sigma\\) is the \\(p \\times p\\) covariance matrix of \\(X\\). The LDA classifier assumes that the observations in the \\(k\\)th class are drawn from a multivariate Gaussian distribution \\(N(\\mu_k, \\Sigma)\\). The Bayes classifier assigns an observation \\(X = x\\) to the class for which \\[ \\delta_k (x) = x^T \\Sigma^{-1} \\mu_k - \\frac{1}{2} \\mu_k^T \\Sigma^{-1} \\mu_k + \\log \\pi_k \\] is largest. As with the univariable case, the LDA method involves estimating the unknown parameters \\(\\mu_k\\), \\(\\pi_k\\) and \\(\\Sigma\\). Then the quantities \\(\\hat{\\delta}_k (x)\\) are calculated and the observations \\(X\\) are classified into the largest \\(\\hat{\\delta}_k (k)\\). We can perform LDA using the MASS package to predict default from student and balance: lda_default_balance_student &lt;- MASS::lda(default ~ balance + student, data = default) lda_default_balance_student ## Call: ## lda(default ~ balance + student, data = default) ## ## Prior probabilities of groups: ## No Yes ## 0.9667 0.0333 ## ## Group means: ## balance studentYes ## No 803.9438 0.2914037 ## Yes 1747.8217 0.3813814 ## ## Coefficients of linear discriminants: ## LD1 ## balance 0.002244397 ## studentYes -0.249059498 The resulting training error rate: mean( predict(lda_default_balance_student, newdata = default)$class != default$default ) ## [1] 0.0275 This sounds like a low error rate, but two caveats must be noted. First of all, training error rates will usually be lower than test error rates, which are the real quantity of interest. In other words, we might expect this classifier to perform worse if we use it to predict whether or not a new set of individuals will default. The reason is that we specifically adjust the parameters of our model to do well on the training data. The higher the ratio of parameters \\(p\\) to number of samples \\(n\\), the more we expect this overfitting to play a role. For these data we dont expect this to be a problem, since \\(p = 2\\) and \\(n = 10,000\\). Second, since only 3.33% of the individuals in the training sample defaulted, a simple but useless classifier that always predicts that an individual will not default, regardless of his or her credit card balance and student status, will result in an error rate of 3.33%. In other words, the trivial null classifier will achieve an error rate that is only a bit higher than the LDA training set error rate. Make predictions and produce the confusion matrix in Table 4.4: lda_pred &lt;- bind_cols( pred_default = predict(lda_default_balance_student, newdata = default)$class, default ) lda_pred %&gt;% count(pred_default, default) %&gt;% pivot_wider(names_from = default, values_from = n) %&gt;% mutate(Total = No + Yes) %&gt;% gt(rowname_col = &quot;pred_default&quot;) %&gt;% gt::tab_spanner(label = &quot;True default status&quot;, columns = everything()) %&gt;% gt::tab_stubhead(&quot;Predicted&quot;) %&gt;% # Can&#39;t get the Total row to round to 0 decimals gt::summary_rows(fns = list(Total = ~round(sum(.), 0))) html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #skvtyzcjea .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #skvtyzcjea .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #skvtyzcjea .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #skvtyzcjea .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #skvtyzcjea .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #skvtyzcjea .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #skvtyzcjea .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #skvtyzcjea .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #skvtyzcjea .gt_column_spanner_outer:first-child { padding-left: 0; } #skvtyzcjea .gt_column_spanner_outer:last-child { padding-right: 0; } #skvtyzcjea .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #skvtyzcjea .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #skvtyzcjea .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #skvtyzcjea .gt_from_md > :first-child { margin-top: 0; } #skvtyzcjea .gt_from_md > :last-child { margin-bottom: 0; } #skvtyzcjea .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #skvtyzcjea .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #skvtyzcjea .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #skvtyzcjea .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #skvtyzcjea .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #skvtyzcjea .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #skvtyzcjea .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #skvtyzcjea .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #skvtyzcjea .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #skvtyzcjea .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #skvtyzcjea .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #skvtyzcjea .gt_sourcenote { font-size: 90%; padding: 4px; } #skvtyzcjea .gt_left { text-align: left; } #skvtyzcjea .gt_center { text-align: center; } #skvtyzcjea .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #skvtyzcjea .gt_font_normal { font-weight: normal; } #skvtyzcjea .gt_font_bold { font-weight: bold; } #skvtyzcjea .gt_font_italic { font-style: italic; } #skvtyzcjea .gt_super { font-size: 65%; } #skvtyzcjea .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } Predicted True default status No Yes Total No 9644 252 9896 Yes 23 81 104 Total 9,667.00 333.00 10,000.00 We only missed 23 individuals who did not default, out of 9667. This is great, but we did quite poorly in predicting defaulters. However, of the 333 individuals who defaulted, 252 (or 75.7%) were missed by LDA. So while the overall error rate is low, the error rate among individuals who defaulted is very high. From the perspective of a credit card company that is trying to identify high-risk individuals, an error rate of 252/333 = 75.7% among individuals who default may well be unacceptable. Class-specific performance is also important in medicine and biology, where the terms sensitivity and specificity characterize the performance of a classifier or screening test. In this case the sensitivity is the percentage of true defaulters that are identified; it equals 24.3%. The specificity is the percentage of non-defaulters that are correctly identified; it equals (1  23/9667) = 99.8%. LDA has poor sensitivity here because it attempts to reduce the total error rate, regardless of class. In the case of a credit card company, it is probably more valuable to correctly identify individuals who will default. The LDA classifier, like the Bayes classifier to which it approximates, assigns an observation to the default = Yes class if \\[ \\text{Pr}(\\text{default = Yes}| X = x) &gt; 0.5. \\] That is to say, these classifiers have a default threshold of 50% posterior probability. We may lower these probability as needed. To adjust this with the MASS::lda package, we can get the posterior probabilities directly via predict.lda(): lda_posterior &lt;- predict(lda_default_balance_student, newdata = default)$posterior head(lda_posterior) ## No Yes ## 1 0.9968680 0.003131975 ## 2 0.9971925 0.002807531 ## 3 0.9843970 0.015603046 ## 4 0.9987769 0.001223133 ## 5 0.9959254 0.004074582 ## 6 0.9954627 0.004537289 Then use the threshold of 20% to re-create Table 4.5: lda_pred_20 &lt;- bind_cols( default, posterior_prob_default = lda_posterior[,2] ) %&gt;% mutate( pred_default = ifelse(posterior_prob_default &gt; 0.2, &quot;Yes&quot;, &quot;No&quot;) ) lda_pred_20 %&gt;% count(pred_default, default) %&gt;% pivot_wider(names_from = default, values_from = n) %&gt;% mutate(Total = No + Yes) %&gt;% gt(rowname_col = &quot;pred_default&quot;) %&gt;% tab_spanner(label = &quot;True default status&quot;, columns = everything()) %&gt;% tab_stubhead(&quot;Predicted&quot;) %&gt;% summary_rows(fns = list(Total = ~round(sum(.), 0))) html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #ggcbylpnri .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #ggcbylpnri .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #ggcbylpnri .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #ggcbylpnri .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #ggcbylpnri .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #ggcbylpnri .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #ggcbylpnri .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #ggcbylpnri .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #ggcbylpnri .gt_column_spanner_outer:first-child { padding-left: 0; } #ggcbylpnri .gt_column_spanner_outer:last-child { padding-right: 0; } #ggcbylpnri .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #ggcbylpnri .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #ggcbylpnri .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #ggcbylpnri .gt_from_md > :first-child { margin-top: 0; } #ggcbylpnri .gt_from_md > :last-child { margin-bottom: 0; } #ggcbylpnri .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #ggcbylpnri .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #ggcbylpnri .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #ggcbylpnri .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #ggcbylpnri .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #ggcbylpnri .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #ggcbylpnri .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #ggcbylpnri .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #ggcbylpnri .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #ggcbylpnri .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #ggcbylpnri .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #ggcbylpnri .gt_sourcenote { font-size: 90%; padding: 4px; } #ggcbylpnri .gt_left { text-align: left; } #ggcbylpnri .gt_center { text-align: center; } #ggcbylpnri .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #ggcbylpnri .gt_font_normal { font-weight: normal; } #ggcbylpnri .gt_font_bold { font-weight: bold; } #ggcbylpnri .gt_font_italic { font-style: italic; } #ggcbylpnri .gt_super { font-size: 65%; } #ggcbylpnri .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } Predicted True default status No Yes Total No 9432 138 9570 Yes 235 195 430 Total 9,667.00 333.00 10,000.00 The sensitivity to detect defaulters has improved to 58.8%, but the specificity has dropped 97.5%. The overall error rate has also increased to 3.7%. But a credit card company may consider this slight increase in the total error rate to be a small price to pay for more accurate identification of individuals who do indeed default. How can we decide which threshold value is best? Such a decision must be based on domain knowledge, such as detailed information about the costs associated with default. The receiver operating character (ROC) curve is one way to visualize the trade-off between two types of error for different threshold values. I like the yardstick::roc_curve() function for this purpose: lda_roc &lt;- yardstick::roc_curve( lda_pred_20, # Specify the class probability and the truth variables posterior_prob_default, truth = default, # This argument specifies which level of truth (default) is considered # &quot;positive&quot;, so it will flip the ROC curve vertically event_level = &quot;second&quot; ) autoplot(lda_roc) The area under the curve (AUC) summarizes the overall performance of the classifier: yardstick::roc_auc( lda_pred_20, posterior_prob_default, truth = default, event_level = &quot;second&quot; ) ## # A tibble: 1 x 3 ## .metric .estimator .estimate ## &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 roc_auc binary 0.950 We get the exact same ROC AUC with logistic regression: glm_default_balance_student &lt;- glm(default ~ balance + student, data = default, family = binomial) glm_pred &lt;- bind_cols( default, glm_prob_default = predict( glm_default_balance_student, newdata = default, type = &quot;response&quot; ) ) yardstick::roc_auc( glm_pred, glm_prob_default, truth = default, event_level = &quot;second&quot; ) ## # A tibble: 1 x 3 ## .metric .estimator .estimate ## &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 roc_auc binary 0.950 4.4.3 Quadratic Discriminant Analysis As we have discussed, LDA assumes that the observations within each class are drawn from a multivariate Gaussian distribution with a class-specific mean vector and a covariance matrix that is common to all \\(K\\) classes. Quadratic discriminant analysis (QDA) provides an alternative approach. Like LDA, the QDA classifier results from assuming that the observations from each class are drawn from a Gaussian distribution, and plugging estimates for the parameters into Bayes theorem in order to perform prediction. However, unlike LDA, QDA assumes that each class has its own covariance matrix. That is, it assumes that an observation from the \\(k\\)th class is of the form \\(X \\sim N(\\mu_k, \\Sigma_k)\\), where \\(\\Sigma_k\\) is a covariance matrix for the \\(k\\)th class. An observation \\(X = x\\) is assigned to the class for which \\[ \\begin{align} \\delta_k (x) = - \\frac{1}{2} (x - \\mu_k)^T \\Sigma^{-1}_k (x - \\mu_k) - \\frac{1}{2} \\log |\\Sigma_k|+ \\log \\pi_k. \\end{align} \\] is largest. QDA gets its name from how the quantity \\(x\\) appears as quadratic function in the first term of the above equation. Why does it matter whether or not we assume that the \\(K\\) classes share a common covariance matrix? In other words, why would one prefer LDA to QDA, or vice-versa? The answer lies in the bias-variance trade-off. When there are \\(p\\) predictors, then estimating a covariance matrix requires estimating \\(p(p+1)/2\\) parameters. QDA estimates a separate covariance matrix for each class, for a total of \\(Kp(p+1)/2\\) parameters. Consequently, LDA is a much less flexible classifier than QDA, and so has substantially lower variance. This can potentially lead to improved prediction performance. But there is a trade-off: if LDAs assumption that the \\(K\\) classes share a common covariance matrix is badly off, then LDA can suffer from high bias. In general, use LDA if there are relatively few training observations, and use QDA for many. Also consider QDA if you have some intuition about the decision boundary being non-linear. 4.4.4 Naive Bayes The naive Bayes classifier also estimates the conditional probability \\(f_k (x) = \\text{Pr}(X|Y = k)\\). In LDA, we made the very strong assumption that \\(f_k\\) is the density function of a multivariate normal distribution with mean \\(\\mu_k\\) and shared covariance \\(\\Sigma\\). In QDA, the covariance \\(\\Sigma_k\\) is class-specific. The naive Bayes classifier instead makes a single assumption: Within the \\(k\\)th class, the \\(p\\) predictors are independent. Mathematically: \\[ f_k (x) = f_{k1}(x_1) \\times f_{k2}(x_2) \\times \\dots \\times f_{kp}(x_p). \\] where \\(f_{kj}\\) is the density function of the \\(j\\)th predictor among observations in the \\(k\\)th class. Why is this assumption so powerful? Essentially, estimating a \\(p\\)-dimensional density function is challenging because we must consider not only the marginal distribution of each predictor  that is, the distribution of each predictor on its own  but also the joint distribution of the predictors  that is, the association between the different predictors. In the case of a multivariate normal distribution, the association between the different predictors is summarized by the off-diagonal elements of the covariance matrix. However, in general, this association can be very hard to characterize, and exceedingly challenging to estimate. But by assuming that the \\(p\\) covariates are independent within each class, we completely eliminate the need to worry about the association between the \\(p\\) predictors, because we have simply assumed that there is no association between the predictors! This is a very stringent assumption  most of the time, we believe there to be some degree of association between predictors. But naive Bayes can still perform well, especially when \\(n\\) is not large enough relative to \\(p\\) to effectively estimate the joint distribution of the predictors within each class. Essentially, the naive Bayes assumption introduces some bias, but reduces variance, leading to a classifier that works quite well in practice as a result of the bias-variance trade-off. Under the naive Bayes, assumption, the posterior probability becomes: \\[ \\text{Pr}(Y = k|X = x) = \\frac{\\pi_k \\times f_{k1}(x_1) \\times \\dots \\times f_{kp} (x_p)}{\\sum_{l=1}^K \\pi_l \\times f_{l1}(x_1) \\times \\dots \\times f_{lp} (x_p)} \\] for \\(k = 1, \\dots, K\\). To estimate the one-dimensional \\(f_{kj}\\) from \\(x_j\\), we have a few options: Assume that the \\(j\\)th predictor is drawn from a univariate normal distribution. \\(X_j | Y = k \\sim N(\\mu_{jk}, \\sigma_{jk}^2)\\). This is like QDA except the covariance matrix is diagonal because the predictors are independent. Use a non-parametric estimate for \\(f_{kj}\\). A simple way: Estimate \\(f_{kj}(x_j)\\) as the fraction of the training observations in the \\(k\\)th class belonging to a histogram bin. Alternatively, use a kernel density estimator, which is essentially a smoothed version of a histogram. For qualitative \\(X_j\\), simply count the proportion of training observations for the \\(j\\)th predictor corresponding to each class. Apply the naive Bayes classifier with the klaR package: nb_default &lt;- klaR::NaiveBayes(default ~ balance + student, data = default) nb_pred &lt;- bind_cols( default, nb_prob_default = predict(nb_default, newdata = default)$posterior[,2] ) If we take a posterior probability of 50% or 20% as the thresholds for predicting a default, we get Tables 4.8 and 4.9: nb_pred &lt;- nb_pred %&gt;% mutate( pred_default_0.5 = ifelse(nb_prob_default &gt; 0.5, &quot;Yes&quot;, &quot;No&quot;), pred_default_0.2 = ifelse(nb_prob_default &gt; 0.2, &quot;Yes&quot;, &quot;No&quot;) ) nb_pred %&gt;% count(pred_default_0.5, default) %&gt;% pivot_wider(names_from = default, values_from = n) %&gt;% mutate(Total = No + Yes) %&gt;% gt(rowname_col = &quot;pred_default_0.5&quot;) %&gt;% tab_spanner(label = &quot;True default status&quot;, columns = everything()) %&gt;% tab_stubhead(&quot;Predicted&quot;) %&gt;% summary_rows(fns = list(Total = ~round(sum(.), 0))) html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #ujgogwpkcm .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #ujgogwpkcm .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #ujgogwpkcm .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #ujgogwpkcm .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #ujgogwpkcm .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #ujgogwpkcm .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #ujgogwpkcm .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #ujgogwpkcm .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #ujgogwpkcm .gt_column_spanner_outer:first-child { padding-left: 0; } #ujgogwpkcm .gt_column_spanner_outer:last-child { padding-right: 0; } #ujgogwpkcm .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #ujgogwpkcm .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #ujgogwpkcm .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #ujgogwpkcm .gt_from_md > :first-child { margin-top: 0; } #ujgogwpkcm .gt_from_md > :last-child { margin-bottom: 0; } #ujgogwpkcm .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #ujgogwpkcm .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #ujgogwpkcm .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #ujgogwpkcm .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #ujgogwpkcm .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #ujgogwpkcm .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #ujgogwpkcm .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #ujgogwpkcm .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #ujgogwpkcm .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #ujgogwpkcm .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #ujgogwpkcm .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #ujgogwpkcm .gt_sourcenote { font-size: 90%; padding: 4px; } #ujgogwpkcm .gt_left { text-align: left; } #ujgogwpkcm .gt_center { text-align: center; } #ujgogwpkcm .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #ujgogwpkcm .gt_font_normal { font-weight: normal; } #ujgogwpkcm .gt_font_bold { font-weight: bold; } #ujgogwpkcm .gt_font_italic { font-style: italic; } #ujgogwpkcm .gt_super { font-size: 65%; } #ujgogwpkcm .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } Predicted True default status No Yes Total No 9621 244 9865 Yes 46 89 135 Total 9,667.00 333.00 10,000.00 nb_pred %&gt;% count(pred_default_0.2, default) %&gt;% pivot_wider(names_from = default, values_from = n) %&gt;% mutate(Total = No + Yes) %&gt;% gt(rowname_col = &quot;pred_default_0.2&quot;) %&gt;% tab_spanner(label = &quot;True default status&quot;, columns = everything()) %&gt;% tab_stubhead(&quot;Predicted&quot;) %&gt;% summary_rows(fns = list(Total = ~round(sum(.), 0))) html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #vfygpcxfsz .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #vfygpcxfsz .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #vfygpcxfsz .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #vfygpcxfsz .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #vfygpcxfsz .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #vfygpcxfsz .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #vfygpcxfsz .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #vfygpcxfsz .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #vfygpcxfsz .gt_column_spanner_outer:first-child { padding-left: 0; } #vfygpcxfsz .gt_column_spanner_outer:last-child { padding-right: 0; } #vfygpcxfsz .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #vfygpcxfsz .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #vfygpcxfsz .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #vfygpcxfsz .gt_from_md > :first-child { margin-top: 0; } #vfygpcxfsz .gt_from_md > :last-child { margin-bottom: 0; } #vfygpcxfsz .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #vfygpcxfsz .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #vfygpcxfsz .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #vfygpcxfsz .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #vfygpcxfsz .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #vfygpcxfsz .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #vfygpcxfsz .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #vfygpcxfsz .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #vfygpcxfsz .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #vfygpcxfsz .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #vfygpcxfsz .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #vfygpcxfsz .gt_sourcenote { font-size: 90%; padding: 4px; } #vfygpcxfsz .gt_left { text-align: left; } #vfygpcxfsz .gt_center { text-align: center; } #vfygpcxfsz .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #vfygpcxfsz .gt_font_normal { font-weight: normal; } #vfygpcxfsz .gt_font_bold { font-weight: bold; } #vfygpcxfsz .gt_font_italic { font-style: italic; } #vfygpcxfsz .gt_super { font-size: 65%; } #vfygpcxfsz .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } Predicted True default status No Yes Total No 9339 130 9469 Yes 328 203 531 Total 9,667.00 333.00 10,000.00 The numbers are slightly different from the text, which may have to do with how \\(f_{kj}\\) for the quantitative balance was estimated. The overall error rate, sensitivity, and specificity of the naive Bayes approach: nb_pred %&gt;% select(default, pred_default_0.2, pred_default_0.5) %&gt;% pivot_longer(c(pred_default_0.5, pred_default_0.2), names_to = &quot;threshold&quot;, values_to = &quot;pred_default&quot;) %&gt;% mutate(threshold = as.numeric(str_remove(threshold, &quot;pred_default_&quot;))) %&gt;% group_by(threshold) %&gt;% summarise( overall_error = mean(default != pred_default), sensitivity = sum(default == &quot;Yes&quot; &amp; pred_default == &quot;Yes&quot;) / sum(default == &quot;Yes&quot;), specificity = sum(default == &quot;No&quot; &amp; pred_default == &quot;No&quot;) / sum(default == &quot;No&quot;), .groups = &quot;drop&quot; ) %&gt;% mutate(across(everything(), scales::percent)) %&gt;% gt() html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #dolyxdntek .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #dolyxdntek .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #dolyxdntek .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #dolyxdntek .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #dolyxdntek .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #dolyxdntek .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #dolyxdntek .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #dolyxdntek .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #dolyxdntek .gt_column_spanner_outer:first-child { padding-left: 0; } #dolyxdntek .gt_column_spanner_outer:last-child { padding-right: 0; } #dolyxdntek .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #dolyxdntek .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #dolyxdntek .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #dolyxdntek .gt_from_md > :first-child { margin-top: 0; } #dolyxdntek .gt_from_md > :last-child { margin-bottom: 0; } #dolyxdntek .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #dolyxdntek .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #dolyxdntek .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #dolyxdntek .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #dolyxdntek .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #dolyxdntek .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #dolyxdntek .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #dolyxdntek .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #dolyxdntek .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #dolyxdntek .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #dolyxdntek .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #dolyxdntek .gt_sourcenote { font-size: 90%; padding: 4px; } #dolyxdntek .gt_left { text-align: left; } #dolyxdntek .gt_center { text-align: center; } #dolyxdntek .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #dolyxdntek .gt_font_normal { font-weight: normal; } #dolyxdntek .gt_font_bold { font-weight: bold; } #dolyxdntek .gt_font_italic { font-style: italic; } #dolyxdntek .gt_super { font-size: 65%; } #dolyxdntek .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } threshold overall_error sensitivity specificity 20% 4.6% 61% 96.6% 50% 2.9% 27% 99.5% The overall error rate is slightly higher, but a higher sensitivity was achieved. In this example, it should not be too surprising that naive Bayes does not convincingly outperform LDA: this data set has \\(n = 10,000\\) and \\(p = 4\\), and so the reduction in variance resulting from the naive Bayes assumption is not necessarily worthwhile. We expect to see a greater pay-off to using naive Bayes relative to LDA or QDA in instances where \\(p\\) is larger or \\(n\\) is smaller, so that reducing the variance is very important. 4.5 A Comparison of Classification Methods 4.5.1 An Analytical Comparison We now perform an analytical (or mathematical) comparison of LDA, QDA, naive Bayes, and logistic regression. We consider these approaches in a setting with \\(K\\) classes, so that we assign an observation to the class that maximizes \\(\\text{Pr}(Y = k|X = x)\\). Equivalently, we can set \\(K\\) as the baseline class and assign an observation to the class that maximizes \\[ \\log \\left(\\frac{\\text{Pr}(Y = k|X = x)}{\\text{Pr}(Y = K |X = x)}\\right) \\] for \\(k = 1, \\dots, K\\). This is the familiar log-odds of class \\(k\\) compared to baseline class \\(K\\). For LDA, we assumed the predictors within each class are drawn from a multivariate normal distribution with shared co-variance matrix. The log-odds can be represented as: \\[ \\begin{align} \\log \\left(\\frac{\\text{Pr}(Y = k|X = x)}{\\text{Pr}(Y = K |X = x)}\\right) &amp;= \\log \\left(\\frac{\\pi_k f_k(x)}{\\pi_K f_K(x)}\\right)\\\\ &amp;= a_k + \\sum_{j=1}^p b_{kj} x_j. \\end{align} \\] where \\(a_k\\) and \\(b_{kj}\\) are functions of \\(\\pi_k\\), \\(\\mu_k\\), and \\(\\Sigma_k\\). Like logistic regression, LDA assumes that the log-odds of the probabilities are linear in \\(x\\). Similarly, an additional function \\(c_{kjl}\\) gives the log-odds in the QDA setting: \\[ \\log \\left(\\frac{\\text{Pr}(Y = k|X = x)}{\\text{Pr}(Y = K |X = x)}\\right) = a_k + \\sum_{j=1}^p b_{kj} x_j + \\sum_{j=1}^p \\sum_{l=1}^p c_{kjl} x_j x_l \\] which is quadratic in \\(x\\). Finally, the naive Bayes setting, with one-dimensional \\(f_{kj}(x_j)\\): \\[ \\begin{align} \\log \\left(\\frac{\\text{Pr}(Y = k|X = x)}{\\text{Pr}(Y = K |X = x)}\\right) &amp;= \\log \\left(\\frac{\\pi_k f_k(x )}{\\pi_K f_K(x)}\\right)\\\\ &amp;= a_k + \\sum_{j=1}^p g_{kj} (x_j). \\end{align} \\] where \\(g_{kj} (x_j) = \\log \\frac{f_{kj}(x_j)}{f_{Kj} (x_j)}\\). This is the form of a generalized additive model, a topic that is discussed further in Chapter 7. Looking at these forms, we have the following observations: LDA is a special case of QDA with \\(c_{kjl} = 0\\). Any classifier with a linear decision boundary is a special case of naive Bayes with \\(b_{kj} (x_j) = b_{kj} x_j\\). In particular, this means that LDA is a special case of naive Bayes. Naive Bayes is also a special case of LDA if \\(f_{kj} (x_j)\\) is a modeled as a one-dimensional Gaussian distribution. QDA and naive Bayes are not special cases of the other. None of these methods uniformly dominates the others: in any setting, the choice of method will depend on the true distribution of the predictors in each of the \\(K\\) classes, as well as other considerations, such as the values of \\(n\\) and \\(p\\). The latter ties into the bias-variance trade-off. Then to tie this all to logistic regression, recall the multinomial form: \\[ \\log \\left( \\frac{\\text{Pr} (Y = k| X = x)}{\\text{Pr} (Y = K| X = x)}\\right) = \\beta_{k0} + \\sum_{j=1}^p \\beta_{kj} x_j. \\] This is identical to the linear form of the LDA as both are linear functions of the predictors. The estimation approach differs of course: In LDA, the coefficients in this linear function are functions of estimates for \\(\\pi_k\\), \\(\\pi_K\\), \\(\\mu_k\\), \\(\\mu_K\\), and \\(\\Sigma\\) obtained by assuming that \\(X_1,\\dots, X_p\\) follow a normal distribution within each class. By contrast, in logistic regression, the coefficients are chosen to maximize the likelihood function (4.5). Thus, we expect LDA to outperform logistic regression when the normality assumption (approximately) holds, and we expect logistic regression to perform better when it does not. Lastly, some observations about \\(K\\)-nearest neighbors, which is a non-parametric alternative to classification: Because KNN is completely non-parametric, we can expect this approach to dominate LDA and logistic regression when the decision boundary is highly non-linear, provided that \\(n\\) is very large and \\(p\\) is small. In order to provide accurate classification, KNN requires a lot of observations relative to the number of predictors  that is, \\(n\\) much larger than \\(p\\). This has to do with the fact that KNN is non-parametric, and thus tends to reduce the bias while incurring a lot of variance. In settings where the decision boundary is non-linear but \\(n\\) is only modest, or \\(p\\) is not very small, then QDA may be preferred to KNN. This is because QDA can provide a non-linear decision boundary while taking advantage of a parametric form, which means that it requires a smaller sample size for accurate classification, relative to KNN. Unlike logistic regression, KNN does not tell us which predictors are important: we dont get a table of coefficients as in Table 4.3. 4.5.2 An Empirical Comparison As I dont have access to the data, or the methodological details to simulate it, I wont reproduce the results of this section. But here is my summary of the six scenarios: Scenario 1: uncorrelated normal variables. LDA, logistic regression performed well due to linear decision boundary. KNN performed poorly. QDA worse than LDA because it was more flexible than necessary. Naive Bayes better than QDA because of independent predictors. Scenario 2: correlated normal variables. Similar to scenario 1, except naive Bayes performed much worse due to correlated predictors. Scenario 3: correlated \\(t\\)-distributed predictors (more extreme points than normal). Logistic regression best (linear decision boundary). LDA a bit worse because non-normal variables. Scenario 4: normal variables with different correlations per class. The QDA assumption was correct, and therefore greatly outperformed other. Scenario 5: uncorrelated normal variables, but responses samples from the logistic function applied to a complicated non-linear function of the predictors. The KNN-CV method gave the best results, followed by the more flexible QDA and naive Bayes. KNN with \\(K = 1\\) was the worst. Scenario 6: normal distribution with a different diagonal covariance matrix (uncorrelated) for each class, and with very small sample size. Naive Bayes performed very well. LDA and logistic regression performed worse due to unequal covariance matrices (non-linear decision boundary). QDA performed a bit worse than naive Bayes due to small sample size, and difficulty estimating correlations between predictors. KNNs performance also suffered due to very small sample size. These six examples illustrate that no one method will dominate the others in every situation. When the true decision boundaries are linear, then the LDA and logistic regression approaches will tend to perform well. When the boundaries are moderately non-linear, QDA or naive Bayes may give better results. Finally, for much more complicated decision boundaries, a non-parametric approach such as KNN can be superior. But the level of smoothness for a non-parametric approach must be chosen carefully. In the next chapter we examine a number of approaches for choosing the correct level of smoothness and, in general, for selecting the best overall method. Finally, recall from Chapter 3 that in the regression setting we can accommodate a non-linear relationship between the predictors and by performing regression using transformations of the predictors. A similar approach could be taken in the classification setting. For instance, we could create a more flexible version of logistic regression by including \\(X^2\\), \\(X^3\\), and even \\(X^4\\) as predictors. This may or may not improve logistic regressions performance, depending on whether the increase in variance due to the added flexibility is offset by a sufficiently large reduction in bias. We could do the same for LDA. If we added all possible quadratic terms and cross-products to LDA, the form of the model would be the same as the QDA model, although the parameter estimates would be different. This device allows us to move somewhere between an LDA and a QDA model. 4.6 Generalized Linear Models Thus far, we have considered both quantitative and qualitative response \\(Y\\). However, sometimes \\(Y\\) is neither, and so linear regression and classification are not applicable. The example data set to introduce generalized linear models in bikeshare: bikeshare &lt;- ISLR2::Bikeshare glimpse(bikeshare) ## Rows: 8,645 ## Columns: 15 ## $ season &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,~ ## $ mnth &lt;fct&gt; Jan, Jan, Jan, Jan, Jan, Jan, Jan, Jan, Jan, Jan, Jan, Jan,~ ## $ day &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,~ ## $ hr &lt;fct&gt; 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 1~ ## $ holiday &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,~ ## $ weekday &lt;dbl&gt; 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,~ ## $ workingday &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,~ ## $ weathersit &lt;fct&gt; clear, clear, clear, clear, clear, cloudy/misty, clear, cle~ ## $ temp &lt;dbl&gt; 0.24, 0.22, 0.22, 0.24, 0.24, 0.24, 0.22, 0.20, 0.24, 0.32,~ ## $ atemp &lt;dbl&gt; 0.2879, 0.2727, 0.2727, 0.2879, 0.2879, 0.2576, 0.2727, 0.2~ ## $ hum &lt;dbl&gt; 0.81, 0.80, 0.80, 0.75, 0.75, 0.75, 0.80, 0.86, 0.75, 0.76,~ ## $ windspeed &lt;dbl&gt; 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0896, 0.0000, 0.0~ ## $ casual &lt;dbl&gt; 3, 8, 5, 3, 0, 0, 2, 1, 1, 8, 12, 26, 29, 47, 35, 40, 41, 1~ ## $ registered &lt;dbl&gt; 13, 32, 27, 10, 1, 1, 0, 2, 7, 6, 24, 30, 55, 47, 71, 70, 5~ ## $ bikers &lt;dbl&gt; 16, 40, 32, 13, 1, 1, 2, 3, 8, 14, 36, 56, 84, 94, 106, 110~ The response is bikers, the number of hourly users of a bike sharing program in Washington, DC. This response value is neither qualitative nor quantitative: instead, it takes on non-negative integer values, or counts. We will consider counts predicting bikers using the covariates mnth (month of the year), hr (hour of the day, from 0 to 23), workingday (an indicator variable that equals 1 if it is neither a weekend nor a holiday), temp (the normalized temperature, in Celsius), and weathersit (a qualitative variable that takes on one of four possible values: clear; misty or cloudy; light rain or light snow; or heavy rain or heavy snow.) In the analyses that follow, we will treat mnth, hr, and weathersit as qualitative variables. 4.6.1 Linear Regression on the Bikeshare Data Results of linear regression predicting bikers: lm_bikers &lt;- lm(bikers ~ mnth + hr + workingday + temp + weathersit, data = bikeshare) tidy_custom(lm_bikers, coef_round = 2, se_round = 2, z_round = 2) %&gt;% # Exclude mnth and hr due to space constraints filter(!str_detect(term, &quot;mnth|hr&quot;)) %&gt;% gt() html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #fxkprlntuf .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #fxkprlntuf .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #fxkprlntuf .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #fxkprlntuf .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #fxkprlntuf .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #fxkprlntuf .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #fxkprlntuf .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #fxkprlntuf .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #fxkprlntuf .gt_column_spanner_outer:first-child { padding-left: 0; } #fxkprlntuf .gt_column_spanner_outer:last-child { padding-right: 0; } #fxkprlntuf .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #fxkprlntuf .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #fxkprlntuf .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #fxkprlntuf .gt_from_md > :first-child { margin-top: 0; } #fxkprlntuf .gt_from_md > :last-child { margin-bottom: 0; } #fxkprlntuf .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #fxkprlntuf .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #fxkprlntuf .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #fxkprlntuf .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #fxkprlntuf .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #fxkprlntuf .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #fxkprlntuf .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #fxkprlntuf .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #fxkprlntuf .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #fxkprlntuf .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #fxkprlntuf .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #fxkprlntuf .gt_sourcenote { font-size: 90%; padding: 4px; } #fxkprlntuf .gt_left { text-align: left; } #fxkprlntuf .gt_center { text-align: center; } #fxkprlntuf .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #fxkprlntuf .gt_font_normal { font-weight: normal; } #fxkprlntuf .gt_font_bold { font-weight: bold; } #fxkprlntuf .gt_font_italic { font-style: italic; } #fxkprlntuf .gt_super { font-size: 65%; } #fxkprlntuf .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } term coefficient std.error z-statistic p-value (Intercept) -68.63 5.31 -12.93 &lt;0.001 workingday 1.27 1.78 0.71 0.477 temp 157.21 10.26 15.32 &lt;0.001 weathersitcloudy/misty -12.89 1.96 -6.56 &lt;0.001 weathersitlight rain/snow -66.49 2.97 -22.42 &lt;0.001 weathersitheavy rain/snow -109.74 76.67 -1.43 0.152 Re-creating Figure 4.13 takes some wrangling to get the appropriate coefficients: month_coefs &lt;- tidy(lm_bikers) %&gt;% filter(str_detect(term, &quot;Intercept|mnth&quot;)) %&gt;% transmute( Month = ifelse( # The reference level is January term == &quot;(Intercept)&quot;, &quot;Jan&quot;, str_remove(term, &quot;mnth&quot;) ) %&gt;% fct_inorder(), Coefficient = ifelse( # The coefficient for the reference level of just the intercept term == &quot;(Intercept)&quot;, estimate, # Otherwise the coefficient is relative to the intercept estimate + estimate[term == &quot;(Intercept)&quot;] ) ) hour_coefs &lt;- tidy(lm_bikers) %&gt;% filter(str_detect(term, &quot;Intercept|hr&quot;)) %&gt;% transmute( Hour = ifelse( # The reference level is 00 hours (midnight) term == &quot;(Intercept)&quot;, &quot;0&quot;, str_remove(term, &quot;hr&quot;) ) %&gt;% as.integer(), Coefficient = ifelse( # The coefficient for the reference level of just the intercept term == &quot;(Intercept)&quot;, estimate, # Otherwise the coefficient is relative to the intercept estimate + estimate[term == &quot;(Intercept)&quot;] ) ) p1 &lt;- month_coefs %&gt;% ggplot(aes(x = Month, y = Coefficient)) + geom_point(color = td_colors$nice$spanish_blue, size = 3) + geom_line(aes(group = 1), color = td_colors$nice$spanish_blue, size = 1) + theme(axis.text.x = element_text(angle = 45)) p2 &lt;- hour_coefs %&gt;% ggplot(aes(x = Hour, y = Coefficient)) + geom_point(color = td_colors$nice$spanish_blue, size = 3) + geom_line(aes(group = 1), color = td_colors$nice$spanish_blue, size = 1) p1 | p2 The coefficients make intuitive sense, but the issues with the linear regression become apparent when we look at the predictions: library(ggdist) # for the stat_halfeye() plotting function tibble( pred_bikers = predict(lm_bikers, newdata = bikeshare, type = &quot;response&quot;) ) %&gt;% ggplot(aes(x = pred_bikers, fill = stat(x &lt; 0))) + stat_halfeye() + scale_fill_manual(values = c(&quot;grey75&quot;, td_colors$nice$ruby_red)) + remove_axis(&quot;y&quot;) + theme(legend.position = &quot;none&quot;) 9.6% of predictions are negative. Another problem is heteroskedasticity, as shown in the left of Figure 4.14: p1 &lt;- bikeshare %&gt;% mutate(hr = as.integer(hr)) %&gt;% ggplot(aes(x = hr, y = bikers)) + geom_jitter(width = 0.1, height = 0, size = 0.5, color = td_colors$nice$spanish_blue) + # Draw a smoothling spline geom_smooth(method = lm, formula = y ~ splines::bs(x, 3), se = FALSE, size = 1.5, color = td_colors$nice$emerald) p2 &lt;- bikeshare %&gt;% mutate(hr = as.integer(hr)) %&gt;% ggplot(aes(x = hr, y = log(bikers))) + geom_jitter(width = 0.1, height = 0, size = 0.5, color = td_colors$nice$spanish_blue) + geom_smooth(method = lm, formula = y ~ splines::bs(x, 3), se = FALSE, size = 1.5, color = td_colors$nice$emerald) p1 | p2 Lastly, the response bikers is integer-valued, whereas the response in a linear model is continuous. One solution is to transform the response \\(Y\\). In the above figure, we see that log(bikers) can fix some of the heteroskedasticity, and also avoids negative predictions. This wont work if there are any values of bikers = 0, however, and leads to challenging interpretation of the coefficients on the log scale. 4.6.2 Poisson Regression on Bikeshare Data A much more natural approach to count data is Poisson regression. First, the Poisson distribution: Suppose that a random variable \\(Y\\) takes on nonnegative integer values, i.e. \\(Y \\in \\{0, 1, 2, \\dots\\}\\). If \\(Y\\) follows the Poisson distribution, then \\[ \\text{Pr}(Y = k) = \\frac{e^{}^k}{k!} \\text{ for } k = 0, 1, 2, \\dots \\] Here, \\( &gt; 0\\) is the expected value of \\(Y\\), i.e. \\(E(Y )\\). It turns out that \\(\\) also equals the variance of \\(Y\\), i.e. \\( = E(Y ) = \\text{Var}(Y )\\). This means that if \\(Y\\) follows the Poisson distribution, then the larger the mean of \\(Y\\), the larger its variance. (In (4.35), the notation \\(k!\\), pronounced k factorial, is defined as \\(k! = k × (k  1) × (k  2) × ... × 3 × 2 × 1.\\)) As an example, consider biker counts drawn from a Poisson distribution with mean \\(E(Y) = \\lambda = 5\\). Then the probability of 0, 1, 2, etc. bikers during a particular hour is: tibble( n_bikers = 0:6, prob = exp(-5) * 5^n_bikers / factorial(n_bikers) ) %&gt;% mutate( prob = scales::percent(prob) ) ## # A tibble: 7 x 2 ## n_bikers prob ## &lt;int&gt; &lt;chr&gt; ## 1 0 0.67% ## 2 1 3.37% ## 3 2 8.42% ## 4 3 14.04% ## 5 4 17.55% ## 6 5 17.55% ## 7 6 14.62% Of course, we expect \\(\\lambda = E(Y)\\) to vary under certain conditions, so we write it as a function of the covariates: \\[ \\log (\\lambda (X_1, \\dots, X_p)) = \\beta_0 + \\beta_1 X_1 + \\dots + \\beta_p X_p. \\] Taking the log of \\(\\lambda\\) ensures that \\(\\lambda(X_1, \\dots, X_p)\\) takes on non-negative values for all values of the covariates. The coefficients \\(\\beta_j\\) are estimated using the same maximum likelihood approach as logistic regression: \\[ \\ell (\\beta_0, \\dots, \\beta_p) = \\prod_{i = 1}^n p(y_i) = \\prod_{i = 1}^n \\frac{e^{-\\lambda (x_i)} \\lambda(x_i)^{y_i}}{y_i!} \\] where \\(\\lambda(x_i) = e^{\\beta_0 + \\dots + \\beta_p x_{i}}\\). Fit the Poisson model: glm_bikers &lt;- glm(bikers ~ mnth + hr + workingday + temp + weathersit, data = bikeshare, family = poisson) tidy_custom(glm_bikers, coef_round = 2, se_round = 2, z_round = 2) %&gt;% # Exclude mnth and hr due to space constraints filter(!str_detect(term, &quot;mnth|hr&quot;)) %&gt;% gt() html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #alvkobghjn .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #alvkobghjn .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #alvkobghjn .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #alvkobghjn .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #alvkobghjn .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #alvkobghjn .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #alvkobghjn .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #alvkobghjn .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #alvkobghjn .gt_column_spanner_outer:first-child { padding-left: 0; } #alvkobghjn .gt_column_spanner_outer:last-child { padding-right: 0; } #alvkobghjn .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #alvkobghjn .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #alvkobghjn .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #alvkobghjn .gt_from_md > :first-child { margin-top: 0; } #alvkobghjn .gt_from_md > :last-child { margin-bottom: 0; } #alvkobghjn .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #alvkobghjn .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #alvkobghjn .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #alvkobghjn .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #alvkobghjn .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #alvkobghjn .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #alvkobghjn .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #alvkobghjn .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #alvkobghjn .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #alvkobghjn .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #alvkobghjn .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #alvkobghjn .gt_sourcenote { font-size: 90%; padding: 4px; } #alvkobghjn .gt_left { text-align: left; } #alvkobghjn .gt_center { text-align: center; } #alvkobghjn .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #alvkobghjn .gt_font_normal { font-weight: normal; } #alvkobghjn .gt_font_bold { font-weight: bold; } #alvkobghjn .gt_font_italic { font-style: italic; } #alvkobghjn .gt_super { font-size: 65%; } #alvkobghjn .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } term coefficient std.error z-statistic p-value (Intercept) 2.69 0.01 277.12 &lt;0.001 workingday 0.01 0.00 7.50 &lt;0.001 temp 0.79 0.01 68.43 &lt;0.001 weathersitcloudy/misty -0.08 0.00 -34.53 &lt;0.001 weathersitlight rain/snow -0.58 0.00 -141.90 &lt;0.001 weathersitheavy rain/snow -0.93 0.17 -5.55 &lt;0.001 month_coefs &lt;- tidy(glm_bikers) %&gt;% filter(str_detect(term, &quot;Intercept|mnth&quot;)) %&gt;% transmute( Month = ifelse( term == &quot;(Intercept)&quot;, &quot;Jan&quot;, str_remove(term, &quot;mnth&quot;) ) %&gt;% fct_inorder(), Coefficient = ifelse( term == &quot;(Intercept)&quot;, estimate, estimate + estimate[term == &quot;(Intercept)&quot;] ) ) hour_coefs &lt;- tidy(glm_bikers) %&gt;% filter(str_detect(term, &quot;Intercept|hr&quot;)) %&gt;% transmute( Hour = ifelse( term == &quot;(Intercept)&quot;, &quot;0&quot;, str_remove(term, &quot;hr&quot;) ) %&gt;% as.integer(), Coefficient = ifelse( term == &quot;(Intercept)&quot;, estimate, estimate + estimate[term == &quot;(Intercept)&quot;] ) ) p1 &lt;- month_coefs %&gt;% ggplot(aes(x = Month, y = Coefficient)) + geom_point(color = td_colors$nice$spanish_blue, size = 3) + geom_line(aes(group = 1), color = td_colors$nice$spanish_blue, size = 1) + theme(axis.text.x = element_text(angle = 45)) p2 &lt;- hour_coefs %&gt;% ggplot(aes(x = Hour, y = Coefficient)) + geom_point(color = td_colors$nice$spanish_blue, size = 3) + geom_line(aes(group = 1), color = td_colors$nice$spanish_blue, size = 1) p1 | p2 Considerations of this model: Qualitatively quite similar to the linear regression model. One difference is that workingday was statistically significant with Poisson regression. A coefficient \\(\\beta_j\\) is interpreted as the associated change in \\(E(Y) = \\lambda\\) by a factor of \\(\\exp({\\beta_j})\\) for a one unit increase in \\(X_j\\). Example: a change in weather from clear to cloudy skies is associated with a change of exp(-0.075) = 0.928 = 93% as many people will use bikes. The key assumption of the Poisson model is that the variance increases with the mean, \\(\\lambda = E(Y) = \\text{Var}(Y)\\), which means it can deal with the heteroskedasticity we saw in the linear model. The predictions from the Poisson model, by construction, are non-negative: tibble( pred_bikers = predict(glm_bikers, newdata = bikeshare, type = &quot;response&quot;) ) %&gt;% ggplot(aes(x = pred_bikers, fill = stat(x &lt; 0))) + stat_halfeye() + scale_fill_manual(values = c(&quot;grey75&quot;, td_colors$nice$ruby_red)) + remove_axis(&quot;y&quot;) + theme(legend.position = &quot;none&quot;) 4.6.3 Generalized Linear Models in Greater Generality The three regression models we have seen so far (linear, logistic and Poisson) share these similarities. Predictors \\(X_1, \\dots, X_p\\) used to predict a response \\(Y\\), which we assume belongs to a certain family of distributions conditional on \\(X\\). For linear regression, we typically assume Gaussian/normal. For logistic regression, we assume a Bernoulli distribution. For Poisson regression, we assume a Poisson distribution. The mean of \\(Y\\) is modeled as a function of the predictors: \\[ \\begin{align} E(Y|X) &amp;= \\beta_0 + \\beta_1 X_1 + \\dots + \\beta_p X_p \\\\ E(Y|X) &amp;= \\frac{e^{\\beta_0 + \\dots + \\beta_pX_p}}{1 + e^{\\beta_0 + \\dots + \\beta_pX_p}} \\\\ E(Y|X) = \\lambda (X_1, \\dots, X_p) &amp;= e^{\\beta_0 + \\beta_1 X_1 + \\dots + \\beta_p X_p}. \\end{align} \\] These three equations can be expressed using a link function \\(\\eta\\), which applies a transformation to \\(E(Y|X)\\) so that the transformed mean is a lienar function of the predictors: \\[ \\eta(E(Y|X)) = \\beta_0 + \\beta_1 X_1 + \\dots + \\beta_p X_p. \\] The link functions for linear, logistic, and Poisson regression are, respectively: \\[ \\begin{align} \\eta(\\mu) &amp;= \\mu \\\\ \\eta(\\mu) &amp;= \\log \\left(\\frac{\\mu}{1 - \\mu} \\right) \\\\ \\eta(\\mu) &amp;= \\log (\\mu). \\end{align} \\] The Gaussian, Bernoulli, and Poisson distributions are all members of a wider class of distributions, known as the exponential family. Other well-known members of this family are the exponential distribution, the Gamma distribution, and the negative binomial distribution. In general, we can perform a regression by modeling the response \\(Y\\) as coming from a particular member of the exponential family, and then transforming the mean of the response so that the transformed mean is a linear function of the predictors via (4.42). Any regression approach that follows this very general recipe is known as a generalized linear model (GLM). Thus, linear regression, logistic regression, and Poisson regression and three examples of GLMs. Other examples not covered here include Gamma regression and negative binomial regerssion. 4.7 Lab: Classification Methods 4.7.1 The Stock Market Data We will begin by examining some numerical and graphical summaries of the Smarket data, which is part of the ISLR2 library. This data set consists of percentage returns for the S&amp;P 500 stock index over 1,250 days, from the beginning of 2001 until the end of 2005. For each date, we have recorded the percentage returns for each of the five previous trading days, Lag1 through Lag5. We have also recorded Volume (the number of shares traded on the previous day, in billions), Today (the percentage return on the date in question) and Direction (whether the market was Up or Down on this date). Our goal is to predict Direction (a qualitative response) using the other features. I like the skimr package for summarizing a data set: smarket &lt;- ISLR2::Smarket skimr::skim(smarket) Table 4.1: Data summary Name smarket Number of rows 1250 Number of columns 9 _______________________ Column type frequency: factor 1 numeric 8 ________________________ Group variables None Variable type: factor skim_variable n_missing complete_rate ordered n_unique top_counts Direction 0 1 FALSE 2 Up: 648, Dow: 602 Variable type: numeric skim_variable n_missing complete_rate mean sd p0 p25 p50 p75 p100 hist Year 0 1 2003.02 1.41 2001.00 2002.00 2003.00 2004.00 2005.00  Lag1 0 1 0.00 1.14 -4.92 -0.64 0.04 0.60 5.73  Lag2 0 1 0.00 1.14 -4.92 -0.64 0.04 0.60 5.73  Lag3 0 1 0.00 1.14 -4.92 -0.64 0.04 0.60 5.73  Lag4 0 1 0.00 1.14 -4.92 -0.64 0.04 0.60 5.73  Lag5 0 1 0.01 1.15 -4.92 -0.64 0.04 0.60 5.73  Volume 0 1 1.48 0.36 0.36 1.26 1.42 1.64 3.15  Today 0 1 0.00 1.14 -4.92 -0.64 0.04 0.60 5.73  To produce the pairwise correlations between predictors, Ill use another new package corrr, which returns a tidy tibble that we can turn into a nice gt table: smarket %&gt;% select(-Direction) %&gt;% corrr::correlate(method = &quot;pearson&quot;, quiet = TRUE) %&gt;% gt(rowname_col = &quot;term&quot;) %&gt;% gt::fmt_missing(columns = everything(), missing_text = &quot;&quot;) %&gt;% gt::data_color( columns = everything(), colors = scales::col_numeric( palette = td_pal(&quot;div5&quot;)(5), domain = c(-0.1, 0.6) ) ) %&gt;% gt::fmt_number(columns = everything(), decimals = 3) html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #uqrsmwixkt .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #uqrsmwixkt .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #uqrsmwixkt .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #uqrsmwixkt .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #uqrsmwixkt .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #uqrsmwixkt .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #uqrsmwixkt .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #uqrsmwixkt .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #uqrsmwixkt .gt_column_spanner_outer:first-child { padding-left: 0; } #uqrsmwixkt .gt_column_spanner_outer:last-child { padding-right: 0; } #uqrsmwixkt .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #uqrsmwixkt .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #uqrsmwixkt .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #uqrsmwixkt .gt_from_md > :first-child { margin-top: 0; } #uqrsmwixkt .gt_from_md > :last-child { margin-bottom: 0; } #uqrsmwixkt .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #uqrsmwixkt .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #uqrsmwixkt .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #uqrsmwixkt .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #uqrsmwixkt .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #uqrsmwixkt .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #uqrsmwixkt .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #uqrsmwixkt .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #uqrsmwixkt .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #uqrsmwixkt .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #uqrsmwixkt .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #uqrsmwixkt .gt_sourcenote { font-size: 90%; padding: 4px; } #uqrsmwixkt .gt_left { text-align: left; } #uqrsmwixkt .gt_center { text-align: center; } #uqrsmwixkt .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #uqrsmwixkt .gt_font_normal { font-weight: normal; } #uqrsmwixkt .gt_font_bold { font-weight: bold; } #uqrsmwixkt .gt_font_italic { font-style: italic; } #uqrsmwixkt .gt_super { font-size: 65%; } #uqrsmwixkt .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } Year Lag1 Lag2 Lag3 Lag4 Lag5 Volume Today Year 0.030 0.031 0.033 0.036 0.030 0.539 0.030 Lag1 0.030 &minus;0.026 &minus;0.011 &minus;0.003 &minus;0.006 0.041 &minus;0.026 Lag2 0.031 &minus;0.026 &minus;0.026 &minus;0.011 &minus;0.004 &minus;0.043 &minus;0.010 Lag3 0.033 &minus;0.011 &minus;0.026 &minus;0.024 &minus;0.019 &minus;0.042 &minus;0.002 Lag4 0.036 &minus;0.003 &minus;0.011 &minus;0.024 &minus;0.027 &minus;0.048 &minus;0.007 Lag5 0.030 &minus;0.006 &minus;0.004 &minus;0.019 &minus;0.027 &minus;0.022 &minus;0.035 Volume 0.539 0.041 &minus;0.043 &minus;0.042 &minus;0.048 &minus;0.022 0.015 Today 0.030 &minus;0.026 &minus;0.010 &minus;0.002 &minus;0.007 &minus;0.035 0.015 The only substantial correlation is between Volume and Year: smarket %&gt;% ggplot(aes(x = factor(Year), y = Volume)) + geom_jitter(width = 0.3, color = td_colors$nice$day9_yellow) + geom_boxplot(alpha = 0.3, outlier.shape = NA, width = 0.2) 4.7.2 Logistic Regression Use tidymodels to fit the model and produce the confusion matrix: library(tidymodels) glm_direction_fit &lt;- # Note that these options are the defaults # (and mode can only be &quot;classification&quot; for logistic) logistic_reg(mode = &quot;classification&quot;, engine = &quot;glm&quot;) %&gt;% fit(Direction ~ Lag1 + Lag2 + Lag3 + Lag4 + Lag5 + Volume, data = smarket) glm_direction_conf_mat &lt;- augment(glm_direction_fit, smarket) %&gt;% yardstick::conf_mat(.pred_class, Direction) glm_direction_conf_mat ## Truth ## Prediction Down Up ## Down 145 457 ## Up 141 507 This returns an object with some helpful built-in functions. Summary metrics: summary(glm_direction_conf_mat) ## # A tibble: 13 x 3 ## .metric .estimator .estimate ## &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 accuracy binary 0.522 ## 2 kap binary 0.0237 ## 3 sens binary 0.507 ## 4 spec binary 0.526 ## 5 ppv binary 0.241 ## 6 npv binary 0.782 ## 7 mcc binary 0.0277 ## 8 j_index binary 0.0329 ## 9 bal_accuracy binary 0.516 ## 10 detection_prevalence binary 0.482 ## 11 precision binary 0.241 ## 12 recall binary 0.507 ## 13 f_meas binary 0.327 We get the same accuracy (52.2%) as that in the text. There is also a couple autoplot() options autoplot(glm_direction_conf_mat, type = &quot;mosaic&quot;) | autoplot(glm_direction_conf_mat, type = &quot;heatmap&quot;) The next part of this lab is (I think) the first time we are splitting the data into training and testing data. Typically in tidymodels, we randomly split the data with rsample::initial_split, which takes a specified proportion (prop) and optional stratification variable (strata). In this lab, all the data for Year = 2005 is the hold out set. We can re-create this split manually with rsample::make_splits: smarket_split &lt;- make_splits( ind = list( # Get row numbers for &lt;2005 &quot;analysis&quot; = which(smarket$Year &lt; 2005), # Get row numbers for 2005 &quot;assessment&quot; = which(smarket$Year == 2005) ), data = smarket ) smarket_split ## &lt;Analysis/Assess/Total&gt; ## &lt;998/252/1250&gt; We then get the training and testing data with their matching functions: smarket_train &lt;- training(smarket_split) smarket_test &lt;- testing(smarket_split) Re-fit the model using the training data only: glm_direction_fit &lt;- logistic_reg(mode = &quot;classification&quot;, engine = &quot;glm&quot;) %&gt;% fit(Direction ~ Lag1 + Lag2 + Lag3 + Lag4 + Lag5 + Volume, data = smarket_train) Just as a demonstration, I will evaluate the model on the training data first: glm_direction_train_pred &lt;- glm_direction_fit %&gt;% augment(smarket_train) glm_direction_train_pred %&gt;% accuracy(truth = Direction, .pred_class) ## # A tibble: 1 x 3 ## .metric .estimator .estimate ## &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 accuracy binary 0.527 Quite poor. This was calculated using the 50% probability threshold, but we can also look at the ROC curve: glm_direction_train_pred %&gt;% roc_curve(truth = Direction, .pred_Up, event_level = &quot;second&quot;) %&gt;% autoplot() This doesnt give a lot of confidence in the performance on the testing set: glm_direction_test_pred &lt;- glm_direction_fit %&gt;% augment(smarket_test) glm_direction_test_pred %&gt;% accuracy(truth = Direction, .pred_class) ## # A tibble: 1 x 3 ## .metric .estimator .estimate ## &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 accuracy binary 0.480 We get an accuracy that is worse than random guessing. Disappointing, but not a surprise as the authors say: Of course this result is not all that surprising, given that one would not generally expect to be able to use previous days returns to predict future market performance. (After all, if it were possible to do so, then the authors of this book would be out striking it rich rather than writing a statistics textbook.) Perhaps a simpler model would be more effective. After all, using predictors that have no relationship with the response tends to cause a deterioration in the test error rate (since such predictors cause an increase in variance without a corresponding decrease in bias), and so removing such predictors may in turn yield an improvement. glm_direction_fit_simple &lt;- logistic_reg(mode = &quot;classification&quot;, engine = &quot;glm&quot;) %&gt;% fit(Direction ~ Lag1 + Lag2, data = smarket_train) glm_direction_fit_simple %&gt;% augment(smarket_test) %&gt;% accuracy(truth = Direction, .pred_class) ## # A tibble: 1 x 3 ## .metric .estimator .estimate ## &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 accuracy binary 0.560 Indeed it does. 4.7.3 Linear Discriminant Analysis Perform LDA to predict Direction from Lag1 and Lag2: library(discrim) lda_direction_fit &lt;- # Note that this model definition does not come with parsnip, but the # extension package discrim discrim::discrim_linear(mode = &quot;classification&quot;, engine = &quot;MASS&quot;) %&gt;% fit(Direction ~ Lag1 + Lag2, data = smarket_train) lda_direction_fit ## parsnip model object ## ## Fit time: 0ms ## Call: ## lda(Direction ~ Lag1 + Lag2, data = data) ## ## Prior probabilities of groups: ## Down Up ## 0.491984 0.508016 ## ## Group means: ## Lag1 Lag2 ## Down 0.04279022 0.03389409 ## Up -0.03954635 -0.03132544 ## ## Coefficients of linear discriminants: ## LD1 ## Lag1 -0.6420190 ## Lag2 -0.5135293 Performance on the testing data set: lda_direction_test_pred &lt;- lda_direction_fit %&gt;% augment(new_data = smarket_test) lda_direction_test_pred %&gt;% conf_mat(truth = Direction, estimate = .pred_class) ## Truth ## Prediction Down Up ## Down 35 35 ## Up 76 106 lda_direction_test_pred %&gt;% accuracy(truth = Direction, estimate = .pred_class) ## # A tibble: 1 x 3 ## .metric .estimator .estimate ## &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 accuracy binary 0.560 Though there is a package called probably for adjusting probability thresholds for classification metrics, I will just manually do so here: lda_direction_test_pred %&gt;% filter(.pred_Down &gt; 0.9) ## # A tibble: 0 x 12 ## # ... with 12 variables: Year &lt;dbl&gt;, Lag1 &lt;dbl&gt;, Lag2 &lt;dbl&gt;, Lag3 &lt;dbl&gt;, ## # Lag4 &lt;dbl&gt;, Lag5 &lt;dbl&gt;, Volume &lt;dbl&gt;, Today &lt;dbl&gt;, Direction &lt;fct&gt;, ## # .pred_class &lt;fct&gt;, .pred_Down &lt;dbl&gt;, .pred_Up &lt;dbl&gt; max(lda_direction_test_pred$.pred_Down) ## [1] 0.520235 4.7.4 Quadratic Discriminant Analysis Performing QDA will look very similar: qda_direction_fit &lt;- discrim_quad(mode = &quot;classification&quot;, engine = &quot;MASS&quot;) %&gt;% fit(Direction ~ Lag1 + Lag2, data = smarket_train) qda_direction_fit ## parsnip model object ## ## Fit time: 0ms ## Call: ## qda(Direction ~ Lag1 + Lag2, data = data) ## ## Prior probabilities of groups: ## Down Up ## 0.491984 0.508016 ## ## Group means: ## Lag1 Lag2 ## Down 0.04279022 0.03389409 ## Up -0.03954635 -0.03132544 qda_direction_test_pred &lt;- qda_direction_fit %&gt;% augment(new_data = smarket_test) qda_direction_test_pred %&gt;% conf_mat(truth = Direction, estimate = .pred_class) ## Truth ## Prediction Down Up ## Down 30 20 ## Up 81 121 qda_direction_test_pred %&gt;% accuracy(truth = Direction, estimate = .pred_class) ## # A tibble: 1 x 3 ## .metric .estimator .estimate ## &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 accuracy binary 0.599 This level of accuracy is quite impressive for stock market data, suggesting that the quadratic form may capture the true relationship more accurately. 4.7.5 Naive Bayes By default, the discrim::naive_Bayes() function uses the klaR package as the engine (e1071 is not an option). nb_direction_fit &lt;- naive_Bayes(mode = &quot;classification&quot;, engine = &quot;klaR&quot;) %&gt;% # The klaR engine has an argument usekernel that is always TRUE # We have to set it to FALSE to not use KDE, and instead use Gaussian # distributions, as in the text set_args(usekernel = FALSE) %&gt;% fit(Direction ~ Lag1 + Lag2, data = smarket_train) # The model output is quite long, so I won&#39;t print it here # nb_direction_fit nb_direction_test_pred &lt;- nb_direction_fit %&gt;% augment(new_data = smarket_test) nb_direction_test_pred %&gt;% conf_mat(truth = Direction, estimate = .pred_class) ## Truth ## Prediction Down Up ## Down 28 20 ## Up 83 121 nb_direction_test_pred %&gt;% accuracy(truth = Direction, estimate = .pred_class) ## # A tibble: 1 x 3 ## .metric .estimator .estimate ## &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 accuracy binary 0.591 The naive Bayes approach was quite close (a bit worse) than QDA. This makes sense. As we saw in the correlation matrix, the Lag1 and Lag2 are uncorrelated, so the assumption of naive Bayes is not violated. 4.7.6 \\(K\\)-Nearest Neighbors Ill skip right to the \\(K = 3\\) neighbors fit: knn_direction_fit &lt;- nearest_neighbor(mode = &quot;classification&quot;, engine = &quot;kknn&quot;, neighbors = 3) %&gt;% fit(Direction ~ Lag1 + Lag2, data = smarket_train) knn_direction_test_pred &lt;- knn_direction_fit %&gt;% augment(new_data = smarket_test) knn_direction_test_pred %&gt;% conf_mat(truth = Direction, estimate = .pred_class) ## Truth ## Prediction Down Up ## Down 43 58 ## Up 68 83 knn_direction_test_pred %&gt;% accuracy(truth = Direction, estimate = .pred_class) ## # A tibble: 1 x 3 ## .metric .estimator .estimate ## &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 accuracy binary 0.5 Essentially a coin flip. To show a case where KNN does perform well, load the Caravan data set: caravan &lt;- ISLR2::Caravan This data set includes a massive 85 predictors that measure demographics for 5822 individuals who did or did not Purchase a caravan insurance policy. caravan %&gt;% count(Purchase) %&gt;% mutate(p = n / sum(n)) ## Purchase n p ## 1 No 5474 0.94022673 ## 2 Yes 348 0.05977327 Split the data into training and testing based on row number: caravan_split &lt;- make_splits( ind = list(&quot;assessment&quot; = 1:1000, &quot;analysis&quot; = 1001:nrow(caravan)), data = caravan ) caravan_split ## &lt;Analysis/Assess/Total&gt; ## &lt;4822/1000/5822&gt; caravan_train &lt;- training(caravan_split) caravan_test &lt;- testing(caravan_split) KNN predicts a class based on nearby observations, and so the scale of the variables matters. For instance, imagine a data set that contains two variables, salary and age (measured in dollars and years, respectively). As far as KNN is concerned, a difference of $1,000 in salary is enormous compared to a difference of 50 years in age. Consequently, salary will drive the KNN classification results, and age will have almost no effect. This is contrary to our intuition that a salary difference of $1,000 is quite small compared to an age difference of 50 years. To deal with this, we standardize/normalize the data to have mean zero and standard deviation one. In tidymodels, this means we define a recipe with the step_normalize() step: caravan_rec &lt;- recipe(Purchase ~ ., data = caravan_train) %&gt;% step_normalize(all_numeric_predictors()) Then we define the models with 1, 3, and 5 neighbors: knn_spec1 &lt;- nearest_neighbor(mode = &quot;classification&quot;, engine = &quot;kknn&quot;, neighbors = 1) knn_spec3 &lt;- nearest_neighbor(mode = &quot;classification&quot;, engine = &quot;kknn&quot;, neighbors = 3) knn_spec5 &lt;- nearest_neighbor(mode = &quot;classification&quot;, engine = &quot;kknn&quot;, neighbors = 3) We put the model and recipe together into three separate workflows: knn_purchase_wf1 &lt;- workflow() %&gt;% add_recipe(caravan_rec) %&gt;% add_model(knn_spec1) knn_purchase_wf3 &lt;- workflow() %&gt;% add_recipe(caravan_rec) %&gt;% add_model(knn_spec3) knn_purchase_wf5 &lt;- workflow() %&gt;% add_recipe(caravan_rec) %&gt;% add_model(knn_spec5) Fit all the models: knn_purchase_fit1 &lt;- knn_purchase_wf1 %&gt;% fit(caravan_train) knn_purchase_fit3 &lt;- knn_purchase_wf3 %&gt;% fit(caravan_train) knn_purchase_fit5 &lt;- knn_purchase_wf5 %&gt;% fit(caravan_train) Compile the metrics: knn_metrics &lt;- metric_set(accuracy, sensitivity, specificity, ppv,) bind_rows( augment(knn_purchase_fit1, new_data = caravan_test) %&gt;% knn_metrics(truth = Purchase, estimate = .pred_class) %&gt;% mutate(neighbors = 1), augment(knn_purchase_fit3, new_data = caravan_test) %&gt;% knn_metrics(truth = Purchase, estimate = .pred_class) %&gt;% mutate(neighbors = 3), augment(knn_purchase_fit5, new_data = caravan_test) %&gt;% knn_metrics(truth = Purchase, estimate = .pred_class) %&gt;% mutate(neighbors = 5) ) %&gt;% transmute(neighbors, .metric, .estimate = round(.estimate, 3)) %&gt;% pivot_wider(names_from = .metric, values_from = .estimate) %&gt;% gt() html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #dukqkzdkue .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #dukqkzdkue .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #dukqkzdkue .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #dukqkzdkue .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #dukqkzdkue .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #dukqkzdkue .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #dukqkzdkue .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #dukqkzdkue .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #dukqkzdkue .gt_column_spanner_outer:first-child { padding-left: 0; } #dukqkzdkue .gt_column_spanner_outer:last-child { padding-right: 0; } #dukqkzdkue .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #dukqkzdkue .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #dukqkzdkue .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #dukqkzdkue .gt_from_md > :first-child { margin-top: 0; } #dukqkzdkue .gt_from_md > :last-child { margin-bottom: 0; } #dukqkzdkue .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #dukqkzdkue .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #dukqkzdkue .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #dukqkzdkue .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #dukqkzdkue .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #dukqkzdkue .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #dukqkzdkue .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #dukqkzdkue .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #dukqkzdkue .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #dukqkzdkue .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #dukqkzdkue .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #dukqkzdkue .gt_sourcenote { font-size: 90%; padding: 4px; } #dukqkzdkue .gt_left { text-align: left; } #dukqkzdkue .gt_center { text-align: center; } #dukqkzdkue .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #dukqkzdkue .gt_font_normal { font-weight: normal; } #dukqkzdkue .gt_font_bold { font-weight: bold; } #dukqkzdkue .gt_font_italic { font-style: italic; } #dukqkzdkue .gt_super { font-size: 65%; } #dukqkzdkue .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } neighbors accuracy sens spec ppv 1 0.883 0.929 0.153 0.946 3 0.884 0.930 0.153 0.946 5 0.884 0.930 0.153 0.946 The percentages reported in the text are the positive predictive value (TP / (TP + FP)). This is the ppv variable in the above table, which is way off. This is due to the event_level argument to the ppv() metric function (and sensitivity and specificity for that matter). It is calculated the PPV for the first level of the response, which is Purchase = No. Re-calculate PPV with the correctpositive\" event identified: bind_rows( augment(knn_purchase_fit1, new_data = caravan_test) %&gt;% ppv(truth = Purchase, estimate = .pred_class, event_level = &quot;second&quot;) %&gt;% mutate(neighbors = 1), augment(knn_purchase_fit3, new_data = caravan_test) %&gt;% ppv(truth = Purchase, estimate = .pred_class, event_level = &quot;second&quot;) %&gt;% mutate(neighbors = 3), augment(knn_purchase_fit5, new_data = caravan_test) %&gt;% ppv(truth = Purchase, estimate = .pred_class, event_level = &quot;second&quot;) %&gt;% mutate(neighbors = 5) ) %&gt;% transmute(neighbors, .metric, .estimate = round(.estimate, 3)) %&gt;% pivot_wider(names_from = .metric, values_from = .estimate) %&gt;% gt() html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #dnfbunaqxq .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #dnfbunaqxq .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #dnfbunaqxq .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #dnfbunaqxq .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #dnfbunaqxq .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #dnfbunaqxq .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #dnfbunaqxq .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #dnfbunaqxq .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #dnfbunaqxq .gt_column_spanner_outer:first-child { padding-left: 0; } #dnfbunaqxq .gt_column_spanner_outer:last-child { padding-right: 0; } #dnfbunaqxq .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #dnfbunaqxq .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #dnfbunaqxq .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #dnfbunaqxq .gt_from_md > :first-child { margin-top: 0; } #dnfbunaqxq .gt_from_md > :last-child { margin-bottom: 0; } #dnfbunaqxq .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #dnfbunaqxq .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #dnfbunaqxq .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #dnfbunaqxq .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #dnfbunaqxq .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #dnfbunaqxq .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #dnfbunaqxq .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #dnfbunaqxq .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #dnfbunaqxq .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #dnfbunaqxq .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #dnfbunaqxq .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #dnfbunaqxq .gt_sourcenote { font-size: 90%; padding: 4px; } #dnfbunaqxq .gt_left { text-align: left; } #dnfbunaqxq .gt_center { text-align: center; } #dnfbunaqxq .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #dnfbunaqxq .gt_font_normal { font-weight: normal; } #dnfbunaqxq .gt_font_bold { font-weight: bold; } #dnfbunaqxq .gt_font_italic { font-style: italic; } #dnfbunaqxq .gt_super { font-size: 65%; } #dnfbunaqxq .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } neighbors ppv 1 0.118 3 0.120 5 0.120 Im not getting the improved PPV with increasing neighbors as in the text. Not sure why. Lastly, get the PPV from a logistic regression: glm_purchase_wf &lt;- workflow() %&gt;% add_recipe(caravan_rec) %&gt;% add_model(logistic_reg()) glm_purchase_fit &lt;- glm_purchase_wf %&gt;% fit(caravan_train) ## Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred PPV with a default 50% threshold: augment(glm_purchase_fit, new_data = caravan_test) %&gt;% ppv(truth = Purchase, estimate = .pred_class, event_level = &quot;second&quot;) ## # A tibble: 1 x 3 ## .metric .estimator .estimate ## &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 ppv binary 0 PPV with a 25% threshold: augment(glm_purchase_fit, new_data = caravan_test) %&gt;% mutate( .pred_class = ifelse(.pred_Yes &gt; 0.25, &quot;Yes&quot;, &quot;No&quot;) %&gt;% factor() ) %&gt;% ppv(truth = Purchase, estimate = .pred_class, event_level = &quot;second&quot;) ## # A tibble: 1 x 3 ## .metric .estimator .estimate ## &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 ppv binary 0.333 4.7.7 Poisson Regression We will again fit the bikeshare data with Poisson regression, but this time with tidymodels: library(poissonreg) glm_bikers_model &lt;- poisson_reg(mode = &quot;regression&quot;, engine = &quot;glm&quot;) The model specification for poisson_reg() is a model wrapper that comes from the poissonreg package. It is good practice to explicitly state that we are making dummy variables of the categorical predictors via step_dummy(): glm_bikers_rec &lt;- recipe(bikers ~ mnth + hr + workingday + temp + weathersit, data = bikeshare) %&gt;% step_dummy(all_nominal_predictors()) Define the workflow and fit the model: glm_bikers_wf &lt;- workflow() %&gt;% add_model(glm_bikers_model) %&gt;% add_recipe(glm_bikers_rec) glm_bikers_fit &lt;- glm_bikers_wf %&gt;% fit(bikeshare) Weve already re-created Figure 4.15 with this model, so wont repeat it here. Instead, here is a plot of predictions and, just for fun, it is stratified by the weather: augment(glm_bikers_fit, new_data = bikeshare) %&gt;% ggplot(aes(x = bikers, y = .pred)) + geom_point(color = td_colors$nice$opera_mauve, alpha = 0.4) + geom_abline(slope = 1, size = 1, lty = 2) + facet_wrap(~weathersit) + theme(legend.position = &quot;none&quot;) + add_facet_borders() 4.8 Exercises Applied 13. Predict returns with Weekly weekly &lt;- ISLR2::Weekly Data summaries. skimr::skim(weekly) Table 4.2: Data summary Name weekly Number of rows 1089 Number of columns 9 _______________________ Column type frequency: factor 1 numeric 8 ________________________ Group variables None Variable type: factor skim_variable n_missing complete_rate ordered n_unique top_counts Direction 0 1 FALSE 2 Up: 605, Dow: 484 Variable type: numeric skim_variable n_missing complete_rate mean sd p0 p25 p50 p75 p100 hist Year 0 1 2000.05 6.03 1990.00 1995.00 2000.00 2005.00 2010.00  Lag1 0 1 0.15 2.36 -18.20 -1.15 0.24 1.41 12.03  Lag2 0 1 0.15 2.36 -18.20 -1.15 0.24 1.41 12.03  Lag3 0 1 0.15 2.36 -18.20 -1.16 0.24 1.41 12.03  Lag4 0 1 0.15 2.36 -18.20 -1.16 0.24 1.41 12.03  Lag5 0 1 0.14 2.36 -18.20 -1.17 0.23 1.41 12.03  Volume 0 1 1.57 1.69 0.09 0.33 1.00 2.05 9.33  Today 0 1 0.15 2.36 -18.20 -1.15 0.24 1.41 12.03  weekly %&gt;% select(-Direction) %&gt;% corrr::correlate(method = &quot;pearson&quot;, quiet = TRUE) %&gt;% gt(rowname_col = &quot;term&quot;) %&gt;% gt::fmt_missing(columns = everything(), missing_text = &quot;&quot;) %&gt;% gt::data_color( columns = everything(), colors = scales::col_numeric( palette = td_pal(&quot;div5&quot;)(5), domain = c(-0.1, 0.9) ) ) %&gt;% gt::fmt_number(columns = everything(), decimals = 3) html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #xqxytsflgj .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #xqxytsflgj .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #xqxytsflgj .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #xqxytsflgj .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #xqxytsflgj .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #xqxytsflgj .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #xqxytsflgj .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #xqxytsflgj .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #xqxytsflgj .gt_column_spanner_outer:first-child { padding-left: 0; } #xqxytsflgj .gt_column_spanner_outer:last-child { padding-right: 0; } #xqxytsflgj .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #xqxytsflgj .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #xqxytsflgj .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #xqxytsflgj .gt_from_md > :first-child { margin-top: 0; } #xqxytsflgj .gt_from_md > :last-child { margin-bottom: 0; } #xqxytsflgj .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #xqxytsflgj .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #xqxytsflgj .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #xqxytsflgj .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #xqxytsflgj .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #xqxytsflgj .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #xqxytsflgj .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #xqxytsflgj .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #xqxytsflgj .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #xqxytsflgj .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #xqxytsflgj .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #xqxytsflgj .gt_sourcenote { font-size: 90%; padding: 4px; } #xqxytsflgj .gt_left { text-align: left; } #xqxytsflgj .gt_center { text-align: center; } #xqxytsflgj .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #xqxytsflgj .gt_font_normal { font-weight: normal; } #xqxytsflgj .gt_font_bold { font-weight: bold; } #xqxytsflgj .gt_font_italic { font-style: italic; } #xqxytsflgj .gt_super { font-size: 65%; } #xqxytsflgj .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } Year Lag1 Lag2 Lag3 Lag4 Lag5 Volume Today Year &minus;0.032 &minus;0.033 &minus;0.030 &minus;0.031 &minus;0.031 0.842 &minus;0.032 Lag1 &minus;0.032 &minus;0.075 0.059 &minus;0.071 &minus;0.008 &minus;0.065 &minus;0.075 Lag2 &minus;0.033 &minus;0.075 &minus;0.076 0.058 &minus;0.072 &minus;0.086 0.059 Lag3 &minus;0.030 0.059 &minus;0.076 &minus;0.075 0.061 &minus;0.069 &minus;0.071 Lag4 &minus;0.031 &minus;0.071 0.058 &minus;0.075 &minus;0.076 &minus;0.061 &minus;0.008 Lag5 &minus;0.031 &minus;0.008 &minus;0.072 0.061 &minus;0.076 &minus;0.059 0.011 Volume 0.842 &minus;0.065 &minus;0.086 &minus;0.069 &minus;0.061 &minus;0.059 &minus;0.033 Today &minus;0.032 &minus;0.075 0.059 &minus;0.071 &minus;0.008 0.011 &minus;0.033 As before with the smarket data set, there is increasing Volume with Year: weekly %&gt;% ggplot(aes(x = factor(Year), y = Volume)) + geom_jitter(width = 0.3, color = td_colors$nice$day9_yellow) + geom_boxplot(alpha = 0.3, outlier.shape = NA, width = 0.2) Logistic regression. Before fitting, I will reverse the order of the Direction factor so that the first level is Up because tidymodels treats the first level as positive. weekly &lt;- weekly %&gt;% mutate(Direction = fct_rev(Direction)) lr_weekly_fit &lt;- logistic_reg() %&gt;% fit(Direction ~ Year + Lag1 + Lag2 + Lag3 + Lag4 + Lag5 + Volume, data = weekly) tidy_custom(lr_weekly_fit) %&gt;% gt() html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #uskhvdnlih .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #uskhvdnlih .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #uskhvdnlih .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #uskhvdnlih .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #uskhvdnlih .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #uskhvdnlih .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #uskhvdnlih .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #uskhvdnlih .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #uskhvdnlih .gt_column_spanner_outer:first-child { padding-left: 0; } #uskhvdnlih .gt_column_spanner_outer:last-child { padding-right: 0; } #uskhvdnlih .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #uskhvdnlih .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #uskhvdnlih .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #uskhvdnlih .gt_from_md > :first-child { margin-top: 0; } #uskhvdnlih .gt_from_md > :last-child { margin-bottom: 0; } #uskhvdnlih .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #uskhvdnlih .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #uskhvdnlih .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #uskhvdnlih .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #uskhvdnlih .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #uskhvdnlih .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #uskhvdnlih .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #uskhvdnlih .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #uskhvdnlih .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #uskhvdnlih .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #uskhvdnlih .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #uskhvdnlih .gt_sourcenote { font-size: 90%; padding: 4px; } #uskhvdnlih .gt_left { text-align: left; } #uskhvdnlih .gt_center { text-align: center; } #uskhvdnlih .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #uskhvdnlih .gt_font_normal { font-weight: normal; } #uskhvdnlih .gt_font_bold { font-weight: bold; } #uskhvdnlih .gt_font_italic { font-style: italic; } #uskhvdnlih .gt_super { font-size: 65%; } #uskhvdnlih .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } term coefficient std.error z-statistic p-value (Intercept) -17.2258 37.8905 -0.45 0.649 Year 0.0085 0.0190 0.45 0.654 Lag1 0.0407 0.0264 1.54 0.124 Lag2 -0.0594 0.0270 -2.20 0.028 Lag3 0.0155 0.0267 0.58 0.562 Lag4 0.0273 0.0265 1.03 0.302 Lag5 0.0140 0.0264 0.53 0.595 Volume -0.0033 0.0688 -0.05 0.962 Only Lag2 was a significant predictor. Confusion matrix. lr_weekly_fit_conf_mat &lt;- augment(lr_weekly_fit, weekly) %&gt;% conf_mat(truth = Direction, estimate = .pred_class) lr_weekly_fit_conf_mat ## Truth ## Prediction Up Down ## Up 558 428 ## Down 47 56 The model predicts many more Direction = Up than Down. The overall accuracy was slightly better than guessing: 56%. The sensitivity, TP / (TP + FP) was very good: 92%. The specificity, TN / (TN + FN) was very poor: 12%. Logistic regression with Lag2 as the sole predictor. Split into training and testing: weekly_train &lt;- weekly %&gt;% filter(Year &lt;= 2008) weekly_test &lt;- weekly %&gt;% filter(Year &gt; 2008) lr_weekly_fit_lag2 &lt;- logistic_reg() %&gt;% fit(Direction ~ Lag2, data = weekly_train) lr_weekly_fit_lag2_conf_mat &lt;- augment(lr_weekly_fit_lag2, weekly_test) %&gt;% conf_mat(truth = Direction, estimate = .pred_class) lr_weekly_fit_lag2_conf_mat ## Truth ## Prediction Up Down ## Up 56 34 ## Down 5 9 The model still predicts many more Direction = Up than Down. The overall accuracy: 62%. The sensitivity: 92%. The specificity: 21%. (e-h) Repeat using LDA, QDA, KNN, naive Bayes. model_fits &lt;- list( &quot;logistic&quot; = lr_weekly_fit_lag2, &quot;LDA&quot; = discrim_linear() %&gt;% fit(Direction ~ Lag2, data = weekly_train), &quot;QDA&quot; = discrim_quad() %&gt;% fit(Direction ~ Lag2, data = weekly_train), &quot;KNN1&quot; = nearest_neighbor(mode = &quot;classification&quot;, neighbors = 1) %&gt;% fit(Direction ~ Lag2, data = weekly_train), &quot;NB&quot; = naive_Bayes() %&gt;% fit(Direction ~ Lag2, data = weekly_train) ) weekly_metrics &lt;- metric_set(accuracy, sens, spec, ppv) imap_dfr( model_fits, ~augment(.x, new_data = weekly_test) %&gt;% weekly_metrics(truth = Direction, estimate = .pred_class), .id = &quot;model&quot; ) %&gt;% select(model, .metric, .estimate) %&gt;% pivot_wider(names_from = .metric, values_from = .estimate) %&gt;% gt(rowname_col = &quot;model&quot;) %&gt;% fmt_percent(columns = -model) html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #zjiisepasw .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #zjiisepasw .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #zjiisepasw .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #zjiisepasw .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #zjiisepasw .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #zjiisepasw .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #zjiisepasw .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #zjiisepasw .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #zjiisepasw .gt_column_spanner_outer:first-child { padding-left: 0; } #zjiisepasw .gt_column_spanner_outer:last-child { padding-right: 0; } #zjiisepasw .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #zjiisepasw .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #zjiisepasw .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #zjiisepasw .gt_from_md > :first-child { margin-top: 0; } #zjiisepasw .gt_from_md > :last-child { margin-bottom: 0; } #zjiisepasw .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #zjiisepasw .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #zjiisepasw .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #zjiisepasw .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #zjiisepasw .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #zjiisepasw .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #zjiisepasw .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #zjiisepasw .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #zjiisepasw .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #zjiisepasw .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #zjiisepasw .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #zjiisepasw .gt_sourcenote { font-size: 90%; padding: 4px; } #zjiisepasw .gt_left { text-align: left; } #zjiisepasw .gt_center { text-align: center; } #zjiisepasw .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #zjiisepasw .gt_font_normal { font-weight: normal; } #zjiisepasw .gt_font_bold { font-weight: bold; } #zjiisepasw .gt_font_italic { font-style: italic; } #zjiisepasw .gt_super { font-size: 65%; } #zjiisepasw .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } accuracy sens spec ppv logistic 62.50&percnt; 91.80&percnt; 20.93&percnt; 62.22&percnt; LDA 62.50&percnt; 91.80&percnt; 20.93&percnt; 62.22&percnt; QDA 58.65&percnt; 100.00&percnt; 0.00&percnt; 58.65&percnt; KNN1 50.00&percnt; 49.18&percnt; 51.16&percnt; 58.82&percnt; NB 60.58&percnt; 91.80&percnt; 16.28&percnt; 60.87&percnt; Which method was best? LDA and logistic regression performed exactly the same, and did the best. QDA predicted everything as Up. KNN with 1 neighbor was a coin flip simulator. Naive Bayes did slightly worse than logistic and LDA. 14. Predict gas mileage with Auto Create a binary outcome mpg01. auto &lt;- ISLR2::Auto %&gt;% mutate(mpg01 = ifelse(mpg &gt; median(mpg), 1, 0), mpg01 = factor(mpg01)) glimpse(auto) ## Rows: 392 ## Columns: 10 ## $ mpg &lt;dbl&gt; 18, 15, 18, 16, 17, 15, 14, 14, 14, 15, 15, 14, 15, 14, 2~ ## $ cylinders &lt;int&gt; 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 4, 6, 6, 6, 4, ~ ## $ displacement &lt;dbl&gt; 307, 350, 318, 304, 302, 429, 454, 440, 455, 390, 383, 34~ ## $ horsepower &lt;int&gt; 130, 165, 150, 150, 140, 198, 220, 215, 225, 190, 170, 16~ ## $ weight &lt;int&gt; 3504, 3693, 3436, 3433, 3449, 4341, 4354, 4312, 4425, 385~ ## $ acceleration &lt;dbl&gt; 12.0, 11.5, 11.0, 12.0, 10.5, 10.0, 9.0, 8.5, 10.0, 8.5, ~ ## $ year &lt;int&gt; 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 7~ ## $ origin &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 3, ~ ## $ name &lt;fct&gt; chevrolet chevelle malibu, buick skylark 320, plymouth sa~ ## $ mpg01 &lt;fct&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, ~ Note that origin is a numeric coding for 1. American, 2. European, and 3. Japanese, and so should be a factor: auto &lt;- auto %&gt;% mutate(origin = factor(origin, levels = 1:3, labels = c(&quot;American&quot;, &quot;European&quot;, &quot;Japanese&quot;))) Explore the data. auto %&gt;% select(-name, -origin, -mpg) %&gt;% pivot_longer(-mpg01, names_to = &quot;var&quot;, values_to = &quot;val&quot;) %&gt;% ggplot(aes(y = mpg01, x = val)) + geom_boxplot(aes(fill = factor(mpg01))) + facet_wrap(~var, scales = &quot;free_x&quot;) + theme(legend.position = &quot;none&quot;) + add_facet_borders() auto %&gt;% count(origin, mpg01) %&gt;% ggplot(aes(y = origin, x = mpg01)) + geom_tile(aes(fill = n)) + geom_text(aes(label = n), color = &quot;white&quot;) + scale_x_discrete(expand = c(0, 0)) + scale_y_discrete(expand = c(0, 0)) + theme(legend.position = &quot;none&quot;) All of the variables here look useful for predicting mpg01, but cylinders, displacement, origin, and weight in particular. Look at the correlation between variables: auto %&gt;% select(-name, -mpg01, -origin) %&gt;% corrr::correlate(method = &quot;pearson&quot;, quiet = TRUE) %&gt;% gt(rowname_col = &quot;term&quot;) %&gt;% gt::fmt_missing(columns = everything(), missing_text = &quot;&quot;) %&gt;% gt::data_color( columns = everything(), colors = scales::col_numeric( palette = td_pal(&quot;div5&quot;)(5), domain = c(-1, 1) ) ) %&gt;% gt::fmt_number(columns = everything(), decimals = 2) html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #tvalyfqizi .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #tvalyfqizi .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #tvalyfqizi .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #tvalyfqizi .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #tvalyfqizi .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #tvalyfqizi .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #tvalyfqizi .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #tvalyfqizi .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #tvalyfqizi .gt_column_spanner_outer:first-child { padding-left: 0; } #tvalyfqizi .gt_column_spanner_outer:last-child { padding-right: 0; } #tvalyfqizi .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #tvalyfqizi .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #tvalyfqizi .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #tvalyfqizi .gt_from_md > :first-child { margin-top: 0; } #tvalyfqizi .gt_from_md > :last-child { margin-bottom: 0; } #tvalyfqizi .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #tvalyfqizi .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #tvalyfqizi .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #tvalyfqizi .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #tvalyfqizi .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #tvalyfqizi .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #tvalyfqizi .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #tvalyfqizi .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #tvalyfqizi .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #tvalyfqizi .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #tvalyfqizi .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #tvalyfqizi .gt_sourcenote { font-size: 90%; padding: 4px; } #tvalyfqizi .gt_left { text-align: left; } #tvalyfqizi .gt_center { text-align: center; } #tvalyfqizi .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #tvalyfqizi .gt_font_normal { font-weight: normal; } #tvalyfqizi .gt_font_bold { font-weight: bold; } #tvalyfqizi .gt_font_italic { font-style: italic; } #tvalyfqizi .gt_super { font-size: 65%; } #tvalyfqizi .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } mpg cylinders displacement horsepower weight acceleration year mpg &minus;0.78 &minus;0.81 &minus;0.78 &minus;0.83 0.42 0.58 cylinders &minus;0.78 0.95 0.84 0.90 &minus;0.50 &minus;0.35 displacement &minus;0.81 0.95 0.90 0.93 &minus;0.54 &minus;0.37 horsepower &minus;0.78 0.84 0.90 0.86 &minus;0.69 &minus;0.42 weight &minus;0.83 0.90 0.93 0.86 &minus;0.42 &minus;0.31 acceleration 0.42 &minus;0.50 &minus;0.54 &minus;0.69 &minus;0.42 0.29 year 0.58 &minus;0.35 &minus;0.37 &minus;0.42 &minus;0.31 0.29 Lots of inter-correlation. Split the data into a training set and test set. Use a 3:1 split: set.seed(49) auto_split &lt;- initial_split(auto, prop = 3 / 4) auto_train &lt;- training(auto_split) auto_test &lt;- testing(auto_split) Normally, I would set the strata argument to the output variable mpg01, but by construction (separated by the median) the data is split in half. auto_train %&gt;% count(mpg01) ## mpg01 n ## 1 0 148 ## 2 1 146 auto_test %&gt;% count(mpg01) ## mpg01 n ## 1 0 48 ## 2 1 50 (d-h) Perform LDA, QDA, logistic regression, naive Bayes, and KNN. Define the recipe, and add it to a generic workflow: auto_recipe &lt;- recipe( mpg01 ~ cylinders + displacement + horsepower + weight + acceleration + year + origin, data = auto_train ) %&gt;% # Normalize numerical predictors to work with KNN step_normalize(all_numeric_predictors()) %&gt;% step_dummy(origin) auto_workflow &lt;- workflow() %&gt;% add_recipe(auto_recipe) Fit and summarize metrics: model_fits &lt;- list( &quot;LDA&quot; = auto_workflow %&gt;% add_model(discrim_linear()) %&gt;% fit(data = auto_train), &quot;QDA&quot; = auto_workflow %&gt;% add_model(discrim_quad()) %&gt;% fit(data = auto_train), &quot;logistic&quot; = auto_workflow %&gt;% add_model(logistic_reg()) %&gt;% fit(data = auto_train), &quot;NB&quot; = auto_workflow %&gt;% add_model(naive_Bayes()) %&gt;% fit(data = auto_train), &quot;KNN1&quot; = auto_workflow %&gt;% add_model(nearest_neighbor(mode = &quot;classification&quot;, neighbors = 1)) %&gt;% fit(data = auto_train), &quot;KNN3&quot; = auto_workflow %&gt;% add_model(nearest_neighbor(mode = &quot;classification&quot;, neighbors = 3)) %&gt;% fit(data = auto_train), &quot;KNN5&quot; = auto_workflow %&gt;% add_model(nearest_neighbor(mode = &quot;classification&quot;, neighbors = 5)) %&gt;% fit(data = auto_train), &quot;KNN7&quot; = auto_workflow %&gt;% add_model(nearest_neighbor(mode = &quot;classification&quot;, neighbors = 7)) %&gt;% fit(data = auto_train) ) auto_metrics &lt;- metric_set(accuracy, sens, spec, ppv) imap_dfr( model_fits, ~augment(.x, new_data = auto_test) %&gt;% auto_metrics(truth = mpg01, estimate = .pred_class), .id = &quot;model&quot; ) %&gt;% select(model, .metric, .estimate) %&gt;% pivot_wider(names_from = .metric, values_from = .estimate) %&gt;% arrange(desc(accuracy)) %&gt;% gt(rowname_col = &quot;model&quot;) %&gt;% fmt_percent(columns = -model, decimals = 1) html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #bljlvhvupr .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #bljlvhvupr .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #bljlvhvupr .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #bljlvhvupr .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #bljlvhvupr .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #bljlvhvupr .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #bljlvhvupr .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #bljlvhvupr .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #bljlvhvupr .gt_column_spanner_outer:first-child { padding-left: 0; } #bljlvhvupr .gt_column_spanner_outer:last-child { padding-right: 0; } #bljlvhvupr .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #bljlvhvupr .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #bljlvhvupr .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #bljlvhvupr .gt_from_md > :first-child { margin-top: 0; } #bljlvhvupr .gt_from_md > :last-child { margin-bottom: 0; } #bljlvhvupr .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #bljlvhvupr .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #bljlvhvupr .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #bljlvhvupr .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #bljlvhvupr .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #bljlvhvupr .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #bljlvhvupr .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #bljlvhvupr .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #bljlvhvupr .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #bljlvhvupr .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #bljlvhvupr .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #bljlvhvupr .gt_sourcenote { font-size: 90%; padding: 4px; } #bljlvhvupr .gt_left { text-align: left; } #bljlvhvupr .gt_center { text-align: center; } #bljlvhvupr .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #bljlvhvupr .gt_font_normal { font-weight: normal; } #bljlvhvupr .gt_font_bold { font-weight: bold; } #bljlvhvupr .gt_font_italic { font-style: italic; } #bljlvhvupr .gt_super { font-size: 65%; } #bljlvhvupr .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } accuracy sens spec ppv LDA 90.8&percnt; 87.5&percnt; 94.0&percnt; 93.3&percnt; logistic 90.8&percnt; 91.7&percnt; 90.0&percnt; 89.8&percnt; QDA 89.8&percnt; 85.4&percnt; 94.0&percnt; 93.2&percnt; NB 89.8&percnt; 87.5&percnt; 92.0&percnt; 91.3&percnt; KNN1 89.8&percnt; 93.8&percnt; 86.0&percnt; 86.5&percnt; KNN3 89.8&percnt; 93.8&percnt; 86.0&percnt; 86.5&percnt; KNN5 89.8&percnt; 91.7&percnt; 88.0&percnt; 88.0&percnt; KNN7 89.8&percnt; 91.7&percnt; 88.0&percnt; 88.0&percnt; All models did well, but LDA and logistic regression were the best. There wasnt any difference in KNN accuracy for \\(K\\) = 1, 3, 5, and 7. 16. Predict crime rate with Boston boston &lt;- ISLR2::Boston %&gt;% mutate( crim01 = ifelse(crim &gt; median(crim), 1, 0), crim01 = factor(crim01), # Convert the binary chas variable to TRUE/FALSE chas = chas == 1 ) glimpse(boston) ## Rows: 506 ## Columns: 14 ## $ crim &lt;dbl&gt; 0.00632, 0.02731, 0.02729, 0.03237, 0.06905, 0.02985, 0.08829,~ ## $ zn &lt;dbl&gt; 18.0, 0.0, 0.0, 0.0, 0.0, 0.0, 12.5, 12.5, 12.5, 12.5, 12.5, 1~ ## $ indus &lt;dbl&gt; 2.31, 7.07, 7.07, 2.18, 2.18, 2.18, 7.87, 7.87, 7.87, 7.87, 7.~ ## $ chas &lt;lgl&gt; FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE,~ ## $ nox &lt;dbl&gt; 0.538, 0.469, 0.469, 0.458, 0.458, 0.458, 0.524, 0.524, 0.524,~ ## $ rm &lt;dbl&gt; 6.575, 6.421, 7.185, 6.998, 7.147, 6.430, 6.012, 6.172, 5.631,~ ## $ age &lt;dbl&gt; 65.2, 78.9, 61.1, 45.8, 54.2, 58.7, 66.6, 96.1, 100.0, 85.9, 9~ ## $ dis &lt;dbl&gt; 4.0900, 4.9671, 4.9671, 6.0622, 6.0622, 6.0622, 5.5605, 5.9505~ ## $ rad &lt;int&gt; 1, 2, 2, 3, 3, 3, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4,~ ## $ tax &lt;dbl&gt; 296, 242, 242, 222, 222, 222, 311, 311, 311, 311, 311, 311, 31~ ## $ ptratio &lt;dbl&gt; 15.3, 17.8, 17.8, 18.7, 18.7, 18.7, 15.2, 15.2, 15.2, 15.2, 15~ ## $ lstat &lt;dbl&gt; 4.98, 9.14, 4.03, 2.94, 5.33, 5.21, 12.43, 19.15, 29.93, 17.10~ ## $ medv &lt;dbl&gt; 24.0, 21.6, 34.7, 33.4, 36.2, 28.7, 22.9, 27.1, 16.5, 18.9, 15~ ## $ crim01 &lt;fct&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1,~ boston %&gt;% select(-chas) %&gt;% pivot_longer(-crim01, names_to = &quot;var&quot;, values_to = &quot;val&quot;) %&gt;% ggplot(aes(y = crim01, x = val)) + geom_boxplot(aes(fill = factor(crim01))) + facet_wrap(~var, scales = &quot;free_x&quot;) + theme(legend.position = &quot;none&quot;) + add_facet_borders() boston %&gt;% count(chas, crim01) %&gt;% ggplot(aes(y = chas, x = crim01)) + geom_tile(aes(fill = n)) + geom_text(aes(label = n), color = &quot;white&quot;) + scale_x_discrete(expand = c(0, 0)) + scale_y_discrete(expand = c(0, 0)) + theme(legend.position = &quot;none&quot;) The chas and rm (average number of rooms per dwelling) variables look the least useful of these predictors. Split the data: set.seed(98) # By default, splits 3:1 boston_split &lt;- initial_split(boston) boston_train &lt;- training(boston_split) boston_test &lt;- testing(boston_split) Fit and summarize metrics for all the models and a few different predictor sets: boston_models &lt;- list( &quot;LDA&quot; = discrim_linear(), &quot;QDA&quot; = discrim_quad(), &quot;logistic&quot; = logistic_reg(), &quot;NB&quot; = naive_Bayes(), &quot;KNN1&quot; = nearest_neighbor(mode = &quot;classification&quot;, neighbors = 1), &quot;KNN3&quot; = nearest_neighbor(mode = &quot;classification&quot;, neighbors = 3), &quot;KNN5&quot; = nearest_neighbor(mode = &quot;classification&quot;, neighbors = 5), &quot;KNN7&quot; = nearest_neighbor(mode = &quot;classification&quot;, neighbors = 7) ) boston_recs &lt;- list( &quot;rec1&quot; = recipe( crim01 ~ age + dis + indus + lstat + medv + nox + ptratio + rad + tax + zn, data = boston_train ) %&gt;% step_normalize(all_numeric_predictors()), # Drop medv and lstat &quot;rec2&quot; = recipe( crim01 ~ age + dis + indus + nox + ptratio + rad + tax + zn, data = boston_train ) %&gt;% step_normalize(all_numeric_predictors()), # Drop ptratio and tax &quot;rec3&quot; = recipe( crim01 ~ age + dis + indus + nox + rad + zn, data = boston_train ) %&gt;% step_normalize(all_numeric_predictors()) ) boston_fits &lt;- map( boston_models, function(model) { map( boston_recs, ~workflow() %&gt;% add_model(model) %&gt;% add_recipe(.x) %&gt;% fit(data = boston_train) ) } ) boston_metrics &lt;- metric_set(accuracy, sens, spec, ppv) imap_dfr( boston_fits, function(fit, y) { imap_dfr( fit, ~augment(.x, new_data = boston_test) %&gt;% boston_metrics(truth = crim01, estimate = .pred_class), .id = &quot;recipe&quot; ) }, .id = &quot;model&quot; ) %&gt;% select(model, recipe, .metric, .estimate) %&gt;% pivot_wider(names_from = .metric, values_from = .estimate) %&gt;% arrange(recipe, desc(accuracy)) %&gt;% group_by(recipe) %&gt;% gt(rowname_col = &quot;model&quot;) %&gt;% fmt_percent(columns = -model, decimals = 1) html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #wbsyrjdeoz .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #wbsyrjdeoz .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #wbsyrjdeoz .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #wbsyrjdeoz .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #wbsyrjdeoz .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #wbsyrjdeoz .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #wbsyrjdeoz .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #wbsyrjdeoz .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #wbsyrjdeoz .gt_column_spanner_outer:first-child { padding-left: 0; } #wbsyrjdeoz .gt_column_spanner_outer:last-child { padding-right: 0; } #wbsyrjdeoz .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #wbsyrjdeoz .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #wbsyrjdeoz .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #wbsyrjdeoz .gt_from_md > :first-child { margin-top: 0; } #wbsyrjdeoz .gt_from_md > :last-child { margin-bottom: 0; } #wbsyrjdeoz .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #wbsyrjdeoz .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #wbsyrjdeoz .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #wbsyrjdeoz .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #wbsyrjdeoz .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #wbsyrjdeoz .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #wbsyrjdeoz .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #wbsyrjdeoz .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #wbsyrjdeoz .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #wbsyrjdeoz .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #wbsyrjdeoz .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #wbsyrjdeoz .gt_sourcenote { font-size: 90%; padding: 4px; } #wbsyrjdeoz .gt_left { text-align: left; } #wbsyrjdeoz .gt_center { text-align: center; } #wbsyrjdeoz .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #wbsyrjdeoz .gt_font_normal { font-weight: normal; } #wbsyrjdeoz .gt_font_bold { font-weight: bold; } #wbsyrjdeoz .gt_font_italic { font-style: italic; } #wbsyrjdeoz .gt_super { font-size: 65%; } #wbsyrjdeoz .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } accuracy sens spec ppv rec1 QDA 95.3&percnt; 94.6&percnt; 95.8&percnt; 94.6&percnt; KNN1 94.5&percnt; 98.2&percnt; 91.5&percnt; 90.2&percnt; KNN3 94.5&percnt; 98.2&percnt; 91.5&percnt; 90.2&percnt; KNN5 94.5&percnt; 98.2&percnt; 91.5&percnt; 90.2&percnt; KNN7 94.5&percnt; 98.2&percnt; 91.5&percnt; 90.2&percnt; logistic 92.1&percnt; 98.2&percnt; 87.3&percnt; 85.9&percnt; NB 85.0&percnt; 80.4&percnt; 88.7&percnt; 84.9&percnt; LDA 83.5&percnt; 91.1&percnt; 77.5&percnt; 76.1&percnt; rec2 KNN5 96.1&percnt; 100.0&percnt; 93.0&percnt; 91.8&percnt; KNN1 95.3&percnt; 98.2&percnt; 93.0&percnt; 91.7&percnt; KNN3 95.3&percnt; 98.2&percnt; 93.0&percnt; 91.7&percnt; KNN7 95.3&percnt; 98.2&percnt; 93.0&percnt; 91.7&percnt; QDA 94.5&percnt; 94.6&percnt; 94.4&percnt; 93.0&percnt; logistic 89.0&percnt; 87.5&percnt; 90.1&percnt; 87.5&percnt; LDA 86.6&percnt; 96.4&percnt; 78.9&percnt; 78.3&percnt; NB 84.3&percnt; 80.4&percnt; 87.3&percnt; 83.3&percnt; rec3 KNN5 95.3&percnt; 98.2&percnt; 93.0&percnt; 91.7&percnt; KNN1 94.5&percnt; 98.2&percnt; 91.5&percnt; 90.2&percnt; KNN3 94.5&percnt; 98.2&percnt; 91.5&percnt; 90.2&percnt; KNN7 94.5&percnt; 96.4&percnt; 93.0&percnt; 91.5&percnt; logistic 89.0&percnt; 87.5&percnt; 90.1&percnt; 87.5&percnt; QDA 86.6&percnt; 91.1&percnt; 83.1&percnt; 81.0&percnt; NB 86.6&percnt; 76.8&percnt; 94.4&percnt; 91.5&percnt; LDA 84.3&percnt; 91.1&percnt; 78.9&percnt; 77.3&percnt; In general, performance was best for rec2 with these variables: boston_recs$rec2$term_info ## # A tibble: 9 x 4 ## variable type role source ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 age numeric predictor original ## 2 dis numeric predictor original ## 3 indus numeric predictor original ## 4 nox numeric predictor original ## 5 ptratio numeric predictor original ## 6 rad numeric predictor original ## 7 tax numeric predictor original ## 8 zn numeric predictor original ## 9 crim01 nominal outcome original And the models that performed best were KNN and QDA. Reproducibility Reproducibility receipt Sys.time() ## [1] &quot;2022-02-02 00:19:07 AST&quot; if (&quot;git2r&quot; %in% installed.packages()) { if (git2r::in_repository()) { git2r::repository() } } ## Local: main C:/Users/tdunn/Documents/learning/islr-tidy ## Remote: main @ origin (https://github.com/taylordunn/islr-tidy) ## Head: [9001002] 2022-02-02: Build up to exercises sessioninfo::session_info() ## - Session info --------------------------------------------------------------- ## setting value ## version R version 4.1.2 (2021-11-01) ## os Windows 10 x64 ## system x86_64, mingw32 ## ui RTerm ## language (EN) ## collate English_Canada.1252 ## ctype English_Canada.1252 ## tz America/Curacao ## date 2022-02-02 ## ## - Packages ------------------------------------------------------------------- ## package * version date lib source ## abind 1.4-5 2016-07-21 [1] CRAN (R 4.1.1) ## assertthat 0.2.1 2019-03-21 [1] CRAN (R 4.1.0) ## backports 1.2.1 2020-12-09 [1] CRAN (R 4.1.0) ## base64enc 0.1-3 2015-07-28 [1] CRAN (R 4.1.0) ## bayestestR 0.10.5 2021-07-26 [1] CRAN (R 4.1.0) ## bit 4.0.4 2020-08-04 [1] CRAN (R 4.1.2) ## bit64 4.0.5 2020-08-30 [1] CRAN (R 4.1.2) ## bookdown 0.24 2021-09-02 [1] CRAN (R 4.1.1) ## broom * 0.7.10 2021-10-31 [1] CRAN (R 4.1.2) ## bslib 0.2.5.1 2021-05-18 [1] CRAN (R 4.1.0) ## cachem 1.0.6 2021-08-19 [1] CRAN (R 4.1.1) ## car 3.0-12 2021-11-06 [1] CRAN (R 4.1.2) ## carData 3.0-4 2020-05-22 [1] CRAN (R 4.1.1) ## cellranger 1.1.0 2016-07-27 [1] CRAN (R 4.1.0) ## checkmate 2.0.0 2020-02-06 [1] CRAN (R 4.1.0) ## class 7.3-19 2021-05-03 [2] CRAN (R 4.1.2) ## cli 3.1.1 2022-01-20 [1] CRAN (R 4.1.2) ## coda 0.19-4 2020-09-30 [1] CRAN (R 4.1.0) ## codetools 0.2-18 2020-11-04 [2] CRAN (R 4.1.2) ## colorspace 2.0-2 2021-06-24 [1] CRAN (R 4.1.0) ## combinat 0.0-8 2012-10-29 [1] CRAN (R 4.1.1) ## corrr * 0.4.3 2020-11-24 [1] CRAN (R 4.1.0) ## crayon 1.4.2 2021-10-29 [1] CRAN (R 4.1.1) ## datawizard 0.1.0 2021-06-18 [1] CRAN (R 4.1.0) ## DBI 1.1.2 2021-12-20 [1] CRAN (R 4.1.2) ## dbplyr 2.1.1 2021-04-06 [1] CRAN (R 4.1.0) ## DEoptimR 1.0-9 2021-05-24 [1] CRAN (R 4.1.0) ## dials * 0.0.10 2021-09-10 [1] CRAN (R 4.1.1) ## DiceDesign 1.9 2021-02-13 [1] CRAN (R 4.1.0) ## digest 0.6.29 2021-12-01 [1] CRAN (R 4.1.2) ## discrim * 0.1.3 2021-07-21 [1] CRAN (R 4.1.2) ## distill 1.3 2021-10-13 [1] CRAN (R 4.1.2) ## distributional 0.2.2 2021-02-02 [1] CRAN (R 4.1.2) ## downlit 0.4.0 2021-10-29 [1] CRAN (R 4.1.1) ## dplyr * 1.0.7 2021-06-18 [1] CRAN (R 4.1.0) ## dunnr * 0.2.5 2022-01-15 [1] Github (taylordunn/dunnr@c83b30e) ## effectsize 0.4.5 2021-05-25 [1] CRAN (R 4.1.0) ## ellipsis 0.3.2 2021-04-29 [1] CRAN (R 4.1.0) ## emmeans 1.7.0 2021-09-29 [1] CRAN (R 4.1.2) ## equatiomatic 0.2.0 2021-01-30 [1] CRAN (R 4.1.0) ## estimability 1.3 2018-02-11 [1] CRAN (R 4.1.1) ## evaluate 0.14 2019-05-28 [1] CRAN (R 4.1.0) ## extrafont 0.17 2014-12-08 [1] CRAN (R 4.1.0) ## extrafontdb 1.0 2012-06-11 [1] CRAN (R 4.1.0) ## fansi 1.0.2 2022-01-14 [1] CRAN (R 4.1.2) ## farver 2.1.0 2021-02-28 [1] CRAN (R 4.1.0) ## fastmap 1.1.0 2021-01-25 [1] CRAN (R 4.1.0) ## forcats * 0.5.1 2021-01-27 [1] CRAN (R 4.1.0) ## foreach 1.5.1 2020-10-15 [1] CRAN (R 4.1.0) ## fs 1.5.2 2021-12-08 [1] CRAN (R 4.1.2) ## furrr 0.2.3 2021-06-25 [1] CRAN (R 4.1.2) ## future 1.23.0 2021-10-31 [1] CRAN (R 4.1.2) ## generics 0.1.1 2021-10-25 [1] CRAN (R 4.1.1) ## GGally 2.1.2 2021-06-21 [1] CRAN (R 4.1.0) ## ggdist * 3.0.0 2021-07-19 [1] CRAN (R 4.1.2) ## ggplot2 * 3.3.5 2021-06-25 [1] CRAN (R 4.1.0) ## ggrepel 0.9.1 2021-01-15 [1] CRAN (R 4.1.0) ## ggridges 0.5.3 2021-01-08 [1] CRAN (R 4.1.0) ## git2r 0.28.0 2021-01-10 [1] CRAN (R 4.1.0) ## globals 0.14.0 2020-11-22 [1] CRAN (R 4.1.0) ## glue 1.6.0 2021-12-17 [1] CRAN (R 4.1.2) ## gower 0.2.2 2020-06-23 [1] CRAN (R 4.1.0) ## GPfit 1.0-8 2019-02-08 [1] CRAN (R 4.1.0) ## gridExtra 2.3 2017-09-09 [1] CRAN (R 4.1.0) ## gt * 0.3.1 2021-08-07 [1] CRAN (R 4.1.2) ## gtable 0.3.0 2019-03-25 [1] CRAN (R 4.1.0) ## hardhat 0.1.6 2021-07-14 [1] CRAN (R 4.1.0) ## haven 2.4.1 2021-04-23 [1] CRAN (R 4.1.0) ## here * 1.0.1 2020-12-13 [1] CRAN (R 4.1.0) ## highr 0.9 2021-04-16 [1] CRAN (R 4.1.0) ## hms 1.1.1 2021-09-26 [1] CRAN (R 4.1.2) ## htmltools 0.5.2 2021-08-25 [1] CRAN (R 4.1.1) ## httpuv 1.6.5 2022-01-05 [1] CRAN (R 4.1.2) ## httr 1.4.2 2020-07-20 [1] CRAN (R 4.1.0) ## igraph 1.2.6 2020-10-06 [1] CRAN (R 4.1.0) ## infer * 1.0.0 2021-08-13 [1] CRAN (R 4.1.1) ## insight 0.14.2 2021-06-22 [1] CRAN (R 4.1.0) ## ipred 0.9-12 2021-09-15 [1] CRAN (R 4.1.1) ## ISLR2 * 1.3-1 2022-01-10 [1] CRAN (R 4.1.2) ## iterators 1.0.13 2020-10-15 [1] CRAN (R 4.1.0) ## jquerylib 0.1.4 2021-04-26 [1] CRAN (R 4.1.0) ## jsonlite 1.7.3 2022-01-17 [1] CRAN (R 4.1.2) ## kknn 1.3.1 2016-03-26 [1] CRAN (R 4.1.2) ## klaR 0.6-15 2020-02-19 [1] CRAN (R 4.1.2) ## knitr 1.37 2021-12-16 [1] CRAN (R 4.1.2) ## labeling 0.4.2 2020-10-20 [1] CRAN (R 4.1.0) ## labelled 2.8.0 2021-03-08 [1] CRAN (R 4.1.0) ## later 1.3.0 2021-08-18 [1] CRAN (R 4.1.2) ## lattice 0.20-45 2021-09-22 [2] CRAN (R 4.1.2) ## lava 1.6.9 2021-03-11 [1] CRAN (R 4.1.0) ## lhs 1.1.1 2020-10-05 [1] CRAN (R 4.1.0) ## lifecycle 1.0.1 2021-09-24 [1] CRAN (R 4.1.1) ## listenv 0.8.0 2019-12-05 [1] CRAN (R 4.1.0) ## lubridate 1.8.0 2021-10-07 [1] CRAN (R 4.1.1) ## magrittr 2.0.1 2020-11-17 [1] CRAN (R 4.1.0) ## MASS 7.3-54 2021-05-03 [2] CRAN (R 4.1.2) ## Matrix 1.3-4 2021-06-01 [2] CRAN (R 4.1.2) ## memoise 2.0.1 2021-11-26 [1] CRAN (R 4.1.2) ## mgcv 1.8-38 2021-10-06 [2] CRAN (R 4.1.2) ## mime 0.12 2021-09-28 [1] CRAN (R 4.1.1) ## miniUI 0.1.1.1 2018-05-18 [1] CRAN (R 4.1.1) ## modeldata * 0.1.1 2021-07-14 [1] CRAN (R 4.1.0) ## modelr 0.1.8 2020-05-19 [1] CRAN (R 4.1.0) ## munsell 0.5.0 2018-06-12 [1] CRAN (R 4.1.0) ## mvtnorm 1.1-3 2021-10-08 [1] CRAN (R 4.1.1) ## nlme 3.1-153 2021-09-07 [2] CRAN (R 4.1.2) ## nnet 7.3-16 2021-05-03 [2] CRAN (R 4.1.2) ## parallelly 1.27.0 2021-07-19 [1] CRAN (R 4.1.0) ## parameters 0.14.0 2021-05-29 [1] CRAN (R 4.1.0) ## parsnip * 0.1.7 2021-07-21 [1] CRAN (R 4.1.0) ## patchwork * 1.1.1 2020-12-17 [1] CRAN (R 4.1.0) ## performance 0.7.3 2021-07-21 [1] CRAN (R 4.1.1) ## pillar 1.6.4 2021-10-18 [1] CRAN (R 4.1.1) ## pkgconfig 2.0.3 2019-09-22 [1] CRAN (R 4.1.0) ## plyr 1.8.6 2020-03-03 [1] CRAN (R 4.1.0) ## poissonreg * 0.1.1 2021-08-07 [1] CRAN (R 4.1.2) ## prettyunits 1.1.1 2020-01-24 [1] CRAN (R 4.1.0) ## pROC 1.17.0.1 2021-01-13 [1] CRAN (R 4.1.0) ## prodlim 2019.11.13 2019-11-17 [1] CRAN (R 4.1.0) ## promises 1.2.0.1 2021-02-11 [1] CRAN (R 4.1.0) ## purrr * 0.3.4 2020-04-17 [1] CRAN (R 4.1.2) ## qqplotr 0.0.5 2021-04-23 [1] CRAN (R 4.1.0) ## questionr 0.7.5 2021-10-06 [1] CRAN (R 4.1.2) ## R6 2.5.1 2021-08-19 [1] CRAN (R 4.1.1) ## RColorBrewer 1.1-2 2014-12-07 [1] CRAN (R 4.1.0) ## Rcpp 1.0.8 2022-01-13 [1] CRAN (R 4.1.2) ## readr * 2.1.1 2021-11-30 [1] CRAN (R 4.1.2) ## readxl 1.3.1 2019-03-13 [1] CRAN (R 4.1.0) ## recipes * 0.1.17 2021-09-27 [1] CRAN (R 4.1.1) ## repr 1.1.3 2021-01-21 [1] CRAN (R 4.1.1) ## reprex 2.0.0 2021-04-02 [1] CRAN (R 4.1.0) ## reshape 0.8.8 2018-10-23 [1] CRAN (R 4.1.0) ## rlang 0.4.12 2021-10-18 [1] CRAN (R 4.1.1) ## rmarkdown 2.11 2021-09-14 [1] CRAN (R 4.1.1) ## robustbase 0.93-8 2021-06-02 [1] CRAN (R 4.1.0) ## rpart 4.1-15 2019-04-12 [2] CRAN (R 4.1.2) ## rprojroot 2.0.2 2020-11-15 [1] CRAN (R 4.1.0) ## rsample * 0.1.0 2021-05-08 [1] CRAN (R 4.1.0) ## rstudioapi 0.13 2020-11-12 [1] CRAN (R 4.1.0) ## Rttf2pt1 1.3.8 2020-01-10 [1] CRAN (R 4.1.1) ## rvest 1.0.0 2021-03-09 [1] CRAN (R 4.1.0) ## sass 0.4.0 2021-05-12 [1] CRAN (R 4.1.0) ## scales * 1.1.1 2020-05-11 [1] CRAN (R 4.1.0) ## see 0.6.4 2021-05-29 [1] CRAN (R 4.1.0) ## sessioninfo 1.1.1 2018-11-05 [1] CRAN (R 4.1.0) ## shiny 1.6.0 2021-01-25 [1] CRAN (R 4.1.0) ## skimr 2.1.3 2021-03-07 [1] CRAN (R 4.1.1) ## stringi 1.7.6 2021-11-29 [1] CRAN (R 4.1.2) ## stringr * 1.4.0 2019-02-10 [1] CRAN (R 4.1.0) ## survival 3.2-13 2021-08-24 [2] CRAN (R 4.1.2) ## tibble * 3.1.6 2021-11-07 [1] CRAN (R 4.1.1) ## tidymodels * 0.1.4 2021-10-01 [1] CRAN (R 4.1.1) ## tidyr * 1.1.4 2021-09-27 [1] CRAN (R 4.1.1) ## tidyselect 1.1.1 2021-04-30 [1] CRAN (R 4.1.0) ## tidyverse * 1.3.1 2021-04-15 [1] CRAN (R 4.1.2) ## timeDate 3043.102 2018-02-21 [1] CRAN (R 4.1.0) ## tune * 0.1.6 2021-07-21 [1] CRAN (R 4.1.0) ## tzdb 0.2.0 2021-10-27 [1] CRAN (R 4.1.2) ## usethis 2.1.5 2021-12-09 [1] CRAN (R 4.1.2) ## utf8 1.2.2 2021-07-24 [1] CRAN (R 4.1.0) ## vctrs 0.3.8 2021-04-29 [1] CRAN (R 4.1.0) ## vroom 1.5.7 2021-11-30 [1] CRAN (R 4.1.2) ## withr 2.4.3 2021-11-30 [1] CRAN (R 4.1.2) ## workflows * 0.2.3 2021-07-16 [1] CRAN (R 4.1.0) ## workflowsets * 0.1.0 2021-07-22 [1] CRAN (R 4.1.0) ## xfun 0.29 2021-12-14 [1] CRAN (R 4.1.2) ## xml2 1.3.3 2021-11-30 [1] CRAN (R 4.1.2) ## xtable 1.8-4 2019-04-21 [1] CRAN (R 4.1.0) ## yaml 2.2.1 2020-02-01 [1] CRAN (R 4.1.0) ## yardstick * 0.0.8 2021-03-28 [1] CRAN (R 4.1.0) ## ## [1] C:/Users/tdunn/Documents/R/win-library/4.1 ## [2] C:/Program Files/R/R-4.1.2/library "],["resampling-methods.html", "5 Resampling Methods 5.1 Cross Validation 5.2 The Bootstrap 5.3 Lab: Cross-Validation and the Bootstrap 5.4 Exercises", " 5 Resampling Methods Resampling methods are an indispensable tool in modern statistics. They involve repeatedly drawing samples from a training set and refitting a model of interest on each sample in order to obtain additional information about the fitted model. For example, in order to estimate the variability of a linear regression fit, we can repeatedly draw different samples from the training data, fit a linear regression to each new sample, and then examine the extent to which the resulting fits differ. Such an approach may allow us to obtain information that would not be available from fitting the model only once using the original training sample. In this chapter, we discuss two of the most commonly used resampling methods, cross-validation and the bootstrap. Cross-validation is most often used to estimate test error associated with a statistical learning method, whereas the boostrap is most commonly used to provide a measure of accuracy for a given parameter/method. The process of evaluating a models performance is known as model assessment, whereas the process of selecting the proper level of flexibility for a model is known as model selection. 5.1 Cross Validation Sometimes we want to estimate the test error rate using the available training data. A number of approaches can be used for this. In this section we consider methods which involve holding out a subset of the training data from the fitting process, then applying the model to that hold-out set for model assessment. 5.1.1 The Validation Set Approach This simple strategy involves randomly dividing available observations into training and validation sets. The model is fit on the training set, and used to make predictions on the validation set. The corresponding metric from the validation set predictions  usually MSE in the case of a quantitative response  provides an estimate of the test error rate. To illustrate this, load the Auto data set and R packages: auto &lt;- ISLR2::Auto library(tidyverse) library(tidymodels) library(broom) library(gt) library(patchwork) # for composing plots library(tictoc) # Load my R package and set the ggplot theme library(dunnr) extrafont::loadfonts(device = &quot;win&quot;, quiet = TRUE) theme_set(theme_td()) set_geom_fonts() set_palette() Randomly split the data into 50% training and 50% validation, fit on the training set, and compute the MSE on the validation set. Since Ill be repeating this 10 times to reproduce the figure, make a couple functions. First, a function to set a random seed and split the data into training and validation set (called assessment set in the rsample package): auto_validation_split &lt;- function(seed) { set.seed(seed) validation_split(auto, prop = 0.5) } auto_splits &lt;- auto_validation_split(seed = 10) auto_splits ## # Validation Set Split (0.5/0.5) ## # A tibble: 1 x 2 ## splits id ## &lt;list&gt; &lt;chr&gt; ## 1 &lt;split [196/196]&gt; validation Similar to the initial_split workflow, I can access the training and validation sets as follows: training(auto_splits$splits[[1]]) %&gt;% head() ## mpg cylinders displacement horsepower weight acceleration year origin ## 139 14.0 8 318 150 4457 13.5 74 1 ## 333 29.8 4 89 62 1845 15.3 80 2 ## 373 27.0 4 151 90 2735 18.0 82 1 ## 73 15.0 8 304 150 3892 12.5 72 1 ## 213 16.5 8 350 180 4380 12.1 76 1 ## 348 37.0 4 85 65 1975 19.4 81 3 ## name ## 139 dodge coronet custom (sw) ## 333 vokswagen rabbit ## 373 pontiac phoenix ## 73 amc matador (sw) ## 213 cadillac seville ## 348 datsun 210 mpg assessment(auto_splits$splits[[1]]) %&gt;% head() ## mpg cylinders displacement horsepower weight acceleration year origin ## 1 18 8 307 130 3504 12.0 70 1 ## 2 15 8 350 165 3693 11.5 70 1 ## 3 18 8 318 150 3436 11.0 70 1 ## 5 17 8 302 140 3449 10.5 70 1 ## 6 15 8 429 198 4341 10.0 70 1 ## 7 14 8 454 220 4354 9.0 70 1 ## name ## 1 chevrolet chevelle malibu ## 2 buick skylark 320 ## 3 plymouth satellite ## 5 ford torino ## 6 ford galaxie 500 ## 7 chevrolet impala Second, a function to fit 10 models (1 to 10 polynomial degrees of freedom) on the training set, and evaluate on the validation set with fit_resamples.1 auto_rec &lt;- recipe(mpg ~ horsepower, data = auto) lm_workflow &lt;- workflow() %&gt;% add_model(linear_reg()) evaluate_poly_fits &lt;- function(auto_splits) { tibble(poly_df = 1:10) %&gt;% mutate( lm_rec = map( poly_df, ~ auto_rec %&gt;% step_poly(horsepower, degree = .x) ), lm_fit = map( lm_rec, ~ lm_workflow %&gt;% add_recipe(.x) %&gt;% fit_resamples(auto_splits) ), lm_metrics = map(lm_fit, collect_metrics) ) %&gt;% unnest(lm_metrics) %&gt;% filter(.metric == &quot;rmse&quot;) %&gt;% select(poly_df, rmse = mean) } auto_poly_fits_validation &lt;- evaluate_poly_fits(auto_splits) auto_poly_fits_validation ## # A tibble: 10 x 2 ## poly_df rmse ## &lt;int&gt; &lt;dbl&gt; ## 1 1 5.14 ## 2 2 4.46 ## 3 3 4.50 ## 4 4 4.49 ## 5 5 4.39 ## 6 6 4.36 ## 7 7 4.33 ## 8 8 4.33 ## 9 9 4.32 ## 10 10 4.60 Now reproduce Figure 5.2: auto_poly_fits_validation &lt;- bind_rows( # 9 additional sets of fits map_dfr( 1:9, function(seed) { auto_splits &lt;- auto_validation_split(seed) evaluate_poly_fits(auto_splits) }, .id = &quot;rep&quot; ), auto_poly_fits_validation %&gt;% mutate(rep = &quot;10&quot;) ) # Use a 10 color palette from the MetBrewer package pal &lt;- MetBrewer::met.brewer(&quot;Veronese&quot;, 10, type = &quot;continuous&quot;) p2 &lt;- auto_poly_fits_validation %&gt;% ggplot(aes(x = poly_df, y = rmse^2, fill = rep)) + geom_line(aes(color = rep), size = 1) + expand_limits(y = c(15, 30)) + scale_x_continuous(breaks = seq(2, 10, 2)) + scale_color_manual(values = pal) + scale_fill_manual(values = pal) + labs(x = &quot;Degree of polynomial&quot;, y = NULL) + theme(legend.position = &quot;none&quot;) p1 &lt;- p2 %+% filter(auto_poly_fits_validation, rep == &quot;1&quot;) + geom_point(aes(fill = rep), shape = 21, color = &quot;white&quot;, size = 4) + labs(y = &quot;MSE&quot;) p1 | p2 As is clear from the right-hand panel, this approach is highly variable depending on the testing/validation set split. Another downside is that, because the training set used to fit the data has fewer observations, it tends to overestimate the test error rate on the entire data set. 5.1.2 Leave-One-Out Cross Validation Leave-one-out cross validation (LOOCV) attempts to address the shortcomings of the validation set approach. It still involves splitting the \\(n\\) observations into two parts, but it repeats it \\(n\\) times, with a single observation \\((x_i, y_i)\\) as the hold-out set and the remaining \\(n-1\\) observations as the training set. The MSE for each iteration is simply \\(\\text{MSE}_i = (y_i - \\hat{y}_i)^2\\). Then the LOOCV estimate of the MSE is the average over all observations: \\[ \\text{CV}_{(n)} = \\frac{1}{n} \\sum_{i=1}^n \\text{MSE}_i. \\] The LOOCV approach has a few advantages over the validation set approach: First, it has far less bias. In LOOCV, we repeatedly fit the statistical learning method using training sets that contain \\(n  1\\) observations, almost as many as are in the entire data set. This is in contrast to the validation set approach, in which the training set is typically around half the size of the original data set. Consequently, the LOOCV approach tends not to overestimate the test error rate as much as the validation set approach does. Second, in contrast to the validation approach which will yield different results when applied repeatedly due to randomness in the training/validation set splits, performing LOOCV multiple times will always yield the same results: there is no randomness in the training/validation set splits. Define a new function to split the data by LOOCV:2 auto_splits &lt;- loo_cv(auto) auto_splits ## # Leave-one-out cross-validation ## # A tibble: 392 x 2 ## splits id ## &lt;list&gt; &lt;chr&gt; ## 1 &lt;split [391/1]&gt; Resample1 ## 2 &lt;split [391/1]&gt; Resample2 ## 3 &lt;split [391/1]&gt; Resample3 ## 4 &lt;split [391/1]&gt; Resample4 ## 5 &lt;split [391/1]&gt; Resample5 ## 6 &lt;split [391/1]&gt; Resample6 ## 7 &lt;split [391/1]&gt; Resample7 ## 8 &lt;split [391/1]&gt; Resample8 ## 9 &lt;split [391/1]&gt; Resample9 ## 10 &lt;split [391/1]&gt; Resample10 ## # ... with 382 more rows 392 splits, which is the number of observations, as expected. Fit: auto_poly_fits_loo_cv &lt;- evaluate_poly_fits(auto_splits) ## Error: Problem with `mutate()` column `lm_fit`. ## i `lm_fit = map(lm_rec, ~lm_workflow %&gt;% add_recipe(.x) %&gt;% fit_resamples(auto_splits))`. ## x Leave-one-out cross-validation is not currently supported with tune. As the error says, LOOCV is not supported. Heres an explanation I found online: Leave-one-out methods are deficient compared to almost any other method. For anything but pathologically small samples, LOO is computationally excessive and it may not have good statistical properties. Although rsample contains a loo_cv() function, these objects are not generally integrated into the broader tidymodels frameworks. Fair enough. For completeness, I will still get the LOOCV estimates using boot::cv.glm(): auto_poly_fits_loo_cv &lt;- tibble( poly_df = 1:10, mse = map_dbl(poly_df, function(poly_df) { glm_fit &lt;- glm(mpg ~ poly(horsepower, degree = poly_df), data = auto) boot::cv.glm(auto, glm_fit)$delta[1] } ) ) auto_poly_fits_loo_cv ## # A tibble: 10 x 2 ## poly_df mse ## &lt;int&gt; &lt;dbl&gt; ## 1 1 24.2 ## 2 2 19.2 ## 3 3 19.3 ## 4 4 19.4 ## 5 5 19.0 ## 6 6 19.0 ## 7 7 18.8 ## 8 8 19.0 ## 9 9 19.1 ## 10 10 19.5 5.1.3 \\(k\\)-fold Cross-Validation \\(k\\)-fold CV involves randomly dividing the observations into \\(k\\) groups/folds of approximately equal size. The first fold is used as the validation/assessment set, and the remaining \\(k-1\\) folds used to fit the model. This is repeated \\(k\\) times, with each fold being used as the assessment set once. The \\(k\\)-fold CV estimate of the test error is then the average: \\[ \\text{CV}_{(k)} = \\frac{1}{k} \\sum_{i=1}^k \\text{MSE}_i. \\] This should look familiar: It is not hard to see that LOOCV is a special case of \\(k\\)-fold CV in which \\(k\\) is set to equal \\(n\\). In practice, one typically performs \\(k\\)-fold CV using \\(k\\) = 5 or \\(k\\) = 10. What is the advantage of using \\(k\\) = 5 or \\(k\\) = 10 rather than \\(k\\) = \\(n\\)? The most obvious advantage is computational. LOOCV requires fitting the statistical learning method \\(n\\) times. This has the potential to be computationally expensive (except for linear models fit by least squares, in which case formula (5.2) can be used). But cross-validation is a very general approach that can be applied to almost any statistical learning method. Some statistical learning methods have computationally intensive fitting procedures, and so performing LOOCV may pose computational problems, especially if \\(n\\) is extremely large. In contrast, performing 10-fold CV requires fitting the learning procedure only ten times, which may be much more feasible. As we see in Section 5.1.4, there also can be other non-computational advantages to performing 5-fold or 10-fold CV, which involve the bias-variance trade-off. Fit the polynomial models with 10-fold CV: auto_10_fold_cv &lt;- function(seed) { set.seed(seed) vfold_cv(auto, v = 10) } auto_splits &lt;- auto_10_fold_cv(seed = 10) auto_splits ## # 10-fold cross-validation ## # A tibble: 10 x 2 ## splits id ## &lt;list&gt; &lt;chr&gt; ## 1 &lt;split [352/40]&gt; Fold01 ## 2 &lt;split [352/40]&gt; Fold02 ## 3 &lt;split [353/39]&gt; Fold03 ## 4 &lt;split [353/39]&gt; Fold04 ## 5 &lt;split [353/39]&gt; Fold05 ## 6 &lt;split [353/39]&gt; Fold06 ## 7 &lt;split [353/39]&gt; Fold07 ## 8 &lt;split [353/39]&gt; Fold08 ## 9 &lt;split [353/39]&gt; Fold09 ## 10 &lt;split [353/39]&gt; Fold10 auto_poly_fits_10_fold_cv &lt;- evaluate_poly_fits(auto_splits) auto_poly_fits_10_fold_cv ## # A tibble: 10 x 2 ## poly_df rmse ## &lt;int&gt; &lt;dbl&gt; ## 1 1 4.90 ## 2 2 4.35 ## 3 3 4.35 ## 4 4 4.37 ## 5 5 4.31 ## 6 6 4.31 ## 7 7 4.28 ## 8 8 4.29 ## 9 9 4.30 ## 10 10 4.37 Now repeat this another 9 times. Thought it wont take too long to run, Ill make use of parallel to speed it up a bit: ## Loading required package: foreach ## ## Attaching package: &#39;foreach&#39; ## The following objects are masked from &#39;package:purrr&#39;: ## ## accumulate, when ## Loading required package: iterators ## Loading required package: parallel tic() auto_poly_fits_10_fold_cv &lt;- bind_rows( # 9 additional sets of fits map_dfr( 1:9, function(seed) { auto_splits &lt;- auto_10_fold_cv(seed) evaluate_poly_fits(auto_splits) }, .id = &quot;rep&quot; ), auto_poly_fits_10_fold_cv %&gt;% mutate(rep = &quot;10&quot;) ) toc() ## 85.91 sec elapsed Now reproduce Figure 5.4: p2 &lt;- auto_poly_fits_10_fold_cv %&gt;% mutate(mse = rmse^2) %&gt;% ggplot(aes(x = poly_df, y = mse, fill = rep)) + geom_line(aes(color = rep), size = 1) + expand_limits(y = c(15, 30)) + scale_x_continuous(breaks = seq(2, 10, 2)) + scale_color_manual(values = pal) + scale_fill_manual(values = pal) + labs(x = &quot;Degree of polynomial&quot;, y = NULL) + theme(legend.position = &quot;none&quot;) p1 &lt;- p2 %+% mutate(auto_poly_fits_loo_cv, rep = &quot;1&quot;) + geom_point(aes(fill = rep), shape = 21, color = &quot;white&quot;, size = 4) + labs(y = &quot;MSE&quot;) p1 | p2 The \\(k\\)-fold CV approach (right panel) still has some variability due to random splitting, but much less than the validation set approach. As a reminder, with cross-validation we are trying to approximate the true test MSE, which we cannot know for certain unless the data are simulated (like in Figure 5.6). The true error value itself is important if we want to know how a model will perform on independent data. However, if all we care about is parameter(s) that give the minimum error (like the degree of polynomial in these examples), then the CV estimate will usually come close to the true answer. 5.1.4 Bias-Variance Trade-Off for \\(k\\)-Fold Cross-Validation In addition to being computationally more efficient than LOOCV, \\(k\\)-fold CV with \\(k &lt; n\\) also often gives more accurate estimates of the test error rate due to the bias-variance tradeoff. \\(k\\)-fold CV has moderate bias in comparison to LOOCV, which is approximately unbiased. \\(k\\)-fold CV (average over \\(k\\) fitted models) tends to have lower variance than LOOCV (average over \\(n\\) fitted models, highly correlated with each other). To summarize, there is a bias-variance trade-off associated with the choice of \\(k\\) in \\(k\\)-fold cross-validation. Typically, given these considerations, one performs \\(k\\)-fold cross-validation using \\(k\\) = 5 or \\(k\\) = 10, as these values have been shown empirically to yield test error rate estimates that suffer neither from excessively high bias nor from very high variance. 5.1.5 Cross-Validation on Classification Problems Rather than quantitative \\(Y\\), cross-validation works just as well with qualitative \\(Y\\). Instead of MSE, we use the number of misclassified observations, \\(\\text{Err}_i = I(y_i \\neq \\hat{y}_i)\\). The LOOCV error rate: \\[ \\text{CV}_{(n)} = \\frac{1}{n} \\sum_{i=1}^n \\text{Err}_i. \\] The \\(k\\)-fold CV and validation set error rates are defined analogously. 5.2 The Bootstrap The bootstrap is a widely applicable and extremely powerful statistical tool that can be used to quantify the uncertainty associated with a given estimator or statistical learning method. As a simple example, the bootstrap can be used to estimate the standard errors of the coefficients from a linear regression fit. In the specific case of linear regression, this is not particularly useful, since we saw in Chapter 3 that standard statistical software such as R outputs such standard errors automatically. However, the power of the bootstrap lies in the fact that it can be easily applied to a wide range of statistical learning methods, including some for which a measure of variability is otherwise difficult to obtain and is not automatically output by statistical software. The toy example in this section is about investment in two assets \\(X\\) and \\(Y\\). We wish to choose a fraction \\(\\alpha\\) of investment into \\(X\\) which minimizes the total variance (risk) of the investment. In can be shown that the optimal value is given by: \\[ \\alpha = \\frac{\\sigma_Y^2 - \\sigma_{XY}}{\\sigma_X^2 + \\sigma_Y^2 - 2\\sigma_{XY}}, \\] where \\(\\sigma_X^2 = \\text{Var}(X)\\), \\(\\sigma_Y^2 = \\text{Var}(Y)\\), and \\(\\sigma_{XY} = \\text{Cov}(X, Y)\\). In reality, we dont know these variances and covariance, so we estimate them (e.g. \\(\\hat{\\sigma}_X^2\\)) using observations of \\(X\\) and \\(Y\\) to get an estimated \\(\\hat{\\alpha}\\). To illustrate, we simulate 100 pairs of \\(X\\) and \\(Y\\), and compute the estimated \\(\\alpha\\). The simulation parameters are \\(\\sigma_X^2 = 1\\), \\(\\sigma_Y^2 = 1.25\\), and \\(\\sigma_{XY} = 0.5\\). Presumably, these are bivariate normally distributed, which I can simulate with the mvtnorm package: library(mvtnorm) sigma_x &lt;- 1 sigma_y &lt;- sqrt(1.25) sigma_xy &lt;- 0.5 # The variance-covariance matrix sigma &lt;- matrix(c(sigma_x^2, sigma_xy, sigma_xy, sigma_y^2), nrow = 2) # Generate 5 observations rmvnorm(n = 5, mean = c(0, 0), sigma = sigma) ## [,1] [,2] ## [1,] -0.6198186 0.2723180 ## [2,] -0.4510171 -1.4568201 ## [3,] -0.0302161 -1.3962636 ## [4,] -0.3405990 -0.3004827 ## [5,] -0.3552014 1.1948117 Write a function to compute \\(\\alpha\\) from the simulated \\(X\\) and \\(Y\\): sim_alpha &lt;- function(xy = NULL) { if (is.null(xy)) { xy &lt;- rmvnorm(n = 100, mean = c(0, 0), sigma = sigma) } x &lt;- xy[,1]; y &lt;- xy[,2] (var(y) - cov(x, y)) / (var(x) + var(y) - 2 * cov(x, y)) } sim_alpha() ## [1] 0.577909 Run four simulations and plot \\(X\\) vs \\(Y\\) for Figure 5.9 set.seed(319) d4 &lt;- tibble(sim = 1:4) %&gt;% rowwise() %&gt;% mutate(xy = list(rmvnorm(n = 100, mean = c(0, 0), sigma = sigma))) %&gt;% ungroup() %&gt;% mutate(alpha = map_dbl(xy, sim_alpha) %&gt;% round(3), x = map(xy, ~ .x[,1]), y = map(xy, ~ .x[,2])) %&gt;% unnest(cols = c(x, y)) d4 %&gt;% ggplot(aes(x, y)) + geom_point(color = td_colors$nice$emerald, size = 2) + facet_wrap(~alpha, labeller = &quot;label_both&quot;) + add_facet_borders() For Figure 5.10, I first simulate 1000 data sets from the true population and estimate \\(\\alpha\\) for each: d &lt;- bind_rows( d4 %&gt;% distinct(sim, alpha), tibble(sim = 5:1000) %&gt;% rowwise() %&gt;% mutate(alpha = sim_alpha()) %&gt;% ungroup() ) d ## # A tibble: 1,000 x 2 ## sim alpha ## &lt;int&gt; &lt;dbl&gt; ## 1 1 0.555 ## 2 2 0.622 ## 3 3 0.615 ## 4 4 0.453 ## 5 5 0.588 ## 6 6 0.605 ## 7 7 0.483 ## 8 8 0.598 ## 9 9 0.602 ## 10 10 0.633 ## # ... with 990 more rows And then, using just the first simulated data set, use the rsample::boostraps() function to generate 1000 bootstrap resamples: d1_boot &lt;- d4 %&gt;% filter(sim == 1) %&gt;% select(x, y) %&gt;% rsample::bootstraps(times = 1000) d1_boot ## # Bootstrap sampling ## # A tibble: 1,000 x 2 ## splits id ## &lt;list&gt; &lt;chr&gt; ## 1 &lt;split [100/34]&gt; Bootstrap0001 ## 2 &lt;split [100/37]&gt; Bootstrap0002 ## 3 &lt;split [100/32]&gt; Bootstrap0003 ## 4 &lt;split [100/35]&gt; Bootstrap0004 ## 5 &lt;split [100/39]&gt; Bootstrap0005 ## 6 &lt;split [100/38]&gt; Bootstrap0006 ## 7 &lt;split [100/43]&gt; Bootstrap0007 ## 8 &lt;split [100/39]&gt; Bootstrap0008 ## 9 &lt;split [100/31]&gt; Bootstrap0009 ## 10 &lt;split [100/44]&gt; Bootstrap0010 ## # ... with 990 more rows Compute \\(\\hat{\\alpha}\\) from each split: d1_boot_alpha &lt;- map_dbl( d1_boot$splits, function(split) { xy &lt;- as.data.frame(split) sim_alpha(as.matrix(xy)) } ) Now reproduce the figure: d &lt;- bind_rows( d %&gt;% mutate(population = &quot;true&quot;), tibble(alpha = d1_boot_alpha, population = &quot;bootstrap resamples&quot;) ) %&gt;% mutate(population = fct_rev(population)) true_alpha &lt;- (sigma_y^2 - sigma_xy) / (sigma_x^2 + sigma_y^2 - 2 * sigma_xy) p1 &lt;- d %&gt;% ggplot(aes(x = alpha, fill = population)) + geom_histogram(binwidth = 0.05, show.legend = FALSE, color = &quot;black&quot;) + geom_vline(xintercept = true_alpha, color = td_colors$nice$light_coral, size = 1.5) + facet_wrap(~ population, nrow = 1) + scale_fill_manual(values = c(td_colors$nice$soft_orange, td_colors$nice$strong_blue)) p2 &lt;- d %&gt;% ggplot(aes(y = alpha, x = population)) + geom_boxplot(aes(fill = population), show.legend = FALSE) + geom_hline(yintercept = true_alpha, color = td_colors$nice$light_coral, size = 1.5) + scale_fill_manual(values = c(td_colors$nice$soft_orange, td_colors$nice$strong_blue)) p1 | p2 Note that the histogram looks very similar to the left-hand panel, which displays the idealized histogram of the estimates of  obtained by generating 1,000 simulated data sets from the true population. In particular the bootstrap estimate \\(\\text{SE}(\\hat{\\alpha})\\) from (5.8) is 0.087, very close to the estimate of 0.083 obtained using 1,000 simulated data sets. The right-hand panel displays the information in the center and left panels in a different way, via boxplots of the estimates for \\(\\alpha\\) obtained by generating 1,000 simulated data sets from the true population and using the bootstrap approach. Again, the boxplots have similar spreads, indicating that the bootstrap approach can be used to effectively estimate the variability associated with \\(\\hat{\\alpha}\\). 5.3 Lab: Cross-Validation and the Bootstrap 5.3.1 The Validation Set Approach Here are the MSE values as computed in @ref(#validation-set): auto_poly_fits_validation %&gt;% filter(poly_df &lt;= 3, rep == 1) %&gt;% mutate(mse = rmse^2) ## # A tibble: 3 x 4 ## rep poly_df rmse mse ## &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 1 1 4.82 23.3 ## 2 1 2 4.33 18.7 ## 3 1 3 4.34 18.8 5.3.2 Leave-One-Out Cross-Validation Because LOOCV is deterministic (not random), the process in 5.1.2 produces the same MSE values: auto_poly_fits_loo_cv ## # A tibble: 10 x 2 ## poly_df mse ## &lt;int&gt; &lt;dbl&gt; ## 1 1 24.2 ## 2 2 19.2 ## 3 3 19.3 ## 4 4 19.4 ## 5 5 19.0 ## 6 6 19.0 ## 7 7 18.8 ## 8 8 19.0 ## 9 9 19.1 ## 10 10 19.5 5.3.3 \\(k\\)-fold Cross-Validation The MSE values as computed in 5.1.3: auto_poly_fits_10_fold_cv %&gt;% filter(rep == 1) %&gt;% mutate(mse = rmse^2) ## # A tibble: 10 x 4 ## rep poly_df rmse mse ## &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 1 1 4.87 23.7 ## 2 1 2 4.31 18.6 ## 3 1 3 4.31 18.6 ## 4 1 4 4.32 18.7 ## 5 1 5 4.28 18.3 ## 6 1 6 4.28 18.3 ## 7 1 7 4.24 18.0 ## 8 1 8 4.26 18.1 ## 9 1 9 4.26 18.2 ## 10 1 10 4.32 18.7 5.3.4 The Bootstrap Estimating the Accuracy of a Statistic of Interest portfolio &lt;- ISLR2::Portfolio glimpse(portfolio) ## Rows: 100 ## Columns: 2 ## $ X &lt;dbl&gt; -0.89525089, -1.56245433, -0.41708988, 1.04435573, -0.31556841, -1.7~ ## $ Y &lt;dbl&gt; -0.2349235, -0.8851760, 0.2718880, -0.7341975, 0.8419834, -2.0371910~ The tidymodels approach to bootstrap estimates, as in 5.2: portfolio_boot &lt;- bootstraps(portfolio, times = 1000) portfolio_boot_alpha &lt;- map_dbl( portfolio_boot$splits, function(split) { xy &lt;- as.data.frame(split) (var(xy$Y) - cov(xy$X, xy$Y)) / (var(xy$X) + var(xy$Y) - 2 * cov(xy$X, xy$Y)) } ) mean(portfolio_boot_alpha); sd(portfolio_boot_alpha) ## [1] 0.5784967 ## [1] 0.08952573 Estimating the Accuracy of a Regression Model The bootstrap approach can be used to assess the variability of the coefficient estimates and predictions from a statistical learning method. Here we use the bootstrap approach in order to assess the variability of the estimates for \\(\\beta_0\\) and \\(\\beta_1\\), the intercept and slope terms for the linear regression model that uses horsepower to predict mpg in the Auto data set. We will compare the estimates obtained using the bootstrap to those obtained using the formulas for \\(\\text{SE}(\\hat{\\beta}_0)\\) and \\(\\text{SE}(\\hat{\\beta}_1)\\) described in Section 3.1.2. auto_boot &lt;- bootstraps(auto, times = 1000) By default, the tune::fit_resamples() function does not keep the model object from each fit. Usually, all we care about is the performance metrics and (if were tuning) the best hyper parameters. So in order to get the actual regression coefficients, I need to provide a control_grid() object to the control argument of fit_resamples() (see this article for more explanation): get_lm_coefs &lt;- function(x) { x %&gt;% extract_fit_engine() %&gt;% broom::tidy() } tidy_ctrl &lt;- control_grid(extract = get_lm_coefs) Now fit the resamples with this with control object: tic() auto_boot_fit &lt;- workflow() %&gt;% add_model(linear_reg()) %&gt;% add_recipe(recipe(mpg ~ horsepower, data = auto)) %&gt;% fit_resamples(auto_boot, control = tidy_ctrl) toc() ## 78.14 sec elapsed auto_boot_fit %&gt;% head() ## # A tibble: 6 x 5 ## splits id .metrics .notes .extracts ## &lt;list&gt; &lt;chr&gt; &lt;list&gt; &lt;list&gt; &lt;list&gt; ## 1 &lt;split [392/152]&gt; Bootstrap0001 &lt;tibble [2 x 4]&gt; &lt;tibble [0 x 1]&gt; &lt;tibble [1 ~ ## 2 &lt;split [392/145]&gt; Bootstrap0002 &lt;tibble [2 x 4]&gt; &lt;tibble [0 x 1]&gt; &lt;tibble [1 ~ ## 3 &lt;split [392/152]&gt; Bootstrap0003 &lt;tibble [2 x 4]&gt; &lt;tibble [0 x 1]&gt; &lt;tibble [1 ~ ## 4 &lt;split [392/154]&gt; Bootstrap0004 &lt;tibble [2 x 4]&gt; &lt;tibble [0 x 1]&gt; &lt;tibble [1 ~ ## 5 &lt;split [392/139]&gt; Bootstrap0005 &lt;tibble [2 x 4]&gt; &lt;tibble [0 x 1]&gt; &lt;tibble [1 ~ ## 6 &lt;split [392/138]&gt; Bootstrap0006 &lt;tibble [2 x 4]&gt; &lt;tibble [0 x 1]&gt; &lt;tibble [1 ~ The .extracts column contains the tidy model objects. It is a but clunky to work with  it is a list column with a list of tibbles, so requires tidyr::unnest() twice: # A single `.extracts` element, which contains a tibble auto_boot_fit$.extracts[[1]] ## # A tibble: 1 x 2 ## .extracts .config ## &lt;list&gt; &lt;chr&gt; ## 1 &lt;tibble [2 x 5]&gt; Preprocessor1_Model1 # Using `unnest` to get all `.extracts` auto_boot_fit_coefs &lt;- auto_boot_fit %&gt;% unnest(.extracts) %&gt;% unnest(.extracts) %&gt;% select(id, term, estimate, std.error) auto_boot_fit_coefs %&gt;% head() ## # A tibble: 6 x 4 ## id term estimate std.error ## &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 Bootstrap0001 (Intercept) 39.4 0.695 ## 2 Bootstrap0001 horsepower -0.154 0.00601 ## 3 Bootstrap0002 (Intercept) 37.6 0.665 ## 4 Bootstrap0002 horsepower -0.139 0.00587 ## 5 Bootstrap0003 (Intercept) 39.6 0.688 ## 6 Bootstrap0003 horsepower -0.154 0.00620 Then taking the mean of the estimates, and applying equation 5.8 to get the standard error: auto_boot_fit_coefs %&gt;% group_by(term) %&gt;% summarise( mean_estimate = mean(estimate), se_estimate = sqrt( (1 / (n() - 1)) * sum((estimate - mean_estimate)^2) ), .groups = &quot;drop&quot; ) %&gt;% gt() %&gt;% fmt_number(columns = -term, decimals = 4) html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #ygtskbpuab .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #ygtskbpuab .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #ygtskbpuab .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #ygtskbpuab .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #ygtskbpuab .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #ygtskbpuab .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #ygtskbpuab .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #ygtskbpuab .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #ygtskbpuab .gt_column_spanner_outer:first-child { padding-left: 0; } #ygtskbpuab .gt_column_spanner_outer:last-child { padding-right: 0; } #ygtskbpuab .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #ygtskbpuab .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #ygtskbpuab .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #ygtskbpuab .gt_from_md > :first-child { margin-top: 0; } #ygtskbpuab .gt_from_md > :last-child { margin-bottom: 0; } #ygtskbpuab .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #ygtskbpuab .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #ygtskbpuab .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #ygtskbpuab .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #ygtskbpuab .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #ygtskbpuab .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #ygtskbpuab .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #ygtskbpuab .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #ygtskbpuab .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #ygtskbpuab .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #ygtskbpuab .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #ygtskbpuab .gt_sourcenote { font-size: 90%; padding: 4px; } #ygtskbpuab .gt_left { text-align: left; } #ygtskbpuab .gt_center { text-align: center; } #ygtskbpuab .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #ygtskbpuab .gt_font_normal { font-weight: normal; } #ygtskbpuab .gt_font_bold { font-weight: bold; } #ygtskbpuab .gt_font_italic { font-style: italic; } #ygtskbpuab .gt_super { font-size: 65%; } #ygtskbpuab .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } term mean_estimate se_estimate (Intercept) 39.9855 0.8707 horsepower &minus;0.1583 0.0075 Not exactly the same as those in the text due to the difference in the random bootstrap samples. And here are the SE estimates using the formula from section 3.1.2: tidy(lm(mpg ~ horsepower, data = auto)) %&gt;% select(term, estimate, se_estimate = std.error) %&gt;% gt() %&gt;% fmt_number(columns = -term, decimals = 4) html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #qtmzcvzhec .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #qtmzcvzhec .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #qtmzcvzhec .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #qtmzcvzhec .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #qtmzcvzhec .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #qtmzcvzhec .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #qtmzcvzhec .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #qtmzcvzhec .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #qtmzcvzhec .gt_column_spanner_outer:first-child { padding-left: 0; } #qtmzcvzhec .gt_column_spanner_outer:last-child { padding-right: 0; } #qtmzcvzhec .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #qtmzcvzhec .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #qtmzcvzhec .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #qtmzcvzhec .gt_from_md > :first-child { margin-top: 0; } #qtmzcvzhec .gt_from_md > :last-child { margin-bottom: 0; } #qtmzcvzhec .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #qtmzcvzhec .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #qtmzcvzhec .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #qtmzcvzhec .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #qtmzcvzhec .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #qtmzcvzhec .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #qtmzcvzhec .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #qtmzcvzhec .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #qtmzcvzhec .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #qtmzcvzhec .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #qtmzcvzhec .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #qtmzcvzhec .gt_sourcenote { font-size: 90%; padding: 4px; } #qtmzcvzhec .gt_left { text-align: left; } #qtmzcvzhec .gt_center { text-align: center; } #qtmzcvzhec .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #qtmzcvzhec .gt_font_normal { font-weight: normal; } #qtmzcvzhec .gt_font_bold { font-weight: bold; } #qtmzcvzhec .gt_font_italic { font-style: italic; } #qtmzcvzhec .gt_super { font-size: 65%; } #qtmzcvzhec .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } term estimate se_estimate (Intercept) 39.9359 0.7175 horsepower &minus;0.1578 0.0064 There are quite different to the bootstrap estimates. Does this indicate a problem with the bootstrap? In fact, it suggests the opposite. Recall that the standard formulas given in Equation 3.8 on page 66 rely on certain assumptions. For example, they depend on the unknown parameter \\(\\sigma^2\\), the noise variance. We then estimate \\(\\sigma^2\\) using the RSS. Now although the formulas for the standard errors do not rely on the linear model being correct, the estimate for \\(\\sigma^2\\) does. We see in Figure 3.8 on page 91 that there is a non-linear relationship in the data, and so the residuals from a linear fit will be inflated, and so will \\(\\hat{\\sigma}^2\\). Secondly, the standard formulas assume (somewhat unrealistically) that the \\(x_i\\) are fixed, and all the variability comes from the variation in the errors \\(\\epsilon_i\\). The bootstrap approach does not rely on any of these assumptions, and so it is likely giving a more accurate estimate of the standard errors of \\(\\hat{\\beta}_0\\) and \\(\\hat{\\beta}_1\\) than is the summary() function. We can find better correspondence between bootstrap and regression estimates if we use the quadratic model because it better fits the data: tic() auto_boot_quad_fit &lt;- workflow() %&gt;% add_model(linear_reg()) %&gt;% add_recipe( recipe(mpg ~ horsepower, data = auto) %&gt;% # Need to set `raw` = TRUE to not use orthogonal polynomials step_poly(horsepower, degree = 2, options = list(raw = TRUE)) ) %&gt;% fit_resamples(auto_boot, control = tidy_ctrl) toc() ## 82.58 sec elapsed auto_boot_quad_fit %&gt;% unnest(.extracts) %&gt;% unnest(.extracts) %&gt;% group_by(term) %&gt;% summarise( mean_estimate = mean(estimate), se_estimate = sqrt( (1 / (n() - 1)) * sum((estimate - mean_estimate)^2) ), .groups = &quot;drop&quot; ) %&gt;% gt() %&gt;% fmt_number(columns = -term, decimals = 4) html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #uyasfyvmkp .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #uyasfyvmkp .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #uyasfyvmkp .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #uyasfyvmkp .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #uyasfyvmkp .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #uyasfyvmkp .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #uyasfyvmkp .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #uyasfyvmkp .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #uyasfyvmkp .gt_column_spanner_outer:first-child { padding-left: 0; } #uyasfyvmkp .gt_column_spanner_outer:last-child { padding-right: 0; } #uyasfyvmkp .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #uyasfyvmkp .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #uyasfyvmkp .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #uyasfyvmkp .gt_from_md > :first-child { margin-top: 0; } #uyasfyvmkp .gt_from_md > :last-child { margin-bottom: 0; } #uyasfyvmkp .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #uyasfyvmkp .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #uyasfyvmkp .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #uyasfyvmkp .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #uyasfyvmkp .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #uyasfyvmkp .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #uyasfyvmkp .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #uyasfyvmkp .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #uyasfyvmkp .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #uyasfyvmkp .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #uyasfyvmkp .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #uyasfyvmkp .gt_sourcenote { font-size: 90%; padding: 4px; } #uyasfyvmkp .gt_left { text-align: left; } #uyasfyvmkp .gt_center { text-align: center; } #uyasfyvmkp .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #uyasfyvmkp .gt_font_normal { font-weight: normal; } #uyasfyvmkp .gt_font_bold { font-weight: bold; } #uyasfyvmkp .gt_font_italic { font-style: italic; } #uyasfyvmkp .gt_super { font-size: 65%; } #uyasfyvmkp .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } term mean_estimate se_estimate (Intercept) 56.9755 2.1490 horsepower_poly_1 &minus;0.4673 0.0340 horsepower_poly_2 0.0012 0.0001 # Need to set `raw` = TRUE to not use orthogonal polynomials tidy(lm(mpg ~ poly(horsepower, 2, raw = TRUE), data = auto)) %&gt;% select(term, estimate, se_estimate = std.error) %&gt;% gt() %&gt;% fmt_number(columns = -term, decimals = 4) html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #zkvxoecmrv .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #zkvxoecmrv .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #zkvxoecmrv .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #zkvxoecmrv .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #zkvxoecmrv .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #zkvxoecmrv .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #zkvxoecmrv .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #zkvxoecmrv .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #zkvxoecmrv .gt_column_spanner_outer:first-child { padding-left: 0; } #zkvxoecmrv .gt_column_spanner_outer:last-child { padding-right: 0; } #zkvxoecmrv .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #zkvxoecmrv .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #zkvxoecmrv .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #zkvxoecmrv .gt_from_md > :first-child { margin-top: 0; } #zkvxoecmrv .gt_from_md > :last-child { margin-bottom: 0; } #zkvxoecmrv .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #zkvxoecmrv .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #zkvxoecmrv .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #zkvxoecmrv .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #zkvxoecmrv .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #zkvxoecmrv .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #zkvxoecmrv .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #zkvxoecmrv .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #zkvxoecmrv .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #zkvxoecmrv .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #zkvxoecmrv .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #zkvxoecmrv .gt_sourcenote { font-size: 90%; padding: 4px; } #zkvxoecmrv .gt_left { text-align: left; } #zkvxoecmrv .gt_center { text-align: center; } #zkvxoecmrv .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #zkvxoecmrv .gt_font_normal { font-weight: normal; } #zkvxoecmrv .gt_font_bold { font-weight: bold; } #zkvxoecmrv .gt_font_italic { font-style: italic; } #zkvxoecmrv .gt_super { font-size: 65%; } #zkvxoecmrv .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } term estimate se_estimate (Intercept) 56.9001 1.8004 poly(horsepower, 2, raw = TRUE)1 &minus;0.4662 0.0311 poly(horsepower, 2, raw = TRUE)2 0.0012 0.0001 5.4 Exercises Applied 5. Logistic regression with default default &lt;- ISLR2::Default Fit a logistic regression model that uses income and balance to predict default. default_workflow &lt;- workflow() %&gt;% add_model(logistic_reg(mode = &quot;classification&quot;, engine = &quot;glm&quot;)) default_rec &lt;- recipe(default ~ income + balance, data = default) default_fit &lt;- default_workflow %&gt;% add_recipe(default_rec) %&gt;% fit(data = default) extract_fit_parsnip(default_fit) ## parsnip model object ## ## Fit time: 30ms ## ## Call: stats::glm(formula = ..y ~ ., family = stats::binomial, data = data) ## ## Coefficients: ## (Intercept) income balance ## -1.154e+01 2.081e-05 5.647e-03 ## ## Degrees of Freedom: 9999 Total (i.e. Null); 9997 Residual ## Null Deviance: 2921 ## Residual Deviance: 1579 AIC: 1585 Using the validation set approach, estimate the test error of this model. Set seed and split: set.seed(940) default_splits &lt;- validation_split(default, prop = 0.5) Fit and evaluate the model with the hold out: default_fit_validation &lt;- default_workflow %&gt;% add_recipe(default_rec) %&gt;% fit_resamples(default_splits) collect_metrics(default_fit_validation) ## # A tibble: 2 x 6 ## .metric .estimator mean n std_err .config ## &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;int&gt; &lt;dbl&gt; &lt;chr&gt; ## 1 accuracy binary 0.973 1 NA Preprocessor1_Model1 ## 2 roc_auc binary 0.949 1 NA Preprocessor1_Model1 The accuracy of the model is 97.26% and so the test error is 2.74%. The tidymodels workflow made fitting and assessing this model very easy  just 5 lines of code. For comparison purposes, here is how you could do it without tidymodels (excluding the data splitting part): default_train &lt;- training(default_splits$splits[[1]]) default_assess &lt;- assessment(default_splits$splits[[1]]) default_glm &lt;- glm(default ~ income + balance, data = default_train, family = &quot;binomial&quot;) augment(default_glm, newdata = default_assess, type.predict = &quot;response&quot;) %&gt;% mutate(default_pred = ifelse(.fitted &gt; 0.5, &quot;Yes&quot;, &quot;No&quot;)) %&gt;% summarise(error_rate = mean(default != default_pred)) %&gt;% .$error_rate %&gt;% scales::percent(accuracy = 0.1) ## [1] &quot;2.7%&quot; Repeat the process in (b) three times, using three different splits of the observations. Comment on the results. set.seed(109) bind_rows( collect_metrics(default_fit_validation) %&gt;% mutate(rep = 1), map_dfr(2:4, function(rep) { default_workflow %&gt;% add_recipe(default_rec) %&gt;% fit_resamples(validation_split(default, prop = 0.5)) %&gt;% collect_metrics() %&gt;% mutate(rep = rep) } ) ) %&gt;% filter(.metric == &quot;accuracy&quot;) %&gt;% transmute( rep, accuracy = scales::percent(mean, accuracy = 0.01), test_error = scales::percent(1 - mean, accuracy = 0.01) ) %&gt;% gt() html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #zqpjldwoxf .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #zqpjldwoxf .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #zqpjldwoxf .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #zqpjldwoxf .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #zqpjldwoxf .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #zqpjldwoxf .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #zqpjldwoxf .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #zqpjldwoxf .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #zqpjldwoxf .gt_column_spanner_outer:first-child { padding-left: 0; } #zqpjldwoxf .gt_column_spanner_outer:last-child { padding-right: 0; } #zqpjldwoxf .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #zqpjldwoxf .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #zqpjldwoxf .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #zqpjldwoxf .gt_from_md > :first-child { margin-top: 0; } #zqpjldwoxf .gt_from_md > :last-child { margin-bottom: 0; } #zqpjldwoxf .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #zqpjldwoxf .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #zqpjldwoxf .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #zqpjldwoxf .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #zqpjldwoxf .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #zqpjldwoxf .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #zqpjldwoxf .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #zqpjldwoxf .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #zqpjldwoxf .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #zqpjldwoxf .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #zqpjldwoxf .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #zqpjldwoxf .gt_sourcenote { font-size: 90%; padding: 4px; } #zqpjldwoxf .gt_left { text-align: left; } #zqpjldwoxf .gt_center { text-align: center; } #zqpjldwoxf .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #zqpjldwoxf .gt_font_normal { font-weight: normal; } #zqpjldwoxf .gt_font_bold { font-weight: bold; } #zqpjldwoxf .gt_font_italic { font-style: italic; } #zqpjldwoxf .gt_super { font-size: 65%; } #zqpjldwoxf .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } rep accuracy test_error 1 97.26% 2.74% 2 97.52% 2.48% 3 97.46% 2.54% 4 97.26% 2.74% The estimates are actually quite stable. Add the dummy variable student to the logistic regression model. Comment on whether or not this leads to a reduction in the test error rate. default_rec_student &lt;- recipe(default ~ income + balance + student, data = default) %&gt;% step_dummy(student) default_fit_validation_student &lt;- default_workflow %&gt;% add_recipe(default_rec_student) %&gt;% fit_resamples(default_splits) collect_metrics(default_fit_validation_student) ## # A tibble: 2 x 6 ## .metric .estimator mean n std_err .config ## &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;int&gt; &lt;dbl&gt; &lt;chr&gt; ## 1 accuracy binary 0.972 1 NA Preprocessor1_Model1 ## 2 roc_auc binary 0.949 1 NA Preprocessor1_Model1 Adding the student variable resulted in a test error rate of 2.78% which is only sligthly lower than the model without student. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
